{
  "address": "0x1914DaD7Bf9dA8Cf40CD6bD8f6434F52eAD78980",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "eventByte",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTimestamp",
          "type": "uint256"
        }
      ],
      "name": "EventOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "eventByte",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "EventVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Payout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "eventByte",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "isBuy",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isYay",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "shareAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ethAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subjectEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct UnlonelySharesV2.TradeInfo",
          "name": "trade",
          "type": "tuple"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyVotes",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "claimVotePayout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "closeEventIfNoWinners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventEndTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "generateKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "getHolderBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getVotePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVerifier",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nayVotesBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nayVotesSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_eventEndTimestamp",
          "type": "uint256"
        }
      ],
      "name": "openEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceSlope",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeDestination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sellVotes",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeDestination",
          "type": "address"
        }
      ],
      "name": "setFeeDestination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setSubjectFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "verifyEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votingPooledEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "yayVotesBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "yayVotesSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb16ed7eeae509cdb505bc5b5389ff6338e12a0e64b82935f002b2f0b3153ec93",
  "receipt": {
    "to": null,
    "from": "0x141Edb16C70307Cf2F0f04aF2dDa75423a0E1bEa",
    "contractAddress": "0x1914DaD7Bf9dA8Cf40CD6bD8f6434F52eAD78980",
    "transactionIndex": 10,
    "gasUsed": "4032739",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000400000001000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000001000000000000000000000000000000020000000000000000000000000400000000000000000000000000000000000000000",
    "blockHash": "0xd128d7734159f39e4597ed1f4df7ca3407c68ccfcd6b227b8de24db707f982ef",
    "transactionHash": "0xb16ed7eeae509cdb505bc5b5389ff6338e12a0e64b82935f002b2f0b3153ec93",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 6767379,
        "transactionHash": "0xb16ed7eeae509cdb505bc5b5389ff6338e12a0e64b82935f002b2f0b3153ec93",
        "address": "0x1914DaD7Bf9dA8Cf40CD6bD8f6434F52eAD78980",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000141edb16c70307cf2f0f04af2dda75423a0e1bea"
        ],
        "data": "0x",
        "logIndex": 18,
        "blockHash": "0xd128d7734159f39e4597ed1f4df7ca3407c68ccfcd6b227b8de24db707f982ef"
      }
    ],
    "blockNumber": 6767379,
    "cumulativeGasUsed": "5490745",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "52d5d42a1d60484826e01ffaa5fe7d5b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"}],\"name\":\"EventOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"EventVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subjectEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct UnlonelySharesV2.TradeInfo\",\"name\":\"trade\",\"type\":\"tuple\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyVotes\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"claimVotePayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"closeEventIfNoWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventEndTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"generateKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getHolderBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getVotePayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVerifier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nayVotesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nayVotesSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_eventEndTimestamp\",\"type\":\"uint256\"}],\"name\":\"openEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceSlope\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellVotes\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setSubjectFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"verifyEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votingPooledEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"yayVotesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"yayVotesSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UnlonelySharesV2.sol\":\"UnlonelySharesV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"contracts/UnlonelySharesV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _transferOwnership(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if the sender is not the owner.\\r\\n     */\\r\\n    function _checkOwner() internal view virtual {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Internal function without access restriction.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract UnlonelySharesV2 is Ownable, ReentrancyGuard {\\r\\n    // bytes32 is a unique identifier for each event that takes in:\\r\\n    // eventAddress: this is the address of the event owner, so channel owner (previously was sharesSubject)\\r\\n    // eventId: this is numerical and unique ID on our backend to differentiate between events for one channel\\r\\n    // eventType: this is the type of event, which can be YayVote, NayVote, or VIPBadge\\r\\n    // and combines all three into one bytes32 key\\r\\n\\r\\n    enum EventType {\\r\\n        YayNayVote,\\r\\n        VIPBadge\\r\\n    }\\r\\n\\r\\n    address public protocolFeeDestination;\\r\\n    uint256 public protocolFeePercent;\\r\\n    uint256 public subjectFeePercent;\\r\\n    uint256 public priceSlope;\\r\\n\\r\\n    struct TradeInfo {\\r\\n        address trader;\\r\\n        bytes32 eventByte;\\r\\n        bool isBuy;\\r\\n        bool isYay;\\r\\n        uint256 shareAmount;\\r\\n        uint256 ethAmount;\\r\\n        uint256 protocolEthAmount;\\r\\n        uint256 subjectEthAmount;\\r\\n        uint256 supply;\\r\\n    }\\r\\n\\r\\n    // ~~~~~~~~~~~~~~~~~~~TODO: edit events to include all types of trades~~~~~~~~~~~~~~~~~~\\r\\n    event Trade(TradeInfo trade);\\r\\n    event EventOpened(bytes32 eventByte, uint256 endTimestamp);\\r\\n    event EventVerified(bytes32 eventByte, bool result);\\r\\n    event Payout(address indexed voter, uint256 amount);\\r\\n\\r\\n    // this is a mapping between events and their holders which each own an amount of yay/nay votes\\r\\n    mapping(bytes32 => mapping(address => uint256)) public yayVotesBalance;\\r\\n    mapping(bytes32 => mapping(address => uint256)) public nayVotesBalance;\\r\\n\\r\\n    mapping(bytes32 => uint256) public yayVotesSupply;\\r\\n    mapping(bytes32 => uint256) public nayVotesSupply;\\r\\n\\r\\n    mapping(bytes32 => bool) public eventVerified;\\r\\n    mapping(bytes32 => bool) public eventResult;\\r\\n    mapping(bytes32 => uint256) public eventEndTimestamp;\\r\\n\\r\\n    // this is a mapping between sharesSubject and total amount of ETH in the pool\\r\\n    mapping(bytes32 => uint256) public votingPooledEth;\\r\\n\\r\\n    // user roles\\r\\n    mapping(address => bool) public isVerifier;\\r\\n\\r\\n    modifier onlyVerifier() {\\r\\n        require(isVerifier[msg.sender], \\\"Caller is not a verifier\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validEventType(EventType eventType) {\\r\\n        require(\\r\\n            eventType == EventType.YayNayVote,\\r\\n            \\\"Invalid event type\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        // Set the contract deployer as the initial verifier\\r\\n        isVerifier[msg.sender] = true;\\r\\n\\r\\n        protocolFeePercent = 5 * 10**16; // 5%\\r\\n        subjectFeePercent = 5 * 10**16;  // 5%\\r\\n        priceSlope = 5 * 10**14; // 0.0005\\r\\n    }\\r\\n\\r\\n    function setFeeDestination(address _feeDestination) public onlyOwner {\\r\\n        protocolFeeDestination = _feeDestination;\\r\\n    }\\r\\n\\r\\n    function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        protocolFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        subjectFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setVerifier(address verifier, bool value) public onlyOwner {\\r\\n        isVerifier[verifier] = value;\\r\\n    }\\r\\n\\r\\n    // function setPriceSlope(uint256 value) public onlyOwner {\\r\\n    //     priceSlope = value;\\r\\n    // }\\r\\n\\r\\n\\tfunction generateKey(address eventAddress, uint256 eventId, EventType eventType) public pure validEventType(eventType) returns (bytes32) {\\r\\n        require(eventId < 1000000, \\\"ID must be less than 1 million\\\");\\r\\n        return keccak256(abi.encodePacked(eventAddress, eventId, eventType));\\r\\n    }\\r\\n\\r\\n    function openEvent(address eventAddress, uint256 eventId, EventType eventType, uint256 _eventEndTimestamp) public onlyVerifier validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        require(eventEndTimestamp[eventBytes] == 0, \\\"Event already opened\\\");\\r\\n        require(_eventEndTimestamp > block.timestamp, \\\"Event end timestamp must be in the future\\\");\\r\\n        eventEndTimestamp[eventBytes] = _eventEndTimestamp;\\r\\n\\r\\n        emit EventOpened(eventBytes, _eventEndTimestamp);\\r\\n    }\\r\\n\\r\\n    function verifyEvent(address eventAddress, uint256 eventId, EventType eventType, bool result) public onlyVerifier validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        eventVerified[eventBytes] = true;\\r\\n        eventResult[eventBytes] = result;\\r\\n\\r\\n        emit EventVerified(eventBytes, result);\\r\\n    }\\r\\n\\r\\n    function getHolderBalance(address eventAddress, uint256 eventId, EventType eventType, bool isYay, address holder) public view validEventType(eventType) returns (uint256 balance) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        return isYay ? yayVotesBalance[eventBytes][holder] : nayVotesBalance[eventBytes][holder];\\r\\n    }\\r\\n\\r\\n    function getPrice(uint256 supply, uint256 amount) public view returns (uint256) {\\r\\n        uint256 startSupply = supply + 1;\\r\\n        uint256 endSupply = supply + amount;\\r\\n        uint256 price = (startSupply + endSupply) * amount * priceSlope / 2;\\r\\n\\r\\n        return price;\\r\\n    }\\r\\n\\r\\n    function getBuyPrice(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256 price) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        return getPrice(supply, amount);\\r\\n    }\\r\\n\\r\\n    function getSellPrice(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256 price) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        if (supply < amount) return 0;\\r\\n        return getPrice(supply - amount, amount);\\r\\n    }\\r\\n\\r\\n    function getBuyPriceAfterFee(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256) {\\r\\n        uint256 price = getBuyPrice(eventAddress, eventId, eventType, isYay, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        return price + protocolFee + subjectFee;\\r\\n    }\\r\\n\\r\\n    function getSellPriceAfterFee(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256) {\\r\\n        uint256 price = getSellPrice(eventAddress, eventId, eventType, isYay, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        return price - protocolFee - subjectFee;\\r\\n    }\\r\\n\\r\\n    // def: buyShares takes in streamer address (ex: 0xTed), amount of shares purchased, and if its yay or nay\\r\\n    function buyVotes(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public payable validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(eventEndTimestamp[eventBytes] > 0 && eventEndTimestamp[eventBytes] > block.timestamp, \\\"Event is not ongoing\\\");\\r\\n        require(protocolFeeDestination != address(0), \\\"protocolFeeDestination is the zero address\\\");\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        require(amount > 0, \\\"Cannot buy zero shares\\\");\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        uint256 price = getPrice(supply, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        require(msg.value >= price + protocolFee + subjectFee, \\\"Insufficient payment\\\");\\r\\n\\r\\n        // Add the sent ETH (minus fees) to the sharesSubject's pool\\r\\n        votingPooledEth[eventBytes] += (msg.value - protocolFee - subjectFee);\\r\\n\\r\\n        if (isYay) {\\r\\n            yayVotesBalance[eventBytes][msg.sender] += amount;\\r\\n            yayVotesSupply[eventBytes] += amount;\\r\\n        } else {\\r\\n            nayVotesBalance[eventBytes][msg.sender] += amount;\\r\\n            nayVotesSupply[eventBytes] += amount;\\r\\n        }\\r\\n\\r\\n        TradeInfo memory tradeInfo = TradeInfo({\\r\\n            trader: msg.sender,\\r\\n            eventByte: eventBytes,\\r\\n            isBuy: true,\\r\\n            isYay: isYay,\\r\\n            shareAmount: amount,\\r\\n            ethAmount: price,\\r\\n            protocolEthAmount: protocolFee,\\r\\n            subjectEthAmount: subjectFee,\\r\\n            supply: supply + amount\\r\\n        });\\r\\n\\r\\n        emit Trade(tradeInfo);\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function sellVotes(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public payable validEventType(eventType) nonReentrant {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(eventEndTimestamp[eventBytes] > 0 && eventEndTimestamp[eventBytes] > block.timestamp, \\\"Event is not ongoing\\\");\\r\\n        require(protocolFeeDestination != address(0), \\\"protocolFeeDestination is the zero address\\\");\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        require(amount > 0, \\\"Cannot sell zero shares\\\");\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        require(supply >= amount, \\\"Cannot sell more shares than the current supply\\\");\\r\\n\\r\\n        uint256 userVotes = isYay ? yayVotesBalance[eventBytes][msg.sender] : nayVotesBalance[eventBytes][msg.sender];\\r\\n        require(userVotes >= amount, \\\"You don't have enough shares to sell\\\");\\r\\n        uint256 price = getPrice(supply - amount, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        // Deduct the sold shares from the user's balance and reduce the total supply\\r\\n        if (isYay) {\\r\\n            yayVotesBalance[eventBytes][msg.sender] -= amount;\\r\\n            yayVotesSupply[eventBytes] -= amount;\\r\\n        } else {\\r\\n            nayVotesBalance[eventBytes][msg.sender] -= amount;\\r\\n            nayVotesSupply[eventBytes] -= amount;\\r\\n        }\\r\\n\\r\\n        // Deduct the corresponding ETH from the sharesSubject's pool\\r\\n        votingPooledEth[eventBytes] -= price;\\r\\n\\r\\n        uint256 newSupply = supply - amount;\\r\\n\\r\\n        TradeInfo memory tradeInfo = TradeInfo({\\r\\n            trader: msg.sender,\\r\\n            eventByte: eventBytes,\\r\\n            isBuy: false,\\r\\n            isYay: isYay,\\r\\n            shareAmount: amount,\\r\\n            ethAmount: price,\\r\\n            protocolEthAmount: protocolFee,\\r\\n            subjectEthAmount: subjectFee,\\r\\n            supply: newSupply\\r\\n        });\\r\\n\\r\\n        emit Trade(tradeInfo);\\r\\n\\r\\n        // Transfer the net amount to the seller, and fees to the protocol and subject\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        (bool success3, ) = msg.sender.call{value: price - protocolFee - subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2 && success3, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n\\r\\n    function claimVotePayout(address eventAddress, uint256 eventId, EventType eventType) public validEventType(eventType) nonReentrant {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(eventVerified[eventBytes], \\\"Event not yet verified\\\");\\r\\n\\r\\n        bool result = eventResult[eventBytes];\\r\\n        uint256 userShares = result ? yayVotesBalance[eventBytes][msg.sender] : nayVotesBalance[eventBytes][msg.sender];\\r\\n\\r\\n        require(userShares > 0, \\\"No shares to claim for\\\");\\r\\n\\r\\n        uint256 totalPool = votingPooledEth[eventBytes];\\r\\n        uint256 totalWinningShares = result ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        uint256 userPayout = totalWinningShares == 0 ? 0 : (totalPool * userShares / totalWinningShares);\\r\\n\\r\\n        require(userPayout > 0, \\\"No payout for user\\\");\\r\\n\\r\\n\\r\\n        // Reset user's shares after distributing\\r\\n        if (result) {\\r\\n            yayVotesBalance[eventBytes][msg.sender] = 0;\\r\\n            yayVotesSupply[eventBytes] -= userShares;\\r\\n        } else {\\r\\n            nayVotesBalance[eventBytes][msg.sender] = 0;\\r\\n            nayVotesSupply[eventBytes] -= userShares;\\r\\n        }\\r\\n\\r\\n        // Deduct the user's payout from the sharesSubject's pool\\r\\n        votingPooledEth[eventBytes] -= userPayout;\\r\\n\\r\\n        emit Payout(msg.sender, userPayout);\\r\\n        (bool success, ) = msg.sender.call{value: userPayout}(\\\"\\\");\\r\\n        require(success, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function getVotePayout(address eventAddress, uint256 eventId, EventType eventType, address userAddress) public view validEventType(eventType) returns (uint256) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        if (!eventVerified[eventBytes]) return 0;\\r\\n        bool result = eventResult[eventBytes];\\r\\n        uint256 userVotes = result ? yayVotesBalance[eventBytes][userAddress] : nayVotesBalance[eventBytes][userAddress];\\r\\n        uint256 totalPool = votingPooledEth[eventBytes];\\r\\n        uint256 totalWinningShares = result ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        uint256 userPayout = totalWinningShares == 0 ? 0 : (totalPool * userVotes / totalWinningShares);\\r\\n        return userPayout;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n        this is for the unlikely edge-case that there are no winners \\r\\n        if yay wins but everyone is holding nay shares and no one is holding yay shares, \\r\\n        split the pool w creator and protocol\\r\\n    */\\r\\n    function closeEventIfNoWinners(address eventAddress, uint256 eventId, EventType eventType) public onlyVerifier validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(protocolFeeDestination != address(0), \\\"protocolFeeDestination is the zero address\\\");\\r\\n        require(eventVerified[eventBytes], \\\"Event is not verified\\\");\\r\\n        require(votingPooledEth[eventBytes] > 0, \\\"Pool is already empty\\\");\\r\\n        uint256 sharesSupply = eventResult[eventBytes] ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        require(sharesSupply == 0, \\\"There are still shares\\\");\\r\\n        uint256 splitPoolValue = votingPooledEth[eventBytes] / 2;\\r\\n        votingPooledEth[eventBytes] = 0;\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: splitPoolValue}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: splitPoolValue}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0xe74f65384e8c0e6d029ed073cd9c160710098242258e8f86fbf62d03a8684064\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 79,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 193,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "protocolFeeDestination",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 195,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "protocolFeePercent",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 197,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "subjectFeePercent",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 199,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "priceSlope",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 247,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "yayVotesBalance",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 253,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "nayVotesBalance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 257,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "yayVotesSupply",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 261,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "nayVotesSupply",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 265,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "eventVerified",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 269,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "eventResult",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 273,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "eventEndTimestamp",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 277,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "votingPooledEth",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 281,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "isVerifier",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}