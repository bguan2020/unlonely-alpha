{
  "address": "0x9bb73ca49b61F2Efe4b193e20df640862c8D3bB6",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "eventByte",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTimestamp",
          "type": "uint256"
        }
      ],
      "name": "EventOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "eventByte",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "EventVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votingPooledEth",
          "type": "uint256"
        }
      ],
      "name": "Payout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "eventByte",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "isBuy",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isYay",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "shareAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ethAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subjectEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct UnlonelySharesV2.TradeInfo",
          "name": "trade",
          "type": "tuple"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyVotes",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "claimVotePayout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "closeEventIfNoWinners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventEndTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "generateKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "getHolderBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getVotePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVerifier",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nayVotesBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nayVotesSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_eventEndTimestamp",
          "type": "uint256"
        }
      ],
      "name": "openEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceSlope",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeDestination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sellVotes",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeDestination",
          "type": "address"
        }
      ],
      "name": "setFeeDestination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setSubjectFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "verifyEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votingPooledEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "yayVotesBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "yayVotesSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5e3a66c2dee9101683ceaeda23c920950ea5e67749c4b621083def2e0f01d759",
  "receipt": {
    "to": null,
    "from": "0x141Edb16C70307Cf2F0f04aF2dDa75423a0E1bEa",
    "contractAddress": "0x9bb73ca49b61F2Efe4b193e20df640862c8D3bB6",
    "transactionIndex": 2,
    "gasUsed": "4046111",
    "logsBloom": "0x
    "blockHash": "0x537e53e12405bf7acac5666057d4420ff70f594f6817350db95f0c099c1142ef",
    "transactionHash": "0x5e3a66c2dee9101683ceaeda23c920950ea5e67749c4b621083def2e0f01d759",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 7852471,
        "transactionHash": "0x5e3a66c2dee9101683ceaeda23c920950ea5e67749c4b621083def2e0f01d759",
        "address": "0x9bb73ca49b61F2Efe4b193e20df640862c8D3bB6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000141edb16c70307cf2f0f04af2dda75423a0e1bea"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x537e53e12405bf7acac5666057d4420ff70f594f6817350db95f0c099c1142ef"
      }
    ],
    "blockNumber": 7852471,
    "cumulativeGasUsed": "4131124",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "a6d6bac9ce45134e6fafcad2691f9bf6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"}],\"name\":\"EventOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"EventVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingPooledEth\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subjectEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct UnlonelySharesV2.TradeInfo\",\"name\":\"trade\",\"type\":\"tuple\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyVotes\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"claimVotePayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"closeEventIfNoWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventEndTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"generateKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getHolderBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getVotePayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVerifier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nayVotesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nayVotesSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_eventEndTimestamp\",\"type\":\"uint256\"}],\"name\":\"openEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceSlope\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellVotes\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setSubjectFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"verifyEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votingPooledEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"yayVotesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"yayVotesSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UnlonelySharesV2.sol\":\"UnlonelySharesV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"contracts/UnlonelySharesV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _transferOwnership(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if the sender is not the owner.\\r\\n     */\\r\\n    function _checkOwner() internal view virtual {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Internal function without access restriction.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract UnlonelySharesV2 is Ownable, ReentrancyGuard {\\r\\n    // bytes32 is a unique identifier for each event that takes in:\\r\\n    // eventAddress: this is the address of the event owner, so channel owner (previously was sharesSubject)\\r\\n    // eventId: this is numerical and unique ID on our backend to differentiate between events for one channel\\r\\n    // eventType: this is the type of event, which can be YayVote, NayVote, or VIPBadge\\r\\n    // and combines all three into one bytes32 key\\r\\n\\r\\n    enum EventType {\\r\\n        YayNayVote,\\r\\n        VIPBadge\\r\\n    }\\r\\n\\r\\n    address public protocolFeeDestination;\\r\\n    uint256 public protocolFeePercent;\\r\\n    uint256 public subjectFeePercent;\\r\\n    uint256 public priceSlope;\\r\\n\\r\\n    struct TradeInfo {\\r\\n        address trader;\\r\\n        bytes32 eventByte;\\r\\n        bool isBuy;\\r\\n        bool isYay;\\r\\n        uint256 shareAmount;\\r\\n        uint256 ethAmount;\\r\\n        uint256 protocolEthAmount;\\r\\n        uint256 subjectEthAmount;\\r\\n        uint256 supply;\\r\\n    }\\r\\n\\r\\n    // ~~~~~~~~~~~~~~~~~~~TODO: edit events to include all types of trades~~~~~~~~~~~~~~~~~~\\r\\n    event Trade(TradeInfo trade);\\r\\n    event EventOpened(bytes32 eventByte, uint256 endTimestamp);\\r\\n    event EventVerified(bytes32 eventByte, bool result);\\r\\n    event Payout(address indexed voter, uint256 amount, uint256 votingPooledEth);\\r\\n\\r\\n    // this is a mapping between events and their holders which each own an amount of yay/nay votes\\r\\n    mapping(bytes32 => mapping(address => uint256)) public yayVotesBalance;\\r\\n    mapping(bytes32 => mapping(address => uint256)) public nayVotesBalance;\\r\\n\\r\\n    mapping(bytes32 => uint256) public yayVotesSupply;\\r\\n    mapping(bytes32 => uint256) public nayVotesSupply;\\r\\n\\r\\n    mapping(bytes32 => bool) public eventVerified;\\r\\n    mapping(bytes32 => bool) public eventResult;\\r\\n    mapping(bytes32 => uint256) public eventEndTimestamp;\\r\\n\\r\\n    // this is a mapping between sharesSubject and total amount of ETH in the pool\\r\\n    mapping(bytes32 => uint256) public votingPooledEth;\\r\\n\\r\\n    // user roles\\r\\n    mapping(address => bool) public isVerifier;\\r\\n\\r\\n    modifier onlyVerifier() {\\r\\n        require(isVerifier[msg.sender], \\\"Caller is not a verifier\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validEventType(EventType eventType) {\\r\\n        require(\\r\\n            eventType == EventType.YayNayVote,\\r\\n            \\\"Invalid event type\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        // Set the contract deployer as the initial verifier\\r\\n        isVerifier[msg.sender] = true;\\r\\n\\r\\n        protocolFeePercent = 5 * 10**16; // 5%\\r\\n        subjectFeePercent = 5 * 10**16;  // 5%\\r\\n        priceSlope = 5 * 10**14; // 0.0005\\r\\n    }\\r\\n\\r\\n    function setFeeDestination(address _feeDestination) public onlyOwner {\\r\\n        protocolFeeDestination = _feeDestination;\\r\\n    }\\r\\n\\r\\n    function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        protocolFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        subjectFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setVerifier(address verifier, bool value) public onlyOwner {\\r\\n        isVerifier[verifier] = value;\\r\\n    }\\r\\n\\r\\n    // function setPriceSlope(uint256 value) public onlyOwner {\\r\\n    //     priceSlope = value;\\r\\n    // }\\r\\n\\r\\n\\tfunction generateKey(address eventAddress, uint256 eventId, EventType eventType) public pure validEventType(eventType) returns (bytes32) {\\r\\n        require(eventId < 1000000, \\\"ID must be less than 1 million\\\");\\r\\n        return keccak256(abi.encodePacked(eventAddress, eventId, eventType));\\r\\n    }\\r\\n\\r\\n    function openEvent(address eventAddress, uint256 eventId, EventType eventType, uint256 _eventEndTimestamp) public onlyVerifier validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        require(eventEndTimestamp[eventBytes] == 0, \\\"Event already opened\\\");\\r\\n        require(_eventEndTimestamp > block.timestamp, \\\"Event end timestamp must be in the future\\\");\\r\\n        eventEndTimestamp[eventBytes] = _eventEndTimestamp;\\r\\n\\r\\n        emit EventOpened(eventBytes, _eventEndTimestamp);\\r\\n    }\\r\\n\\r\\n    function verifyEvent(address eventAddress, uint256 eventId, EventType eventType, bool result) public onlyVerifier validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        eventVerified[eventBytes] = true;\\r\\n        eventResult[eventBytes] = result;\\r\\n\\r\\n        emit EventVerified(eventBytes, result);\\r\\n    }\\r\\n\\r\\n    function getHolderBalance(address eventAddress, uint256 eventId, EventType eventType, bool isYay, address holder) public view validEventType(eventType) returns (uint256 balance) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        return isYay ? yayVotesBalance[eventBytes][holder] : nayVotesBalance[eventBytes][holder];\\r\\n    }\\r\\n\\r\\n    function getPrice(uint256 supply, uint256 amount) public view returns (uint256) {\\r\\n        uint256 startSupply = supply + 1;\\r\\n        uint256 endSupply = supply + amount;\\r\\n        uint256 price = (startSupply + endSupply) * amount * priceSlope / 2;\\r\\n\\r\\n        return price;\\r\\n    }\\r\\n\\r\\n    function getBuyPrice(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256 price) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        return getPrice(supply, amount);\\r\\n    }\\r\\n\\r\\n    function getSellPrice(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256 price) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        if (supply < amount) return 0;\\r\\n        return getPrice(supply - amount, amount);\\r\\n    }\\r\\n\\r\\n    function getBuyPriceAfterFee(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256) {\\r\\n        uint256 price = getBuyPrice(eventAddress, eventId, eventType, isYay, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        return price + protocolFee + subjectFee;\\r\\n    }\\r\\n\\r\\n    function getSellPriceAfterFee(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256) {\\r\\n        uint256 price = getSellPrice(eventAddress, eventId, eventType, isYay, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        return price - protocolFee - subjectFee;\\r\\n    }\\r\\n\\r\\n    // def: buyShares takes in streamer address (ex: 0xTed), amount of shares purchased, and if its yay or nay\\r\\n    function buyVotes(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public payable validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(eventEndTimestamp[eventBytes] > 0 && eventEndTimestamp[eventBytes] > block.timestamp, \\\"Event is not ongoing\\\");\\r\\n        require(protocolFeeDestination != address(0), \\\"protocolFeeDestination is the zero address\\\");\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        require(amount > 0, \\\"Cannot buy zero shares\\\");\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        uint256 price = getPrice(supply, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        require(msg.value >= price + protocolFee + subjectFee, \\\"Insufficient payment\\\");\\r\\n\\r\\n        // Add the sent ETH (minus fees) to the sharesSubject's pool\\r\\n        votingPooledEth[eventBytes] += (msg.value - protocolFee - subjectFee);\\r\\n\\r\\n        if (isYay) {\\r\\n            yayVotesBalance[eventBytes][msg.sender] += amount;\\r\\n            yayVotesSupply[eventBytes] += amount;\\r\\n        } else {\\r\\n            nayVotesBalance[eventBytes][msg.sender] += amount;\\r\\n            nayVotesSupply[eventBytes] += amount;\\r\\n        }\\r\\n\\r\\n        TradeInfo memory tradeInfo = TradeInfo({\\r\\n            trader: msg.sender,\\r\\n            eventByte: eventBytes,\\r\\n            isBuy: true,\\r\\n            isYay: isYay,\\r\\n            shareAmount: amount,\\r\\n            ethAmount: price,\\r\\n            protocolEthAmount: protocolFee,\\r\\n            subjectEthAmount: subjectFee,\\r\\n            supply: supply + amount\\r\\n        });\\r\\n\\r\\n        emit Trade(tradeInfo);\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function sellVotes(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public payable validEventType(eventType) nonReentrant {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(eventEndTimestamp[eventBytes] > 0 && eventEndTimestamp[eventBytes] > block.timestamp, \\\"Event is not ongoing\\\");\\r\\n        require(protocolFeeDestination != address(0), \\\"protocolFeeDestination is the zero address\\\");\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        require(amount > 0, \\\"Cannot sell zero shares\\\");\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        require(supply >= amount, \\\"Cannot sell more shares than the current supply\\\");\\r\\n\\r\\n        uint256 userVotes = isYay ? yayVotesBalance[eventBytes][msg.sender] : nayVotesBalance[eventBytes][msg.sender];\\r\\n        require(userVotes >= amount, \\\"You don't have enough shares to sell\\\");\\r\\n        uint256 price = getPrice(supply - amount, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        // Deduct the sold shares from the user's balance and reduce the total supply\\r\\n        if (isYay) {\\r\\n            yayVotesBalance[eventBytes][msg.sender] -= amount;\\r\\n            yayVotesSupply[eventBytes] -= amount;\\r\\n        } else {\\r\\n            nayVotesBalance[eventBytes][msg.sender] -= amount;\\r\\n            nayVotesSupply[eventBytes] -= amount;\\r\\n        }\\r\\n\\r\\n        // Deduct the corresponding ETH from the sharesSubject's pool\\r\\n        votingPooledEth[eventBytes] -= price;\\r\\n\\r\\n        uint256 newSupply = supply - amount;\\r\\n\\r\\n        TradeInfo memory tradeInfo = TradeInfo({\\r\\n            trader: msg.sender,\\r\\n            eventByte: eventBytes,\\r\\n            isBuy: false,\\r\\n            isYay: isYay,\\r\\n            shareAmount: amount,\\r\\n            ethAmount: price,\\r\\n            protocolEthAmount: protocolFee,\\r\\n            subjectEthAmount: subjectFee,\\r\\n            supply: newSupply\\r\\n        });\\r\\n\\r\\n        emit Trade(tradeInfo);\\r\\n\\r\\n        // Transfer the net amount to the seller, and fees to the protocol and subject\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        (bool success3, ) = msg.sender.call{value: price - protocolFee - subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2 && success3, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n\\r\\n    function claimVotePayout(address eventAddress, uint256 eventId, EventType eventType) public validEventType(eventType) nonReentrant {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(eventVerified[eventBytes], \\\"Event not yet verified\\\");\\r\\n\\r\\n        bool result = eventResult[eventBytes];\\r\\n        uint256 userShares = result ? yayVotesBalance[eventBytes][msg.sender] : nayVotesBalance[eventBytes][msg.sender];\\r\\n\\r\\n        require(userShares > 0, \\\"No shares to claim for\\\");\\r\\n\\r\\n        uint256 totalPool = votingPooledEth[eventBytes];\\r\\n        uint256 totalWinningShares = result ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        uint256 userPayout = totalWinningShares == 0 ? 0 : (totalPool * userShares / totalWinningShares);\\r\\n\\r\\n        require(userPayout > 0, \\\"No payout for user\\\");\\r\\n\\r\\n\\r\\n        // Reset user's shares after distributing\\r\\n        if (result) {\\r\\n            yayVotesBalance[eventBytes][msg.sender] = 0;\\r\\n            yayVotesSupply[eventBytes] -= userShares;\\r\\n        } else {\\r\\n            nayVotesBalance[eventBytes][msg.sender] = 0;\\r\\n            nayVotesSupply[eventBytes] -= userShares;\\r\\n        }\\r\\n\\r\\n        // Deduct the user's payout from the sharesSubject's pool\\r\\n        votingPooledEth[eventBytes] -= userPayout;\\r\\n\\r\\n        emit Payout(msg.sender, userPayout, votingPooledEth[eventBytes]);\\r\\n        (bool success, ) = msg.sender.call{value: userPayout}(\\\"\\\");\\r\\n        require(success, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function getVotePayout(address eventAddress, uint256 eventId, EventType eventType, address userAddress) public view validEventType(eventType) returns (uint256) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        if (!eventVerified[eventBytes]) return 0;\\r\\n        bool result = eventResult[eventBytes];\\r\\n        uint256 userVotes = result ? yayVotesBalance[eventBytes][userAddress] : nayVotesBalance[eventBytes][userAddress];\\r\\n        uint256 totalPool = votingPooledEth[eventBytes];\\r\\n        uint256 totalWinningShares = result ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        uint256 userPayout = totalWinningShares == 0 ? 0 : (totalPool * userVotes / totalWinningShares);\\r\\n        return userPayout;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n        this is for the unlikely edge-case that there are no winners \\r\\n        if yay wins but everyone is holding nay shares and no one is holding yay shares, \\r\\n        split the pool w creator and protocol\\r\\n    */\\r\\n    function closeEventIfNoWinners(address eventAddress, uint256 eventId, EventType eventType) public onlyVerifier validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(protocolFeeDestination != address(0), \\\"protocolFeeDestination is the zero address\\\");\\r\\n        require(eventVerified[eventBytes], \\\"Event is not verified\\\");\\r\\n        require(votingPooledEth[eventBytes] > 0, \\\"Pool is already empty\\\");\\r\\n        uint256 sharesSupply = eventResult[eventBytes] ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        require(sharesSupply == 0, \\\"There are still shares\\\");\\r\\n        uint256 splitPoolValue = votingPooledEth[eventBytes] / 2;\\r\\n        votingPooledEth[eventBytes] = 0;\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: splitPoolValue}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: splitPoolValue}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0x355978f5e9ccd57a0adb5498ef669ae8f4c6307c2c2731d51bf12a9bb2f09275\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200003262000026620000c160201b60201c565b620000c960201b60201c565b600180819055506001600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555066b1a2bc2ec5000060038190555066b1a2bc2ec500006004819055506601c6bf526340006005819055506200018d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b614617806200019d6000396000f3fe6080604052600436106101f95760003560e01c80638c0a6d3e1161010d578063ac9b5671116100a0578063dcd11d261161006f578063dcd11d26146107c1578063ddfb87a0146107ea578063f2fde38b14610827578063f60751b814610850578063fbe5323414610879576101f9565b8063ac9b5671146106f3578063bc6eaf701461071c578063c9c89f7f14610759578063d6e6eb9f14610796576101f9565b8063a28bde49116100dc578063a28bde4914610634578063a498342114610671578063a71513251461069a578063a8393ec8146106b6576101f9565b80638c0a6d3e146105735780638c169611146105b05780638da5cb5b146105cc5780639b2bd771146105f7576101f9565b806345ef0d2b116101905780635cf4ee911161015f5780635cf4ee911461046857806367031435146104a557806367a5f8d6146104e2578063715018a61461051f5780638678810314610536576101f9565b806345ef0d2b146103c05780634ce7957c146103e957806354e42f7e146104145780635a8a764e1461043f576101f9565b80631287e761116101cc5780631287e761146102de57806313b5408b1461031b57806324dc441d146103585780633310521814610383576101f9565b80630105faff146101fe5780630905c17b1461023b5780630d734519146102785780630fcf5500146102b5575b600080fd5b34801561020a57600080fd5b5061022560048036038101906102209190613179565b6108a2565b60405161023291906131bf565b60405180910390f35b34801561024757600080fd5b50610262600480360381019061025d9190613179565b6108ba565b60405161026f91906131bf565b60405180910390f35b34801561028457600080fd5b5061029f600480360381019061029a9190613289565b6108d2565b6040516102ac91906132eb565b60405180910390f35b3480156102c157600080fd5b506102dc60048036038101906102d79190613289565b6109b6565b005b3480156102ea57600080fd5b5061030560048036038101906103009190613306565b610ec4565b60405161031291906131bf565b60405180910390f35b34801561032757600080fd5b50610342600480360381019061033d91906133a5565b6110ce565b60405161034f91906131bf565b60405180910390f35b34801561036457600080fd5b5061036d6111b9565b60405161037a91906131bf565b60405180910390f35b34801561038f57600080fd5b506103aa60048036038101906103a59190613420565b6111bf565b6040516103b7919061345c565b60405180910390f35b3480156103cc57600080fd5b506103e760048036038101906103e29190613477565b6111df565b005b3480156103f557600080fd5b506103fe611434565b60405161040b91906134ed565b60405180910390f35b34801561042057600080fd5b5061042961145a565b60405161043691906131bf565b60405180910390f35b34801561044b57600080fd5b5061046660048036038101906104619190613508565b611460565b005b34801561047457600080fd5b5061048f600480360381019061048a9190613535565b611472565b60405161049c91906131bf565b60405180910390f35b3480156104b157600080fd5b506104cc60048036038101906104c79190613575565b6114d4565b6040516104d991906131bf565b60405180910390f35b3480156104ee57600080fd5b50610509600480360381019061050491906133a5565b611607565b60405161051691906131bf565b60405180910390f35b34801561052b57600080fd5b506105346116ee565b005b34801561054257600080fd5b5061055d60048036038101906105589190613179565b611702565b60405161056a91906131bf565b60405180910390f35b34801561057f57600080fd5b5061059a600480360381019061059591906135f0565b61171a565b6040516105a791906131bf565b60405180910390f35b6105ca60048036038101906105c591906133a5565b61173f565b005b3480156105d857600080fd5b506105e1611daa565b6040516105ee91906134ed565b60405180910390f35b34801561060357600080fd5b5061061e600480360381019061061991906133a5565b611dd3565b60405161062b91906131bf565b60405180910390f35b34801561064057600080fd5b5061065b600480360381019061065691906135f0565b611ebe565b60405161066891906131bf565b60405180910390f35b34801561067d57600080fd5b5061069860048036038101906106939190613508565b611ee3565b005b6106b460048036038101906106af91906133a5565b611ef5565b005b3480156106c257600080fd5b506106dd60048036038101906106d89190613179565b6126d6565b6040516106ea919061345c565b60405180910390f35b3480156106ff57600080fd5b5061071a60048036038101906107159190613630565b6126f6565b005b34801561072857600080fd5b50610743600480360381019061073e91906133a5565b612759565b60405161075091906131bf565b60405180910390f35b34801561076557600080fd5b50610780600480360381019061077b9190613179565b612821565b60405161078d91906131bf565b60405180910390f35b3480156107a257600080fd5b506107ab612839565b6040516107b891906131bf565b60405180910390f35b3480156107cd57600080fd5b506107e860048036038101906107e39190613670565b61283f565b005b3480156107f657600080fd5b50610811600480360381019061080c9190613179565b612a3b565b60405161081e919061345c565b60405180910390f35b34801561083357600080fd5b5061084e60048036038101906108499190613420565b612a5b565b005b34801561085c57600080fd5b5061087760048036038101906108729190613289565b612adf565b005b34801561088557600080fd5b506108a0600480360381019061089b9190613420565b612f4f565b005b60096020528060005260406000206000915090505481565b600d6020528060005260406000206000915090505481565b600081600060018111156108e9576108e86136d7565b5b8160018111156108fc576108fb6136d7565b5b1461093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093390613763565b60405180910390fd5b620f42408410610981576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610978906137cf565b60405180910390fd5b848484604051602001610996939291906138c7565b604051602081830303815290604052805190602001209150509392505050565b80600060018111156109cb576109ca6136d7565b5b8160018111156109de576109dd6136d7565b5b14610a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1590613763565b60405180910390fd5b610a26612f9b565b6000610a338585856108d2565b9050600a600082815260200190815260200160002060009054906101000a900460ff16610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90613950565b60405180910390fd5b6000600b600083815260200190815260200160002060009054906101000a900460ff169050600081610b17576007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b69565b6006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b905060008111610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba5906139bc565b60405180910390fd5b6000600d6000858152602001908152602001600020549050600083610be6576009600086815260200190815260200160002054610bfb565b60086000868152602001908152602001600020545b90506000808214610c2257818484610c139190613a0b565b610c1d9190613a94565b610c25565b60005b905060008111610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6190613b11565b60405180910390fd5b8415610cf55760006006600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600860008881526020019081526020016000206000828254610ce99190613b31565b92505081905550610d76565b60006007600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600960008881526020019081526020016000206000828254610d6e9190613b31565b925050819055505b80600d60008881526020019081526020016000206000828254610d999190613b31565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f634235fcf5af0adbca1a405ec65f6f6c08f55e1f379c2c45cd10f23cb29e0e3182600d60008a815260200190815260200160002054604051610dfb929190613b65565b60405180910390a260003373ffffffffffffffffffffffffffffffffffffffff1682604051610e2990613bbf565b60006040518083038185875af1925050503d8060008114610e66576040519150601f19603f3d011682016040523d82523d6000602084013e610e6b565b606091505b5050905080610eaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea690613c20565b60405180910390fd5b50505050505050610ebe612feb565b50505050565b60008260006001811115610edb57610eda6136d7565b5b816001811115610eee57610eed6136d7565b5b14610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2590613763565b60405180910390fd5b6000610f3b8787876108d2565b9050600a600082815260200190815260200160002060009054906101000a900460ff16610f6c5760009250506110c5565b6000600b600083815260200190815260200160002060009054906101000a900460ff169050600081610fee576007600084815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611040565b6006600084815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b90506000600d600085815260200190815260200160002054905060008361107a57600960008681526020019081526020016000205461108f565b60086000868152602001908152602001600020545b905060008082146110b6578184846110a79190613a0b565b6110b19190613a94565b6110b9565b60005b90508097505050505050505b50949350505050565b600083600060018111156110e5576110e46136d7565b5b8160018111156110f8576110f76136d7565b5b14611138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112f90613763565b60405180910390fd5b60006111478888888888612759565b90506000670de0b6b3a7640000600354836111629190613a0b565b61116c9190613a94565b90506000670de0b6b3a7640000600454846111879190613a0b565b6111919190613a94565b90508082846111a09190613c40565b6111aa9190613c40565b94505050505095945050505050565b60045481565b600e6020528060005260406000206000915054906101000a900460ff1681565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661126b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126290613ce2565b60405180910390fd5b81600060018111156112805761127f6136d7565b5b816001811115611293576112926136d7565b5b146112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ca90613763565b60405180910390fd5b60006112e08686866108d2565b9050600a600082815260200190815260200160002060009054906101000a900460ff1615611343576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133a90613d4e565b60405180910390fd5b6000600c60008381526020019081526020016000205414611399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139090613dba565b60405180910390fd5b4283116113db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d290613e4c565b60405180910390fd5b82600c6000838152602001908152602001600020819055507f67c81c88502f8cadccbe9f54b615f7a97e88d9945c6a271e7787258961c78cd38184604051611424929190613e6c565b60405180910390a1505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b611468612ff4565b8060048190555050565b6000806001846114829190613c40565b9050600083856114929190613c40565b9050600060026005548684866114a89190613c40565b6114b29190613a0b565b6114bc9190613a0b565b6114c69190613a94565b905080935050505092915050565b600083600060018111156114eb576114ea6136d7565b5b8160018111156114fe576114fd6136d7565b5b1461153e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153590613763565b60405180910390fd5b600061154b8888886108d2565b9050846115a8576007600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115fa565b6006600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b9250505095945050505050565b6000836000600181111561161e5761161d6136d7565b5b816001811115611631576116306136d7565b5b14611671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166890613763565b60405180910390fd5b600061167e8888886108d2565b90506000856116a05760096000838152602001908152602001600020546116b5565b60086000838152602001908152602001600020545b9050848110156116ca576000935050506116e4565b6116df85826116d99190613b31565b86611472565b935050505b5095945050505050565b6116f6612ff4565b6117006000613072565b565b600c6020528060005260406000206000915090505481565b6007602052816000526040600020602052806000526040600020600091509150505481565b8260006001811115611754576117536136d7565b5b816001811115611767576117666136d7565b5b146117a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179e90613763565b60405180910390fd5b60006117b48787876108d2565b90506000600c6000838152602001908152602001600020541180156117eb575042600c600083815260200190815260200160002054115b61182a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182190613ee1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b390613f73565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff161561191d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191490613d4e565b60405180910390fd5b60008311611960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195790613fdf565b60405180910390fd5b600084611980576009600083815260200190815260200160002054611995565b60086000838152602001908152602001600020545b905060006119a38286611472565b90506000670de0b6b3a7640000600354836119be9190613a0b565b6119c89190613a94565b90506000670de0b6b3a7640000600454846119e39190613a0b565b6119ed9190613a94565b90508082846119fc9190613c40565b611a069190613c40565b341015611a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3f9061404b565b60405180910390fd5b808234611a559190613b31565b611a5f9190613b31565b600d60008781526020019081526020016000206000828254611a819190613c40565b925050819055508715611b2457866006600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611aee9190613c40565b9250508190555086600860008781526020019081526020016000206000828254611b189190613c40565b92505081905550611bb6565b866007600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b849190613c40565b9250508190555086600960008781526020019081526020016000206000828254611bae9190613c40565b925050819055505b60006040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018781526020016001151581526020018a151581526020018981526020018581526020018481526020018381526020018987611c1b9190613c40565b81525090507f3b9bd27781456fed243b0e24f17268c9900c2bbe7e7fc6a6f61c9fdd66edbb2581604051611c4f919061415e565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1684604051611c9f90613bbf565b60006040518083038185875af1925050503d8060008114611cdc576040519150601f19603f3d011682016040523d82523d6000602084013e611ce1565b606091505b5050905060008d73ffffffffffffffffffffffffffffffffffffffff1684604051611d0b90613bbf565b60006040518083038185875af1925050503d8060008114611d48576040519150601f19603f3d011682016040523d82523d6000602084013e611d4d565b606091505b50509050818015611d5b5750805b611d9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9190613c20565b60405180910390fd5b5050505050505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008360006001811115611dea57611de96136d7565b5b816001811115611dfd57611dfc6136d7565b5b14611e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3490613763565b60405180910390fd5b6000611e4c8888888888611607565b90506000670de0b6b3a764000060035483611e679190613a0b565b611e719190613a94565b90506000670de0b6b3a764000060045484611e8c9190613a0b565b611e969190613a94565b9050808284611ea59190613b31565b611eaf9190613b31565b94505050505095945050505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b611eeb612ff4565b8060038190555050565b8260006001811115611f0a57611f096136d7565b5b816001811115611f1d57611f1c6136d7565b5b14611f5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5490613763565b60405180910390fd5b611f65612f9b565b6000611f728787876108d2565b90506000600c600083815260200190815260200160002054118015611fa9575042600c600083815260200190815260200160002054115b611fe8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fdf90613ee1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561207a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207190613f73565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff16156120db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120d290613d4e565b60405180910390fd5b6000831161211e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612115906141c6565b60405180910390fd5b60008461213e576009600083815260200190815260200160002054612153565b60086000838152602001908152602001600020545b905083811015612198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218f90614258565b60405180910390fd5b6000856121f5576007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612247565b6006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b90508481101561228c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612283906142ea565b60405180910390fd5b60006122a3868461229d9190613b31565b87611472565b90506000670de0b6b3a7640000600354836122be9190613a0b565b6122c89190613a94565b90506000670de0b6b3a7640000600454846122e39190613a0b565b6122ed9190613a94565b9050881561238b57876006600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123559190613b31565b925050819055508760086000888152602001908152602001600020600082825461237f9190613b31565b9250508190555061241d565b876007600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123eb9190613b31565b92505081905550876009600088815260200190815260200160002060008282546124159190613b31565b925050819055505b82600d600088815260200190815260200160002060008282546124409190613b31565b92505081905550600088866124559190613b31565b905060006040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018981526020016000151581526020018c151581526020018b81526020018681526020018581526020018481526020018381525090507f3b9bd27781456fed243b0e24f17268c9900c2bbe7e7fc6a6f61c9fdd66edbb25816040516124e5919061415e565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560405161253590613bbf565b60006040518083038185875af1925050503d8060008114612572576040519150601f19603f3d011682016040523d82523d6000602084013e612577565b606091505b5050905060008f73ffffffffffffffffffffffffffffffffffffffff16856040516125a190613bbf565b60006040518083038185875af1925050503d80600081146125de576040519150601f19603f3d011682016040523d82523d6000602084013e6125e3565b606091505b5050905060003373ffffffffffffffffffffffffffffffffffffffff1686888a61260d9190613b31565b6126179190613b31565b60405161262390613bbf565b60006040518083038185875af1925050503d8060008114612660576040519150601f19603f3d011682016040523d82523d6000602084013e612665565b606091505b505090508280156126735750815b801561267c5750805b6126bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126b290613c20565b60405180910390fd5b50505050505050505050506126ce612feb565b505050505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b6126fe612ff4565b80600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600083600060018111156127705761276f6136d7565b5b816001811115612783576127826136d7565b5b146127c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ba90613763565b60405180910390fd5b60006127d08888886108d2565b90506000856127f2576009600083815260200190815260200160002054612807565b60086000838152602001908152602001600020545b90506128138186611472565b935050505095945050505050565b60086020528060005260406000206000915090505481565b60035481565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166128cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128c290613ce2565b60405180910390fd5b81600060018111156128e0576128df6136d7565b5b8160018111156128f3576128f26136d7565b5b14612933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161292a90613763565b60405180910390fd5b60006129408686866108d2565b9050600a600082815260200190815260200160002060009054906101000a900460ff16156129a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299a90613d4e565b60405180910390fd5b6001600a600083815260200190815260200160002060006101000a81548160ff02191690831515021790555082600b600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcc923a681ce0b30457b296ce823db752116e20a34977298145ccd5c46f9b38bc8184604051612a2b92919061430a565b60405180910390a1505050505050565b600b6020528060005260406000206000915054906101000a900460ff1681565b612a63612ff4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aca906143a5565b60405180910390fd5b612adc81613072565b50565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612b6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b6290613ce2565b60405180910390fd5b8060006001811115612b8057612b7f6136d7565b5b816001811115612b9357612b926136d7565b5b14612bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bca90613763565b60405180910390fd5b6000612be08585856108d2565b9050600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c6b90613f73565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff16612cd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ccb90614411565b60405180910390fd5b6000600d60008381526020019081526020016000205411612d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d219061447d565b60405180910390fd5b6000600b600083815260200190815260200160002060009054906101000a900460ff16612d6a576009600083815260200190815260200160002054612d7f565b60086000838152602001908152602001600020545b905060008114612dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dbb906144e9565b60405180910390fd5b60006002600d600085815260200190815260200160002054612de69190613a94565b90506000600d6000858152602001908152602001600020819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051612e4990613bbf565b60006040518083038185875af1925050503d8060008114612e86576040519150601f19603f3d011682016040523d82523d6000602084013e612e8b565b606091505b5050905060008873ffffffffffffffffffffffffffffffffffffffff1683604051612eb590613bbf565b60006040518083038185875af1925050503d8060008114612ef2576040519150601f19603f3d011682016040523d82523d6000602084013e612ef7565b606091505b50509050818015612f055750805b612f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f3b90613c20565b60405180910390fd5b505050505050505050565b612f57612ff4565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026001541415612fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fd890614555565b60405180910390fd5b6002600181905550565b60018081905550565b612ffc613136565b73ffffffffffffffffffffffffffffffffffffffff1661301a611daa565b73ffffffffffffffffffffffffffffffffffffffff1614613070576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613067906145c1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61315681613143565b811461316157600080fd5b50565b6000813590506131738161314d565b92915050565b60006020828403121561318f5761318e61313e565b5b600061319d84828501613164565b91505092915050565b6000819050919050565b6131b9816131a6565b82525050565b60006020820190506131d460008301846131b0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613205826131da565b9050919050565b613215816131fa565b811461322057600080fd5b50565b6000813590506132328161320c565b92915050565b613241816131a6565b811461324c57600080fd5b50565b60008135905061325e81613238565b92915050565b6002811061327157600080fd5b50565b60008135905061328381613264565b92915050565b6000806000606084860312156132a2576132a161313e565b5b60006132b086828701613223565b93505060206132c18682870161324f565b92505060406132d286828701613274565b9150509250925092565b6132e581613143565b82525050565b600060208201905061330060008301846132dc565b92915050565b600080600080608085870312156133205761331f61313e565b5b600061332e87828801613223565b945050602061333f8782880161324f565b935050604061335087828801613274565b925050606061336187828801613223565b91505092959194509250565b60008115159050919050565b6133828161336d565b811461338d57600080fd5b50565b60008135905061339f81613379565b92915050565b600080600080600060a086880312156133c1576133c061313e565b5b60006133cf88828901613223565b95505060206133e08882890161324f565b94505060406133f188828901613274565b935050606061340288828901613390565b92505060806134138882890161324f565b9150509295509295909350565b6000602082840312156134365761343561313e565b5b600061344484828501613223565b91505092915050565b6134568161336d565b82525050565b6000602082019050613471600083018461344d565b92915050565b600080600080608085870312156134915761349061313e565b5b600061349f87828801613223565b94505060206134b08782880161324f565b93505060406134c187828801613274565b92505060606134d28782880161324f565b91505092959194509250565b6134e7816131fa565b82525050565b600060208201905061350260008301846134de565b92915050565b60006020828403121561351e5761351d61313e565b5b600061352c8482850161324f565b91505092915050565b6000806040838503121561354c5761354b61313e565b5b600061355a8582860161324f565b925050602061356b8582860161324f565b9150509250929050565b600080600080600060a086880312156135915761359061313e565b5b600061359f88828901613223565b95505060206135b08882890161324f565b94505060406135c188828901613274565b93505060606135d288828901613390565b92505060806135e388828901613223565b9150509295509295909350565b600080604083850312156136075761360661313e565b5b600061361585828601613164565b925050602061362685828601613223565b9150509250929050565b600080604083850312156136475761364661313e565b5b600061365585828601613223565b925050602061366685828601613390565b9150509250929050565b6000806000806080858703121561368a5761368961313e565b5b600061369887828801613223565b94505060206136a98782880161324f565b93505060406136ba87828801613274565b92505060606136cb87828801613390565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f496e76616c6964206576656e7420747970650000000000000000000000000000600082015250565b600061374d601283613706565b915061375882613717565b602082019050919050565b6000602082019050818103600083015261377c81613740565b9050919050565b7f4944206d757374206265206c657373207468616e2031206d696c6c696f6e0000600082015250565b60006137b9601e83613706565b91506137c482613783565b602082019050919050565b600060208201905081810360008301526137e8816137ac565b9050919050565b60008160601b9050919050565b6000613807826137ef565b9050919050565b6000613819826137fc565b9050919050565b61383161382c826131fa565b61380e565b82525050565b6000819050919050565b61385261384d826131a6565b613837565b82525050565b60028110613869576138686136d7565b5b50565b600081905061387a82613858565b919050565b600061388a8261386c565b9050919050565b60008160f81b9050919050565b60006138a982613891565b9050919050565b6138c16138bc8261387f565b61389e565b82525050565b60006138d38286613820565b6014820191506138e38285613841565b6020820191506138f382846138b0565b600182019150819050949350505050565b7f4576656e74206e6f742079657420766572696669656400000000000000000000600082015250565b600061393a601683613706565b915061394582613904565b602082019050919050565b600060208201905081810360008301526139698161392d565b9050919050565b7f4e6f2073686172657320746f20636c61696d20666f7200000000000000000000600082015250565b60006139a6601683613706565b91506139b182613970565b602082019050919050565b600060208201905081810360008301526139d581613999565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613a16826131a6565b9150613a21836131a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a5a57613a596139dc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613a9f826131a6565b9150613aaa836131a6565b925082613aba57613ab9613a65565b5b828204905092915050565b7f4e6f207061796f757420666f7220757365720000000000000000000000000000600082015250565b6000613afb601283613706565b9150613b0682613ac5565b602082019050919050565b60006020820190508181036000830152613b2a81613aee565b9050919050565b6000613b3c826131a6565b9150613b47836131a6565b925082821015613b5a57613b596139dc565b5b828203905092915050565b6000604082019050613b7a60008301856131b0565b613b8760208301846131b0565b9392505050565b600081905092915050565b50565b6000613ba9600083613b8e565b9150613bb482613b99565b600082019050919050565b6000613bca82613b9c565b9150819050919050565b7f556e61626c6520746f2073656e642066756e6473000000000000000000000000600082015250565b6000613c0a601483613706565b9150613c1582613bd4565b602082019050919050565b60006020820190508181036000830152613c3981613bfd565b9050919050565b6000613c4b826131a6565b9150613c56836131a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c8b57613c8a6139dc565b5b828201905092915050565b7f43616c6c6572206973206e6f7420612076657269666965720000000000000000600082015250565b6000613ccc601883613706565b9150613cd782613c96565b602082019050919050565b60006020820190508181036000830152613cfb81613cbf565b9050919050565b7f4576656e7420616c726561647920766572696669656400000000000000000000600082015250565b6000613d38601683613706565b9150613d4382613d02565b602082019050919050565b60006020820190508181036000830152613d6781613d2b565b9050919050565b7f4576656e7420616c7265616479206f70656e6564000000000000000000000000600082015250565b6000613da4601483613706565b9150613daf82613d6e565b602082019050919050565b60006020820190508181036000830152613dd381613d97565b9050919050565b7f4576656e7420656e642074696d657374616d70206d75737420626520696e207460008201527f6865206675747572650000000000000000000000000000000000000000000000602082015250565b6000613e36602983613706565b9150613e4182613dda565b604082019050919050565b60006020820190508181036000830152613e6581613e29565b9050919050565b6000604082019050613e8160008301856132dc565b613e8e60208301846131b0565b9392505050565b7f4576656e74206973206e6f74206f6e676f696e67000000000000000000000000600082015250565b6000613ecb601483613706565b9150613ed682613e95565b602082019050919050565b60006020820190508181036000830152613efa81613ebe565b9050919050565b7f70726f746f636f6c46656544657374696e6174696f6e20697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000613f5d602a83613706565b9150613f6882613f01565b604082019050919050565b60006020820190508181036000830152613f8c81613f50565b9050919050565b7f43616e6e6f7420627579207a65726f2073686172657300000000000000000000600082015250565b6000613fc9601683613706565b9150613fd482613f93565b602082019050919050565b60006020820190508181036000830152613ff881613fbc565b9050919050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b6000614035601483613706565b915061404082613fff565b602082019050919050565b6000602082019050818103600083015261406481614028565b9050919050565b614074816131fa565b82525050565b61408381613143565b82525050565b6140928161336d565b82525050565b6140a1816131a6565b82525050565b610120820160008201516140be600085018261406b565b5060208201516140d1602085018261407a565b5060408201516140e46040850182614089565b5060608201516140f76060850182614089565b50608082015161410a6080850182614098565b5060a082015161411d60a0850182614098565b5060c082015161413060c0850182614098565b5060e082015161414360e0850182614098565b50610100820151614158610100850182614098565b50505050565b60006101208201905061417460008301846140a7565b92915050565b7f43616e6e6f742073656c6c207a65726f20736861726573000000000000000000600082015250565b60006141b0601783613706565b91506141bb8261417a565b602082019050919050565b600060208201905081810360008301526141df816141a3565b9050919050565b7f43616e6e6f742073656c6c206d6f726520736861726573207468616e2074686560008201527f2063757272656e7420737570706c790000000000000000000000000000000000602082015250565b6000614242602f83613706565b915061424d826141e6565b604082019050919050565b6000602082019050818103600083015261427181614235565b9050919050565b7f596f7520646f6e2774206861766520656e6f7567682073686172657320746f2060008201527f73656c6c00000000000000000000000000000000000000000000000000000000602082015250565b60006142d4602483613706565b91506142df82614278565b604082019050919050565b60006020820190508181036000830152614303816142c7565b9050919050565b600060408201905061431f60008301856132dc565b61432c602083018461344d565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061438f602683613706565b915061439a82614333565b604082019050919050565b600060208201905081810360008301526143be81614382565b9050919050565b7f4576656e74206973206e6f742076657269666965640000000000000000000000600082015250565b60006143fb601583613706565b9150614406826143c5565b602082019050919050565b6000602082019050818103600083015261442a816143ee565b9050919050565b7f506f6f6c20697320616c726561647920656d7074790000000000000000000000600082015250565b6000614467601583613706565b915061447282614431565b602082019050919050565b600060208201905081810360008301526144968161445a565b9050919050565b7f546865726520617265207374696c6c2073686172657300000000000000000000600082015250565b60006144d3601683613706565b91506144de8261449d565b602082019050919050565b60006020820190508181036000830152614502816144c6565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061453f601f83613706565b915061454a82614509565b602082019050919050565b6000602082019050818103600083015261456e81614532565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006145ab602083613706565b91506145b682614575565b602082019050919050565b600060208201905081810360008301526145da8161459e565b905091905056fea2646970667358221220552f17675e4ac9690a8aefb1f5f50be16c93ced8303434aeddd5b9003e58e10d64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106101f95760003560e01c80638c0a6d3e1161010d578063ac9b5671116100a0578063dcd11d261161006f578063dcd11d26146107c1578063ddfb87a0146107ea578063f2fde38b14610827578063f60751b814610850578063fbe5323414610879576101f9565b8063ac9b5671146106f3578063bc6eaf701461071c578063c9c89f7f14610759578063d6e6eb9f14610796576101f9565b8063a28bde49116100dc578063a28bde4914610634578063a498342114610671578063a71513251461069a578063a8393ec8146106b6576101f9565b80638c0a6d3e146105735780638c169611146105b05780638da5cb5b146105cc5780639b2bd771146105f7576101f9565b806345ef0d2b116101905780635cf4ee911161015f5780635cf4ee911461046857806367031435146104a557806367a5f8d6146104e2578063715018a61461051f5780638678810314610536576101f9565b806345ef0d2b146103c05780634ce7957c146103e957806354e42f7e146104145780635a8a764e1461043f576101f9565b80631287e761116101cc5780631287e761146102de57806313b5408b1461031b57806324dc441d146103585780633310521814610383576101f9565b80630105faff146101fe5780630905c17b1461023b5780630d734519146102785780630fcf5500146102b5575b600080fd5b34801561020a57600080fd5b5061022560048036038101906102209190613179565b6108a2565b60405161023291906131bf565b60405180910390f35b34801561024757600080fd5b50610262600480360381019061025d9190613179565b6108ba565b60405161026f91906131bf565b60405180910390f35b34801561028457600080fd5b5061029f600480360381019061029a9190613289565b6108d2565b6040516102ac91906132eb565b60405180910390f35b3480156102c157600080fd5b506102dc60048036038101906102d79190613289565b6109b6565b005b3480156102ea57600080fd5b5061030560048036038101906103009190613306565b610ec4565b60405161031291906131bf565b60405180910390f35b34801561032757600080fd5b50610342600480360381019061033d91906133a5565b6110ce565b60405161034f91906131bf565b60405180910390f35b34801561036457600080fd5b5061036d6111b9565b60405161037a91906131bf565b60405180910390f35b34801561038f57600080fd5b506103aa60048036038101906103a59190613420565b6111bf565b6040516103b7919061345c565b60405180910390f35b3480156103cc57600080fd5b506103e760048036038101906103e29190613477565b6111df565b005b3480156103f557600080fd5b506103fe611434565b60405161040b91906134ed565b60405180910390f35b34801561042057600080fd5b5061042961145a565b60405161043691906131bf565b60405180910390f35b34801561044b57600080fd5b5061046660048036038101906104619190613508565b611460565b005b34801561047457600080fd5b5061048f600480360381019061048a9190613535565b611472565b60405161049c91906131bf565b60405180910390f35b3480156104b157600080fd5b506104cc60048036038101906104c79190613575565b6114d4565b6040516104d991906131bf565b60405180910390f35b3480156104ee57600080fd5b50610509600480360381019061050491906133a5565b611607565b60405161051691906131bf565b60405180910390f35b34801561052b57600080fd5b506105346116ee565b005b34801561054257600080fd5b5061055d60048036038101906105589190613179565b611702565b60405161056a91906131bf565b60405180910390f35b34801561057f57600080fd5b5061059a600480360381019061059591906135f0565b61171a565b6040516105a791906131bf565b60405180910390f35b6105ca60048036038101906105c591906133a5565b61173f565b005b3480156105d857600080fd5b506105e1611daa565b6040516105ee91906134ed565b60405180910390f35b34801561060357600080fd5b5061061e600480360381019061061991906133a5565b611dd3565b60405161062b91906131bf565b60405180910390f35b34801561064057600080fd5b5061065b600480360381019061065691906135f0565b611ebe565b60405161066891906131bf565b60405180910390f35b34801561067d57600080fd5b5061069860048036038101906106939190613508565b611ee3565b005b6106b460048036038101906106af91906133a5565b611ef5565b005b3480156106c257600080fd5b506106dd60048036038101906106d89190613179565b6126d6565b6040516106ea919061345c565b60405180910390f35b3480156106ff57600080fd5b5061071a60048036038101906107159190613630565b6126f6565b005b34801561072857600080fd5b50610743600480360381019061073e91906133a5565b612759565b60405161075091906131bf565b60405180910390f35b34801561076557600080fd5b50610780600480360381019061077b9190613179565b612821565b60405161078d91906131bf565b60405180910390f35b3480156107a257600080fd5b506107ab612839565b6040516107b891906131bf565b60405180910390f35b3480156107cd57600080fd5b506107e860048036038101906107e39190613670565b61283f565b005b3480156107f657600080fd5b50610811600480360381019061080c9190613179565b612a3b565b60405161081e919061345c565b60405180910390f35b34801561083357600080fd5b5061084e60048036038101906108499190613420565b612a5b565b005b34801561085c57600080fd5b5061087760048036038101906108729190613289565b612adf565b005b34801561088557600080fd5b506108a0600480360381019061089b9190613420565b612f4f565b005b60096020528060005260406000206000915090505481565b600d6020528060005260406000206000915090505481565b600081600060018111156108e9576108e86136d7565b5b8160018111156108fc576108fb6136d7565b5b1461093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093390613763565b60405180910390fd5b620f42408410610981576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610978906137cf565b60405180910390fd5b848484604051602001610996939291906138c7565b604051602081830303815290604052805190602001209150509392505050565b80600060018111156109cb576109ca6136d7565b5b8160018111156109de576109dd6136d7565b5b14610a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1590613763565b60405180910390fd5b610a26612f9b565b6000610a338585856108d2565b9050600a600082815260200190815260200160002060009054906101000a900460ff16610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90613950565b60405180910390fd5b6000600b600083815260200190815260200160002060009054906101000a900460ff169050600081610b17576007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b69565b6006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b905060008111610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba5906139bc565b60405180910390fd5b6000600d6000858152602001908152602001600020549050600083610be6576009600086815260200190815260200160002054610bfb565b60086000868152602001908152602001600020545b90506000808214610c2257818484610c139190613a0b565b610c1d9190613a94565b610c25565b60005b905060008111610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6190613b11565b60405180910390fd5b8415610cf55760006006600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600860008881526020019081526020016000206000828254610ce99190613b31565b92505081905550610d76565b60006007600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600960008881526020019081526020016000206000828254610d6e9190613b31565b925050819055505b80600d60008881526020019081526020016000206000828254610d999190613b31565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f634235fcf5af0adbca1a405ec65f6f6c08f55e1f379c2c45cd10f23cb29e0e3182600d60008a815260200190815260200160002054604051610dfb929190613b65565b60405180910390a260003373ffffffffffffffffffffffffffffffffffffffff1682604051610e2990613bbf565b60006040518083038185875af1925050503d8060008114610e66576040519150601f19603f3d011682016040523d82523d6000602084013e610e6b565b606091505b5050905080610eaf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea690613c20565b60405180910390fd5b50505050505050610ebe612feb565b50505050565b60008260006001811115610edb57610eda6136d7565b5b816001811115610eee57610eed6136d7565b5b14610f2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2590613763565b60405180910390fd5b6000610f3b8787876108d2565b9050600a600082815260200190815260200160002060009054906101000a900460ff16610f6c5760009250506110c5565b6000600b600083815260200190815260200160002060009054906101000a900460ff169050600081610fee576007600084815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611040565b6006600084815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b90506000600d600085815260200190815260200160002054905060008361107a57600960008681526020019081526020016000205461108f565b60086000868152602001908152602001600020545b905060008082146110b6578184846110a79190613a0b565b6110b19190613a94565b6110b9565b60005b90508097505050505050505b50949350505050565b600083600060018111156110e5576110e46136d7565b5b8160018111156110f8576110f76136d7565b5b14611138576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112f90613763565b60405180910390fd5b60006111478888888888612759565b90506000670de0b6b3a7640000600354836111629190613a0b565b61116c9190613a94565b90506000670de0b6b3a7640000600454846111879190613a0b565b6111919190613a94565b90508082846111a09190613c40565b6111aa9190613c40565b94505050505095945050505050565b60045481565b600e6020528060005260406000206000915054906101000a900460ff1681565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661126b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126290613ce2565b60405180910390fd5b81600060018111156112805761127f6136d7565b5b816001811115611293576112926136d7565b5b146112d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ca90613763565b60405180910390fd5b60006112e08686866108d2565b9050600a600082815260200190815260200160002060009054906101000a900460ff1615611343576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133a90613d4e565b60405180910390fd5b6000600c60008381526020019081526020016000205414611399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139090613dba565b60405180910390fd5b4283116113db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d290613e4c565b60405180910390fd5b82600c6000838152602001908152602001600020819055507f67c81c88502f8cadccbe9f54b615f7a97e88d9945c6a271e7787258961c78cd38184604051611424929190613e6c565b60405180910390a1505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b611468612ff4565b8060048190555050565b6000806001846114829190613c40565b9050600083856114929190613c40565b9050600060026005548684866114a89190613c40565b6114b29190613a0b565b6114bc9190613a0b565b6114c69190613a94565b905080935050505092915050565b600083600060018111156114eb576114ea6136d7565b5b8160018111156114fe576114fd6136d7565b5b1461153e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153590613763565b60405180910390fd5b600061154b8888886108d2565b9050846115a8576007600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115fa565b6006600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b9250505095945050505050565b6000836000600181111561161e5761161d6136d7565b5b816001811115611631576116306136d7565b5b14611671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166890613763565b60405180910390fd5b600061167e8888886108d2565b90506000856116a05760096000838152602001908152602001600020546116b5565b60086000838152602001908152602001600020545b9050848110156116ca576000935050506116e4565b6116df85826116d99190613b31565b86611472565b935050505b5095945050505050565b6116f6612ff4565b6117006000613072565b565b600c6020528060005260406000206000915090505481565b6007602052816000526040600020602052806000526040600020600091509150505481565b8260006001811115611754576117536136d7565b5b816001811115611767576117666136d7565b5b146117a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179e90613763565b60405180910390fd5b60006117b48787876108d2565b90506000600c6000838152602001908152602001600020541180156117eb575042600c600083815260200190815260200160002054115b61182a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182190613ee1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b390613f73565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff161561191d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191490613d4e565b60405180910390fd5b60008311611960576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195790613fdf565b60405180910390fd5b600084611980576009600083815260200190815260200160002054611995565b60086000838152602001908152602001600020545b905060006119a38286611472565b90506000670de0b6b3a7640000600354836119be9190613a0b565b6119c89190613a94565b90506000670de0b6b3a7640000600454846119e39190613a0b565b6119ed9190613a94565b90508082846119fc9190613c40565b611a069190613c40565b341015611a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3f9061404b565b60405180910390fd5b808234611a559190613b31565b611a5f9190613b31565b600d60008781526020019081526020016000206000828254611a819190613c40565b925050819055508715611b2457866006600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611aee9190613c40565b9250508190555086600860008781526020019081526020016000206000828254611b189190613c40565b92505081905550611bb6565b866007600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b849190613c40565b9250508190555086600960008781526020019081526020016000206000828254611bae9190613c40565b925050819055505b60006040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018781526020016001151581526020018a151581526020018981526020018581526020018481526020018381526020018987611c1b9190613c40565b81525090507f3b9bd27781456fed243b0e24f17268c9900c2bbe7e7fc6a6f61c9fdd66edbb2581604051611c4f919061415e565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1684604051611c9f90613bbf565b60006040518083038185875af1925050503d8060008114611cdc576040519150601f19603f3d011682016040523d82523d6000602084013e611ce1565b606091505b5050905060008d73ffffffffffffffffffffffffffffffffffffffff1684604051611d0b90613bbf565b60006040518083038185875af1925050503d8060008114611d48576040519150601f19603f3d011682016040523d82523d6000602084013e611d4d565b606091505b50509050818015611d5b5750805b611d9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9190613c20565b60405180910390fd5b5050505050505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008360006001811115611dea57611de96136d7565b5b816001811115611dfd57611dfc6136d7565b5b14611e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e3490613763565b60405180910390fd5b6000611e4c8888888888611607565b90506000670de0b6b3a764000060035483611e679190613a0b565b611e719190613a94565b90506000670de0b6b3a764000060045484611e8c9190613a0b565b611e969190613a94565b9050808284611ea59190613b31565b611eaf9190613b31565b94505050505095945050505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b611eeb612ff4565b8060038190555050565b8260006001811115611f0a57611f096136d7565b5b816001811115611f1d57611f1c6136d7565b5b14611f5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5490613763565b60405180910390fd5b611f65612f9b565b6000611f728787876108d2565b90506000600c600083815260200190815260200160002054118015611fa9575042600c600083815260200190815260200160002054115b611fe8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fdf90613ee1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561207a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207190613f73565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff16156120db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120d290613d4e565b60405180910390fd5b6000831161211e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612115906141c6565b60405180910390fd5b60008461213e576009600083815260200190815260200160002054612153565b60086000838152602001908152602001600020545b905083811015612198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218f90614258565b60405180910390fd5b6000856121f5576007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612247565b6006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b90508481101561228c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612283906142ea565b60405180910390fd5b60006122a3868461229d9190613b31565b87611472565b90506000670de0b6b3a7640000600354836122be9190613a0b565b6122c89190613a94565b90506000670de0b6b3a7640000600454846122e39190613a0b565b6122ed9190613a94565b9050881561238b57876006600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123559190613b31565b925050819055508760086000888152602001908152602001600020600082825461237f9190613b31565b9250508190555061241d565b876007600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123eb9190613b31565b92505081905550876009600088815260200190815260200160002060008282546124159190613b31565b925050819055505b82600d600088815260200190815260200160002060008282546124409190613b31565b92505081905550600088866124559190613b31565b905060006040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018981526020016000151581526020018c151581526020018b81526020018681526020018581526020018481526020018381525090507f3b9bd27781456fed243b0e24f17268c9900c2bbe7e7fc6a6f61c9fdd66edbb25816040516124e5919061415e565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560405161253590613bbf565b60006040518083038185875af1925050503d8060008114612572576040519150601f19603f3d011682016040523d82523d6000602084013e612577565b606091505b5050905060008f73ffffffffffffffffffffffffffffffffffffffff16856040516125a190613bbf565b60006040518083038185875af1925050503d80600081146125de576040519150601f19603f3d011682016040523d82523d6000602084013e6125e3565b606091505b5050905060003373ffffffffffffffffffffffffffffffffffffffff1686888a61260d9190613b31565b6126179190613b31565b60405161262390613bbf565b60006040518083038185875af1925050503d8060008114612660576040519150601f19603f3d011682016040523d82523d6000602084013e612665565b606091505b505090508280156126735750815b801561267c5750805b6126bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126b290613c20565b60405180910390fd5b50505050505050505050506126ce612feb565b505050505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b6126fe612ff4565b80600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600083600060018111156127705761276f6136d7565b5b816001811115612783576127826136d7565b5b146127c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127ba90613763565b60405180910390fd5b60006127d08888886108d2565b90506000856127f2576009600083815260200190815260200160002054612807565b60086000838152602001908152602001600020545b90506128138186611472565b935050505095945050505050565b60086020528060005260406000206000915090505481565b60035481565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166128cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128c290613ce2565b60405180910390fd5b81600060018111156128e0576128df6136d7565b5b8160018111156128f3576128f26136d7565b5b14612933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161292a90613763565b60405180910390fd5b60006129408686866108d2565b9050600a600082815260200190815260200160002060009054906101000a900460ff16156129a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299a90613d4e565b60405180910390fd5b6001600a600083815260200190815260200160002060006101000a81548160ff02191690831515021790555082600b600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcc923a681ce0b30457b296ce823db752116e20a34977298145ccd5c46f9b38bc8184604051612a2b92919061430a565b60405180910390a1505050505050565b600b6020528060005260406000206000915054906101000a900460ff1681565b612a63612ff4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ad3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612aca906143a5565b60405180910390fd5b612adc81613072565b50565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612b6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b6290613ce2565b60405180910390fd5b8060006001811115612b8057612b7f6136d7565b5b816001811115612b9357612b926136d7565b5b14612bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bca90613763565b60405180910390fd5b6000612be08585856108d2565b9050600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c6b90613f73565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff16612cd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ccb90614411565b60405180910390fd5b6000600d60008381526020019081526020016000205411612d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d219061447d565b60405180910390fd5b6000600b600083815260200190815260200160002060009054906101000a900460ff16612d6a576009600083815260200190815260200160002054612d7f565b60086000838152602001908152602001600020545b905060008114612dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dbb906144e9565b60405180910390fd5b60006002600d600085815260200190815260200160002054612de69190613a94565b90506000600d6000858152602001908152602001600020819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051612e4990613bbf565b60006040518083038185875af1925050503d8060008114612e86576040519150601f19603f3d011682016040523d82523d6000602084013e612e8b565b606091505b5050905060008873ffffffffffffffffffffffffffffffffffffffff1683604051612eb590613bbf565b60006040518083038185875af1925050503d8060008114612ef2576040519150601f19603f3d011682016040523d82523d6000602084013e612ef7565b606091505b50509050818015612f055750805b612f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f3b90613c20565b60405180910390fd5b505050505050505050565b612f57612ff4565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026001541415612fe1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fd890614555565b60405180910390fd5b6002600181905550565b60018081905550565b612ffc613136565b73ffffffffffffffffffffffffffffffffffffffff1661301a611daa565b73ffffffffffffffffffffffffffffffffffffffff1614613070576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613067906145c1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61315681613143565b811461316157600080fd5b50565b6000813590506131738161314d565b92915050565b60006020828403121561318f5761318e61313e565b5b600061319d84828501613164565b91505092915050565b6000819050919050565b6131b9816131a6565b82525050565b60006020820190506131d460008301846131b0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613205826131da565b9050919050565b613215816131fa565b811461322057600080fd5b50565b6000813590506132328161320c565b92915050565b613241816131a6565b811461324c57600080fd5b50565b60008135905061325e81613238565b92915050565b6002811061327157600080fd5b50565b60008135905061328381613264565b92915050565b6000806000606084860312156132a2576132a161313e565b5b60006132b086828701613223565b93505060206132c18682870161324f565b92505060406132d286828701613274565b9150509250925092565b6132e581613143565b82525050565b600060208201905061330060008301846132dc565b92915050565b600080600080608085870312156133205761331f61313e565b5b600061332e87828801613223565b945050602061333f8782880161324f565b935050604061335087828801613274565b925050606061336187828801613223565b91505092959194509250565b60008115159050919050565b6133828161336d565b811461338d57600080fd5b50565b60008135905061339f81613379565b92915050565b600080600080600060a086880312156133c1576133c061313e565b5b60006133cf88828901613223565b95505060206133e08882890161324f565b94505060406133f188828901613274565b935050606061340288828901613390565b92505060806134138882890161324f565b9150509295509295909350565b6000602082840312156134365761343561313e565b5b600061344484828501613223565b91505092915050565b6134568161336d565b82525050565b6000602082019050613471600083018461344d565b92915050565b600080600080608085870312156134915761349061313e565b5b600061349f87828801613223565b94505060206134b08782880161324f565b93505060406134c187828801613274565b92505060606134d28782880161324f565b91505092959194509250565b6134e7816131fa565b82525050565b600060208201905061350260008301846134de565b92915050565b60006020828403121561351e5761351d61313e565b5b600061352c8482850161324f565b91505092915050565b6000806040838503121561354c5761354b61313e565b5b600061355a8582860161324f565b925050602061356b8582860161324f565b9150509250929050565b600080600080600060a086880312156135915761359061313e565b5b600061359f88828901613223565b95505060206135b08882890161324f565b94505060406135c188828901613274565b93505060606135d288828901613390565b92505060806135e388828901613223565b9150509295509295909350565b600080604083850312156136075761360661313e565b5b600061361585828601613164565b925050602061362685828601613223565b9150509250929050565b600080604083850312156136475761364661313e565b5b600061365585828601613223565b925050602061366685828601613390565b9150509250929050565b6000806000806080858703121561368a5761368961313e565b5b600061369887828801613223565b94505060206136a98782880161324f565b93505060406136ba87828801613274565b92505060606136cb87828801613390565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f496e76616c6964206576656e7420747970650000000000000000000000000000600082015250565b600061374d601283613706565b915061375882613717565b602082019050919050565b6000602082019050818103600083015261377c81613740565b9050919050565b7f4944206d757374206265206c657373207468616e2031206d696c6c696f6e0000600082015250565b60006137b9601e83613706565b91506137c482613783565b602082019050919050565b600060208201905081810360008301526137e8816137ac565b9050919050565b60008160601b9050919050565b6000613807826137ef565b9050919050565b6000613819826137fc565b9050919050565b61383161382c826131fa565b61380e565b82525050565b6000819050919050565b61385261384d826131a6565b613837565b82525050565b60028110613869576138686136d7565b5b50565b600081905061387a82613858565b919050565b600061388a8261386c565b9050919050565b60008160f81b9050919050565b60006138a982613891565b9050919050565b6138c16138bc8261387f565b61389e565b82525050565b60006138d38286613820565b6014820191506138e38285613841565b6020820191506138f382846138b0565b600182019150819050949350505050565b7f4576656e74206e6f742079657420766572696669656400000000000000000000600082015250565b600061393a601683613706565b915061394582613904565b602082019050919050565b600060208201905081810360008301526139698161392d565b9050919050565b7f4e6f2073686172657320746f20636c61696d20666f7200000000000000000000600082015250565b60006139a6601683613706565b91506139b182613970565b602082019050919050565b600060208201905081810360008301526139d581613999565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613a16826131a6565b9150613a21836131a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a5a57613a596139dc565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613a9f826131a6565b9150613aaa836131a6565b925082613aba57613ab9613a65565b5b828204905092915050565b7f4e6f207061796f757420666f7220757365720000000000000000000000000000600082015250565b6000613afb601283613706565b9150613b0682613ac5565b602082019050919050565b60006020820190508181036000830152613b2a81613aee565b9050919050565b6000613b3c826131a6565b9150613b47836131a6565b925082821015613b5a57613b596139dc565b5b828203905092915050565b6000604082019050613b7a60008301856131b0565b613b8760208301846131b0565b9392505050565b600081905092915050565b50565b6000613ba9600083613b8e565b9150613bb482613b99565b600082019050919050565b6000613bca82613b9c565b9150819050919050565b7f556e61626c6520746f2073656e642066756e6473000000000000000000000000600082015250565b6000613c0a601483613706565b9150613c1582613bd4565b602082019050919050565b60006020820190508181036000830152613c3981613bfd565b9050919050565b6000613c4b826131a6565b9150613c56836131a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c8b57613c8a6139dc565b5b828201905092915050565b7f43616c6c6572206973206e6f7420612076657269666965720000000000000000600082015250565b6000613ccc601883613706565b9150613cd782613c96565b602082019050919050565b60006020820190508181036000830152613cfb81613cbf565b9050919050565b7f4576656e7420616c726561647920766572696669656400000000000000000000600082015250565b6000613d38601683613706565b9150613d4382613d02565b602082019050919050565b60006020820190508181036000830152613d6781613d2b565b9050919050565b7f4576656e7420616c7265616479206f70656e6564000000000000000000000000600082015250565b6000613da4601483613706565b9150613daf82613d6e565b602082019050919050565b60006020820190508181036000830152613dd381613d97565b9050919050565b7f4576656e7420656e642074696d657374616d70206d75737420626520696e207460008201527f6865206675747572650000000000000000000000000000000000000000000000602082015250565b6000613e36602983613706565b9150613e4182613dda565b604082019050919050565b60006020820190508181036000830152613e6581613e29565b9050919050565b6000604082019050613e8160008301856132dc565b613e8e60208301846131b0565b9392505050565b7f4576656e74206973206e6f74206f6e676f696e67000000000000000000000000600082015250565b6000613ecb601483613706565b9150613ed682613e95565b602082019050919050565b60006020820190508181036000830152613efa81613ebe565b9050919050565b7f70726f746f636f6c46656544657374696e6174696f6e20697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000613f5d602a83613706565b9150613f6882613f01565b604082019050919050565b60006020820190508181036000830152613f8c81613f50565b9050919050565b7f43616e6e6f7420627579207a65726f2073686172657300000000000000000000600082015250565b6000613fc9601683613706565b9150613fd482613f93565b602082019050919050565b60006020820190508181036000830152613ff881613fbc565b9050919050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b6000614035601483613706565b915061404082613fff565b602082019050919050565b6000602082019050818103600083015261406481614028565b9050919050565b614074816131fa565b82525050565b61408381613143565b82525050565b6140928161336d565b82525050565b6140a1816131a6565b82525050565b610120820160008201516140be600085018261406b565b5060208201516140d1602085018261407a565b5060408201516140e46040850182614089565b5060608201516140f76060850182614089565b50608082015161410a6080850182614098565b5060a082015161411d60a0850182614098565b5060c082015161413060c0850182614098565b5060e082015161414360e0850182614098565b50610100820151614158610100850182614098565b50505050565b60006101208201905061417460008301846140a7565b92915050565b7f43616e6e6f742073656c6c207a65726f20736861726573000000000000000000600082015250565b60006141b0601783613706565b91506141bb8261417a565b602082019050919050565b600060208201905081810360008301526141df816141a3565b9050919050565b7f43616e6e6f742073656c6c206d6f726520736861726573207468616e2074686560008201527f2063757272656e7420737570706c790000000000000000000000000000000000602082015250565b6000614242602f83613706565b915061424d826141e6565b604082019050919050565b6000602082019050818103600083015261427181614235565b9050919050565b7f596f7520646f6e2774206861766520656e6f7567682073686172657320746f2060008201527f73656c6c00000000000000000000000000000000000000000000000000000000602082015250565b60006142d4602483613706565b91506142df82614278565b604082019050919050565b60006020820190508181036000830152614303816142c7565b9050919050565b600060408201905061431f60008301856132dc565b61432c602083018461344d565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061438f602683613706565b915061439a82614333565b604082019050919050565b600060208201905081810360008301526143be81614382565b9050919050565b7f4576656e74206973206e6f742076657269666965640000000000000000000000600082015250565b60006143fb601583613706565b9150614406826143c5565b602082019050919050565b6000602082019050818103600083015261442a816143ee565b9050919050565b7f506f6f6c20697320616c726561647920656d7074790000000000000000000000600082015250565b6000614467601583613706565b915061447282614431565b602082019050919050565b600060208201905081810360008301526144968161445a565b9050919050565b7f546865726520617265207374696c6c2073686172657300000000000000000000600082015250565b60006144d3601683613706565b91506144de8261449d565b602082019050919050565b60006020820190508181036000830152614502816144c6565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061453f601f83613706565b915061454a82614509565b602082019050919050565b6000602082019050818103600083015261456e81614532565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006145ab602083613706565b91506145b682614575565b602082019050919050565b600060208201905081810360008301526145da8161459e565b905091905056fea2646970667358221220552f17675e4ac9690a8aefb1f5f50be16c93ced8303434aeddd5b9003e58e10d64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 79,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 193,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "protocolFeeDestination",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 195,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "protocolFeePercent",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 197,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "subjectFeePercent",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 199,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "priceSlope",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 249,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "yayVotesBalance",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 255,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "nayVotesBalance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 259,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "yayVotesSupply",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 263,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "nayVotesSupply",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 267,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "eventVerified",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 271,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "eventResult",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 275,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "eventEndTimestamp",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 279,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "votingPooledEth",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 283,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "isVerifier",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}