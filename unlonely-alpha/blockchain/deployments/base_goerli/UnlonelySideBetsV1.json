{
  "address": "0x6f36Eb517060b7558B48035e66cf5a843C456436",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "opponent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "wagerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWinnerPicked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct UnlonelySideBetsV1.SideBet",
          "name": "sideBet",
          "type": "tuple"
        }
      ],
      "name": "SideBetAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "opponent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "wagerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWinnerPicked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct UnlonelySideBetsV1.SideBet",
          "name": "sideBet",
          "type": "tuple"
        }
      ],
      "name": "SideBetClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "opponent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "wagerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWinnerPicked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct UnlonelySideBetsV1.SideBet",
          "name": "sideBet",
          "type": "tuple"
        }
      ],
      "name": "SideBetOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "eventByte",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "WinnerPicked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "acceptSideBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "closeSideBet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "generateKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVerifier",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationTime",
          "type": "uint256"
        }
      ],
      "name": "openSideBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        }
      ],
      "name": "pickWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeDestination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeDestination",
          "type": "address"
        }
      ],
      "name": "setFeeDestination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setSubjectFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "sideBetStructs",
      "outputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isWinnerPicked",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd0dd9d1de55a2fb44a8155711cbcf82bd42e6ec20e9f8b6232ce80a3c0be9bf8",
  "receipt": {
    "to": null,
    "from": "0x34Bb9e91dC8AC1E13fb42A0e23f7236999e063D4",
    "contractAddress": "0x6f36Eb517060b7558B48035e66cf5a843C456436",
    "transactionIndex": 1,
    "gasUsed": "2618981",
    "logsBloom": "0x
    "blockHash": "0xa1b272cd0b16a143fe44f33ea4e7d2be8ac07c680de2e4d91edf0cdd0d7e3f25",
    "transactionHash": "0xd0dd9d1de55a2fb44a8155711cbcf82bd42e6ec20e9f8b6232ce80a3c0be9bf8",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 13312358,
        "transactionHash": "0xd0dd9d1de55a2fb44a8155711cbcf82bd42e6ec20e9f8b6232ce80a3c0be9bf8",
        "address": "0x6f36Eb517060b7558B48035e66cf5a843C456436",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000034bb9e91dc8ac1e13fb42a0e23f7236999e063d4"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xa1b272cd0b16a143fe44f33ea4e7d2be8ac07c680de2e4d91edf0cdd0d7e3f25"
      }
    ],
    "blockNumber": 13312358,
    "cumulativeGasUsed": "2665810",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4083d40415c677ccdff38b1a63409c41",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWinnerPicked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct UnlonelySideBetsV1.SideBet\",\"name\":\"sideBet\",\"type\":\"tuple\"}],\"name\":\"SideBetAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWinnerPicked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct UnlonelySideBetsV1.SideBet\",\"name\":\"sideBet\",\"type\":\"tuple\"}],\"name\":\"SideBetClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWinnerPicked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct UnlonelySideBetsV1.SideBet\",\"name\":\"sideBet\",\"type\":\"tuple\"}],\"name\":\"SideBetOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"acceptSideBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"closeSideBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"generateKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVerifier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"}],\"name\":\"openSideBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"}],\"name\":\"pickWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setSubjectFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"sideBetStructs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWinnerPicked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UnlonelySideBetsV1.sol\":\"UnlonelySideBetsV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"contracts/UnlonelySideBetsV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _transferOwnership(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if the sender is not the owner.\\r\\n     */\\r\\n    function _checkOwner() internal view virtual {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Internal function without access restriction.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract UnlonelySideBetsV1 is Ownable, ReentrancyGuard {\\r\\n    address public protocolFeeDestination;\\r\\n    uint256 public protocolFeePercent;\\r\\n    uint256 public subjectFeePercent;\\r\\n\\r\\n    struct SideBet {\\r\\n        address initiator;\\r\\n        // person who initiates or creates the bet\\r\\n        address opponent;\\r\\n        // person who accepts the bet\\r\\n        uint256 wagerAmount;\\r\\n        // amount ETH wagered by each party\\r\\n        uint256 expirationTime;\\r\\n        // timestamp that closes bet if no opponents take the bet\\r\\n        bool isWinnerPicked;\\r\\n        // self-explanatory\\r\\n        address winner;\\r\\n        // winning address\\r\\n    }\\r\\n\\r\\n    event SideBetOpened(SideBet sideBet);\\r\\n    event SideBetAccepted(SideBet sideBet);\\r\\n    event WinnerPicked(bytes32 eventByte, address winner);\\r\\n    event SideBetClosed(SideBet sideBet);\\r\\n\\r\\n    mapping(bytes32 => SideBet) public sideBetStructs;\\r\\n\\r\\n    // user roles\\r\\n    mapping(address => bool) public isVerifier;\\r\\n\\r\\n    modifier onlyVerifier() {\\r\\n        require(isVerifier[msg.sender], \\\"Caller is not a verifier\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    enum EventType {\\r\\n        YayNayVote,\\r\\n        VipBadge,\\r\\n        SideBet\\r\\n    }\\r\\n\\r\\n    modifier validEventType(EventType eventType) {\\r\\n        require(\\r\\n            eventType == EventType.SideBet,\\r\\n            \\\"Invalid event type\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        // Set the contract deployer as the initial verifier\\r\\n        isVerifier[msg.sender] = true;\\r\\n\\r\\n        protocolFeePercent = 5 * 10**16; // 5%\\r\\n        subjectFeePercent = 5 * 10**16;  // 5%\\r\\n    }\\r\\n\\r\\n    function setFeeDestination(address _feeDestination) public onlyOwner {\\r\\n        protocolFeeDestination = _feeDestination;\\r\\n    }\\r\\n\\r\\n    function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        protocolFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        subjectFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setVerifier(address verifier, bool value) public onlyOwner {\\r\\n        isVerifier[verifier] = value;\\r\\n    }\\r\\n\\r\\n\\tfunction generateKey(address eventAddress, uint256 eventId, EventType eventType) public pure validEventType(eventType) returns (bytes32) {\\r\\n        require(eventId < 10000000, \\\"ID must be less than 10 million\\\");\\r\\n        return keccak256(abi.encodePacked(eventAddress, eventId, eventType));\\r\\n    }\\r\\n\\r\\n    function openSideBet(\\r\\n        address eventAddress, \\r\\n        uint256 eventId, \\r\\n        EventType eventType, \\r\\n        uint256 wagerAmount, \\r\\n        uint256 expirationTime\\r\\n    ) public payable onlyVerifier validEventType(eventType) nonReentrant {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(sideBetStructs[eventBytes].initiator == address(0), \\\"Sidebet already created\\\");\\r\\n\\r\\n        uint256 protocolFee = wagerAmount * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = wagerAmount * subjectFeePercent / 1 ether;\\r\\n        require(msg.value >= wagerAmount + protocolFee + subjectFee, \\\"Insufficient payment\\\");\\r\\n\\r\\n        // TO DO: refund user their excess ETH\\r\\n\\r\\n        sideBetStructs[eventBytes] = SideBet({\\r\\n            initiator: msg.sender,\\r\\n            opponent: address(0), // No opponent yet\\r\\n            wagerAmount: wagerAmount,\\r\\n            expirationTime: expirationTime,\\r\\n            isWinnerPicked: false,\\r\\n            winner: address(0) // No winner yet\\r\\n        });\\r\\n\\r\\n        emit SideBetOpened(sideBetStructs[eventBytes]);\\r\\n\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function acceptSideBet(\\r\\n        address eventAddress, \\r\\n        uint256 eventId, \\r\\n        EventType eventType\\r\\n    ) public payable {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n\\r\\n        // Check if the sidebet exists and is open for an opponent\\r\\n        require(sideBetStructs[eventBytes].initiator != address(0), \\\"Sidebet does not exist\\\");\\r\\n        require(sideBetStructs[eventBytes].opponent == address(0), \\\"Sidebet already taken\\\");\\r\\n        require(sideBetStructs[eventBytes].expirationTime > block.timestamp, \\\"Sidebet expired\\\");\\r\\n        \\r\\n        // Validate the wager amount\\r\\n        uint256 wagerAmount = sideBetStructs[eventBytes].wagerAmount;\\r\\n        uint256 protocolFee = wagerAmount * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = wagerAmount * subjectFeePercent / 1 ether;\\r\\n        require(msg.value >= wagerAmount + protocolFee + subjectFee, \\\"Insufficient payment\\\");\\r\\n\\r\\n        // Update the sidebet with the opponent details\\r\\n        sideBetStructs[eventBytes].opponent = msg.sender;\\r\\n\\r\\n        emit SideBetAccepted(sideBetStructs[eventBytes]);\\r\\n\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function pickWinner(\\r\\n        address eventAddress,\\r\\n        uint256 eventId,\\r\\n        EventType eventType,\\r\\n        address winnerAddress\\r\\n    ) public onlyVerifier {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n\\r\\n        // Ensure the sidebet exists and is valid\\r\\n        require(sideBetStructs[eventBytes].initiator != address(0), \\\"Sidebet does not exist\\\");\\r\\n        require(sideBetStructs[eventBytes].opponent != address(0), \\\"Sidebet not yet accepted\\\");\\r\\n        require(!sideBetStructs[eventBytes].isWinnerPicked, \\\"Winner already picked\\\");\\r\\n\\r\\n        // Assign the winner\\r\\n        sideBetStructs[eventBytes].winner = winnerAddress;\\r\\n        sideBetStructs[eventBytes].isWinnerPicked = true;\\r\\n\\r\\n        emit WinnerPicked(eventBytes, winnerAddress);\\r\\n\\r\\n        // Handle payout\\r\\n        uint256 totalWager = sideBetStructs[eventBytes].wagerAmount * 2; // Sum of both wagers\\r\\n        (bool success, ) = winnerAddress.call{value: totalWager}(\\\"\\\");\\r\\n        require(success, \\\"Failed to transfer winnings\\\");\\r\\n    }\\r\\n\\r\\n    function closeSideBet(\\r\\n        address eventAddress,\\r\\n        uint256 eventId,\\r\\n        EventType eventType\\r\\n    ) public {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n\\r\\n        // Check if the sidebet exists\\r\\n        require(sideBetStructs[eventBytes].initiator != address(0), \\\"Sidebet does not exist\\\");\\r\\n        // Ensure that the msg.sender is the initiator of the sidebet\\r\\n        require(sideBetStructs[eventBytes].initiator == msg.sender, \\\"Only initiator can close the sidebet\\\");\\r\\n        // Check if sidebet has expired and not yet accepted\\r\\n        require(block.timestamp >= sideBetStructs[eventBytes].expirationTime, \\\"Sidebet not yet expired\\\");\\r\\n        require(sideBetStructs[eventBytes].opponent == address(0), \\\"Sidebet already accepted\\\");\\r\\n\\r\\n        // Refund the wager to the initiator\\r\\n        uint256 wager = sideBetStructs[eventBytes].wagerAmount;\\r\\n        address initiator = sideBetStructs[eventBytes].initiator;\\r\\n\\r\\n        // Reset the sidebet to free up storage and refund gas\\r\\n        delete sideBetStructs[eventBytes];\\r\\n\\r\\n        (bool success, ) = initiator.call{value: wager}(\\\"\\\");\\r\\n        require(success, \\\"Refund failed\\\");\\r\\n\\r\\n        emit SideBetClosed(sideBetStructs[eventBytes]);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x575ff95b191d729d0d8bc04263b6a544f308ac6bcffbc2e5b7ddc81b1d152827\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100fe5760003560e01c8063715018a611610095578063ac9b567111610064578063ac9b56711461030a578063c9e18c5b14610333578063d6e6eb9f1461035c578063f2fde38b14610387578063fbe53234146103b0576100fe565b8063715018a6146102765780638da5cb5b1461028d57806391b0e305146102b8578063a4983421146102e1576100fe565b806333105218116100d157806333105218146101c95780634ce7957c146102065780635a8a764e146102315780636c4d36261461025a576100fe565b806306fae4e0146101035780630d7345191461014557806324dc441d146101825780633122883f146101ad575b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190611b49565b6103d9565b60405161013c96959493929190611beb565b60405180910390f35b34801561015157600080fd5b5061016c60048036038101906101679190611cc9565b610482565b6040516101799190611d2b565b60405180910390f35b34801561018e57600080fd5b50610197610565565b6040516101a49190611d46565b60405180910390f35b6101c760048036038101906101c29190611d61565b61056b565b005b3480156101d557600080fd5b506101f060048036038101906101eb9190611ddc565b610af1565b6040516101fd9190611e09565b60405180910390f35b34801561021257600080fd5b5061021b610b11565b6040516102289190611e24565b60405180910390f35b34801561023d57600080fd5b5061025860048036038101906102539190611e3f565b610b37565b005b610274600480360381019061026f9190611cc9565b610b49565b005b34801561028257600080fd5b5061028b610fa5565b005b34801561029957600080fd5b506102a2610fb9565b6040516102af9190611e24565b60405180910390f35b3480156102c457600080fd5b506102df60048036038101906102da9190611e6c565b610fe2565b005b3480156102ed57600080fd5b5061030860048036038101906103039190611e3f565b6113c6565b005b34801561031657600080fd5b50610331600480360381019061032c9190611eff565b6113d8565b005b34801561033f57600080fd5b5061035a60048036038101906103559190611cc9565b61143b565b005b34801561036857600080fd5b50610371611895565b60405161037e9190611d46565b60405180910390f35b34801561039357600080fd5b506103ae60048036038101906103a99190611ddc565b61189b565b005b3480156103bc57600080fd5b506103d760048036038101906103d29190611ddc565b61191f565b005b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b60008160028081111561049857610497611f3f565b5b8160028111156104ab576104aa611f3f565b5b146104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e290611fcb565b60405180910390fd5b629896808410610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052790612037565b60405180910390fd5b8484846040516020016105459392919061212f565b604051602081830303815290604052805190602001209150509392505050565b60045481565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee906121b8565b60405180910390fd5b8260028081111561060b5761060a611f3f565b5b81600281111561061e5761061d611f3f565b5b1461065e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065590611fcb565b60405180910390fd5b61066661196b565b6000610673878787610482565b9050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461071a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071190612224565b60405180910390fd5b6000670de0b6b3a7640000600354866107339190612273565b61073d91906122fc565b90506000670de0b6b3a7640000600454876107589190612273565b61076291906122fc565b9050808287610771919061232d565b61077b919061232d565b3410156107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b4906123cf565b60405180910390fd5b6040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152506005600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f8813bf2c16e5ca64abac3d50052f2afd42009222e1383bb6c02f44626b24043960056000858152602001908152602001600020604051610991919061258d565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040516109e1906125d9565b60006040518083038185875af1925050503d8060008114610a1e576040519150601f19603f3d011682016040523d82523d6000602084013e610a23565b606091505b5050905060008a73ffffffffffffffffffffffffffffffffffffffff1683604051610a4d906125d9565b60006040518083038185875af1925050503d8060008114610a8a576040519150601f19603f3d011682016040523d82523d6000602084013e610a8f565b606091505b50509050818015610a9d5750805b610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad39061263a565b60405180910390fd5b5050505050610ae96119bb565b505050505050565b60066020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b3f6119c4565b8060048190555050565b6000610b56848484610482565b9050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf5906126a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ca3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9a90612712565b60405180910390fd5b42600560008381526020019081526020016000206003015411610cfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf29061277e565b60405180910390fd5b6000600560008381526020019081526020016000206002015490506000670de0b6b3a764000060035483610d2f9190612273565b610d3991906122fc565b90506000670de0b6b3a764000060045484610d549190612273565b610d5e91906122fc565b9050808284610d6d919061232d565b610d77919061232d565b341015610db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db0906123cf565b60405180910390fd5b336005600086815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f987ccf2f7dac9340d88bf3963583113689bede57fb576dd64945a834d22218b360056000868152602001908152602001600020604051610e4f919061258d565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051610e9f906125d9565b60006040518083038185875af1925050503d8060008114610edc576040519150601f19603f3d011682016040523d82523d6000602084013e610ee1565b606091505b5050905060008873ffffffffffffffffffffffffffffffffffffffff1683604051610f0b906125d9565b60006040518083038185875af1925050503d8060008114610f48576040519150601f19603f3d011682016040523d82523d6000602084013e610f4d565b606091505b50509050818015610f5b5750805b610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f919061263a565b60405180910390fd5b505050505050505050565b610fad6119c4565b610fb76000611a42565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661106e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611065906121b8565b60405180910390fd5b600061107b858585610482565b9050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a906126a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c0906127ea565b60405180910390fd5b6005600082815260200190815260200160002060040160009054906101000a900460ff161561122d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122490612856565b60405180910390fd5b816005600083815260200190815260200160002060040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600083815260200190815260200160002060040160006101000a81548160ff0219169083151502179055507fa040cb2ae02f8481afd8b1fc99a4b3e821369ec0e897306ea64fca8b79713d5981836040516112e2929190612876565b60405180910390a160006002600560008481526020019081526020016000206002015461130f9190612273565b905060008373ffffffffffffffffffffffffffffffffffffffff1682604051611337906125d9565b60006040518083038185875af1925050503d8060008114611374576040519150601f19603f3d011682016040523d82523d6000602084013e611379565b606091505b50509050806113bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b4906128eb565b60405180910390fd5b50505050505050565b6113ce6119c4565b8060038190555050565b6113e06119c4565b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000611448848484610482565b9050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e7906126a6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158b9061297d565b60405180910390fd5b60056000828152602001908152602001600020600301544210156115ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e4906129e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611692576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168990612a55565b60405180910390fd5b60006005600083815260200190815260200160002060020154905060006005600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060056000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600090556004820160006101000a81549060ff02191690556004820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505060008173ffffffffffffffffffffffffffffffffffffffff16836040516117bd906125d9565b60006040518083038185875af1925050503d80600081146117fa576040519150601f19603f3d011682016040523d82523d6000602084013e6117ff565b606091505b5050905080611843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183a90612ac1565b60405180910390fd5b7f4fcaa0e17090ed261738d12776397ddc5587fe6f4509d935a4d74d6a56a51d7560056000868152602001908152602001600020604051611884919061258d565b60405180910390a150505050505050565b60035481565b6118a36119c4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190a90612b53565b60405180910390fd5b61191c81611a42565b50565b6119276119c4565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260015414156119b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a890612bbf565b60405180910390fd5b6002600181905550565b60018081905550565b6119cc611b06565b73ffffffffffffffffffffffffffffffffffffffff166119ea610fb9565b73ffffffffffffffffffffffffffffffffffffffff1614611a40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3790612c2b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b611b2681611b13565b8114611b3157600080fd5b50565b600081359050611b4381611b1d565b92915050565b600060208284031215611b5f57611b5e611b0e565b5b6000611b6d84828501611b34565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ba182611b76565b9050919050565b611bb181611b96565b82525050565b6000819050919050565b611bca81611bb7565b82525050565b60008115159050919050565b611be581611bd0565b82525050565b600060c082019050611c006000830189611ba8565b611c0d6020830188611ba8565b611c1a6040830187611bc1565b611c276060830186611bc1565b611c346080830185611bdc565b611c4160a0830184611ba8565b979650505050505050565b611c5581611b96565b8114611c6057600080fd5b50565b600081359050611c7281611c4c565b92915050565b611c8181611bb7565b8114611c8c57600080fd5b50565b600081359050611c9e81611c78565b92915050565b60038110611cb157600080fd5b50565b600081359050611cc381611ca4565b92915050565b600080600060608486031215611ce257611ce1611b0e565b5b6000611cf086828701611c63565b9350506020611d0186828701611c8f565b9250506040611d1286828701611cb4565b9150509250925092565b611d2581611b13565b82525050565b6000602082019050611d406000830184611d1c565b92915050565b6000602082019050611d5b6000830184611bc1565b92915050565b600080600080600060a08688031215611d7d57611d7c611b0e565b5b6000611d8b88828901611c63565b9550506020611d9c88828901611c8f565b9450506040611dad88828901611cb4565b9350506060611dbe88828901611c8f565b9250506080611dcf88828901611c8f565b9150509295509295909350565b600060208284031215611df257611df1611b0e565b5b6000611e0084828501611c63565b91505092915050565b6000602082019050611e1e6000830184611bdc565b92915050565b6000602082019050611e396000830184611ba8565b92915050565b600060208284031215611e5557611e54611b0e565b5b6000611e6384828501611c8f565b91505092915050565b60008060008060808587031215611e8657611e85611b0e565b5b6000611e9487828801611c63565b9450506020611ea587828801611c8f565b9350506040611eb687828801611cb4565b9250506060611ec787828801611c63565b91505092959194509250565b611edc81611bd0565b8114611ee757600080fd5b50565b600081359050611ef981611ed3565b92915050565b60008060408385031215611f1657611f15611b0e565b5b6000611f2485828601611c63565b9250506020611f3585828601611eea565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f496e76616c6964206576656e7420747970650000000000000000000000000000600082015250565b6000611fb5601283611f6e565b9150611fc082611f7f565b602082019050919050565b60006020820190508181036000830152611fe481611fa8565b9050919050565b7f4944206d757374206265206c657373207468616e203130206d696c6c696f6e00600082015250565b6000612021601f83611f6e565b915061202c82611feb565b602082019050919050565b6000602082019050818103600083015261205081612014565b9050919050565b60008160601b9050919050565b600061206f82612057565b9050919050565b600061208182612064565b9050919050565b61209961209482611b96565b612076565b82525050565b6000819050919050565b6120ba6120b582611bb7565b61209f565b82525050565b600381106120d1576120d0611f3f565b5b50565b60008190506120e2826120c0565b919050565b60006120f2826120d4565b9050919050565b60008160f81b9050919050565b6000612111826120f9565b9050919050565b612129612124826120e7565b612106565b82525050565b600061213b8286612088565b60148201915061214b82856120a9565b60208201915061215b8284612118565b600182019150819050949350505050565b7f43616c6c6572206973206e6f7420612076657269666965720000000000000000600082015250565b60006121a2601883611f6e565b91506121ad8261216c565b602082019050919050565b600060208201905081810360008301526121d181612195565b9050919050565b7f5369646562657420616c72656164792063726561746564000000000000000000600082015250565b600061220e601783611f6e565b9150612219826121d8565b602082019050919050565b6000602082019050818103600083015261223d81612201565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061227e82611bb7565b915061228983611bb7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156122c2576122c1612244565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061230782611bb7565b915061231283611bb7565b925082612322576123216122cd565b5b828204905092915050565b600061233882611bb7565b915061234383611bb7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561237857612377612244565b5b828201905092915050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b60006123b9601483611f6e565b91506123c482612383565b602082019050919050565b600060208201905081810360008301526123e8816123ac565b9050919050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061242f61242a836123ef565b6123fc565b9050919050565b61243f81611b96565b82525050565b6000819050919050565b600061246261245d836123ef565b612445565b9050919050565b61247281611bb7565b82525050565b600060ff82169050919050565b6000612498612493836123ef565b612478565b9050919050565b6124a881611bd0565b82525050565b60008160081c9050919050565b60006124ce6124c9836124ae565b6123fc565b9050919050565b60c0820160008083015490506124ea8161241c565b6124f76000860182612436565b50600183015490506125088161241c565b6125156020860182612436565b50600283015490506125268161244f565b6125336040860182612469565b50600383015490506125448161244f565b6125516060860182612469565b506004830154905061256281612485565b61256f608086018261249f565b50612579816124bb565b61258660a0860182612436565b5050505050565b600060c0820190506125a260008301846124d5565b92915050565b600081905092915050565b50565b60006125c36000836125a8565b91506125ce826125b3565b600082019050919050565b60006125e4826125b6565b9150819050919050565b7f556e61626c6520746f2073656e642066756e6473000000000000000000000000600082015250565b6000612624601483611f6e565b915061262f826125ee565b602082019050919050565b6000602082019050818103600083015261265381612617565b9050919050565b7f5369646562657420646f6573206e6f7420657869737400000000000000000000600082015250565b6000612690601683611f6e565b915061269b8261265a565b602082019050919050565b600060208201905081810360008301526126bf81612683565b9050919050565b7f5369646562657420616c72656164792074616b656e0000000000000000000000600082015250565b60006126fc601583611f6e565b9150612707826126c6565b602082019050919050565b6000602082019050818103600083015261272b816126ef565b9050919050565b7f5369646562657420657870697265640000000000000000000000000000000000600082015250565b6000612768600f83611f6e565b915061277382612732565b602082019050919050565b600060208201905081810360008301526127978161275b565b9050919050565b7f53696465626574206e6f74207965742061636365707465640000000000000000600082015250565b60006127d4601883611f6e565b91506127df8261279e565b602082019050919050565b60006020820190508181036000830152612803816127c7565b9050919050565b7f57696e6e657220616c7265616479207069636b65640000000000000000000000600082015250565b6000612840601583611f6e565b915061284b8261280a565b602082019050919050565b6000602082019050818103600083015261286f81612833565b9050919050565b600060408201905061288b6000830185611d1c565b6128986020830184611ba8565b9392505050565b7f4661696c656420746f207472616e736665722077696e6e696e67730000000000600082015250565b60006128d5601b83611f6e565b91506128e08261289f565b602082019050919050565b60006020820190508181036000830152612904816128c8565b9050919050565b7f4f6e6c7920696e69746961746f722063616e20636c6f7365207468652073696460008201527f6562657400000000000000000000000000000000000000000000000000000000602082015250565b6000612967602483611f6e565b91506129728261290b565b604082019050919050565b600060208201905081810360008301526129968161295a565b9050919050565b7f53696465626574206e6f74207965742065787069726564000000000000000000600082015250565b60006129d3601783611f6e565b91506129de8261299d565b602082019050919050565b60006020820190508181036000830152612a02816129c6565b9050919050565b7f5369646562657420616c72656164792061636365707465640000000000000000600082015250565b6000612a3f601883611f6e565b9150612a4a82612a09565b602082019050919050565b60006020820190508181036000830152612a6e81612a32565b9050919050565b7f526566756e64206661696c656400000000000000000000000000000000000000600082015250565b6000612aab600d83611f6e565b9150612ab682612a75565b602082019050919050565b60006020820190508181036000830152612ada81612a9e565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612b3d602683611f6e565b9150612b4882612ae1565b604082019050919050565b60006020820190508181036000830152612b6c81612b30565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612ba9601f83611f6e565b9150612bb482612b73565b602082019050919050565b60006020820190508181036000830152612bd881612b9c565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612c15602083611f6e565b9150612c2082612bdf565b602082019050919050565b60006020820190508181036000830152612c4481612c08565b905091905056fea2646970667358221220f21b03fdfe7c6993ab17e5b7ac0c6755af3b91c8da00194dca387b6b2997b5ae64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 79,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 190,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "protocolFeeDestination",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 192,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "protocolFeePercent",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 194,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "subjectFeePercent",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 233,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "sideBetStructs",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_struct(SideBet)207_storage)"
      },
      {
        "astId": 237,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "isVerifier",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(SideBet)207_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct UnlonelySideBetsV1.SideBet)",
        "numberOfBytes": "32",
        "value": "t_struct(SideBet)207_storage"
      },
      "t_struct(SideBet)207_storage": {
        "encoding": "inplace",
        "label": "struct UnlonelySideBetsV1.SideBet",
        "members": [
          {
            "astId": 196,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "initiator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 198,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "opponent",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 200,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "wagerAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 202,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "expirationTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 204,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "isWinnerPicked",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 206,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "winner",
            "offset": 1,
            "slot": "4",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}