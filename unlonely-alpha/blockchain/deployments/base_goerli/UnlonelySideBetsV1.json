{
  "address": "0xcB128AE802C8a7c05A6Cf45c929420A470172Bf4",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "opponent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "wagerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWinnerPicked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct UnlonelySideBetsV1.SideBet",
          "name": "sideBet",
          "type": "tuple"
        }
      ],
      "name": "SideBetAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "opponent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "wagerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWinnerPicked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct UnlonelySideBetsV1.SideBet",
          "name": "sideBet",
          "type": "tuple"
        }
      ],
      "name": "SideBetClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "initiator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "opponent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "wagerAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTime",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWinnerPicked",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct UnlonelySideBetsV1.SideBet",
          "name": "sideBet",
          "type": "tuple"
        }
      ],
      "name": "SideBetOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "eventByte",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "WinnerPicked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "acceptSideBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "closeSideBet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "generateKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "getExistingWager",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "getExistingWagerAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        }
      ],
      "name": "getOpeningWagerAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "isSideBetAvailable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVerifier",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationTime",
          "type": "uint256"
        }
      ],
      "name": "openSideBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySideBetsV1.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "winnerAddress",
          "type": "address"
        }
      ],
      "name": "pickWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeDestination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeDestination",
          "type": "address"
        }
      ],
      "name": "setFeeDestination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setSubjectFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "sideBets",
      "outputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "opponent",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "wagerAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expirationTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isWinnerPicked",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5f5b0e9b49d11f3a033551d904d44c1b8396954d9cc7d5b37aaf667d8b5cc08d",
  "receipt": {
    "to": null,
    "from": "0x34Bb9e91dC8AC1E13fb42A0e23f7236999e063D4",
    "contractAddress": "0xcB128AE802C8a7c05A6Cf45c929420A470172Bf4",
    "transactionIndex": 2,
    "gasUsed": "2920171",
    "logsBloom": "0x
    "blockHash": "0xe8607847a44f5207646cda836699cfb6c583fbef6d458da4d1a74daa8101cb5e",
    "transactionHash": "0x5f5b0e9b49d11f3a033551d904d44c1b8396954d9cc7d5b37aaf667d8b5cc08d",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 13432412,
        "transactionHash": "0x5f5b0e9b49d11f3a033551d904d44c1b8396954d9cc7d5b37aaf667d8b5cc08d",
        "address": "0xcB128AE802C8a7c05A6Cf45c929420A470172Bf4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000034bb9e91dc8ac1e13fb42a0e23f7236999e063d4"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0xe8607847a44f5207646cda836699cfb6c583fbef6d458da4d1a74daa8101cb5e"
      }
    ],
    "blockNumber": 13432412,
    "cumulativeGasUsed": "3557233",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "6a3eca9254588bb7da7bc586c7698d2d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWinnerPicked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct UnlonelySideBetsV1.SideBet\",\"name\":\"sideBet\",\"type\":\"tuple\"}],\"name\":\"SideBetAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWinnerPicked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct UnlonelySideBetsV1.SideBet\",\"name\":\"sideBet\",\"type\":\"tuple\"}],\"name\":\"SideBetClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWinnerPicked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct UnlonelySideBetsV1.SideBet\",\"name\":\"sideBet\",\"type\":\"tuple\"}],\"name\":\"SideBetOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"acceptSideBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"closeSideBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"generateKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"getExistingWager\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"getExistingWagerAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"}],\"name\":\"getOpeningWagerAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"isSideBetAvailable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVerifier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"}],\"name\":\"openSideBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySideBetsV1.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"}],\"name\":\"pickWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setSubjectFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"sideBets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"opponent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"wagerAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWinnerPicked\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UnlonelySideBetsV1.sol\":\"UnlonelySideBetsV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"contracts/UnlonelySideBetsV1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _transferOwnership(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if the sender is not the owner.\\r\\n     */\\r\\n    function _checkOwner() internal view virtual {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Internal function without access restriction.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract UnlonelySideBetsV1 is Ownable, ReentrancyGuard {\\r\\n    address public protocolFeeDestination;\\r\\n    uint256 public protocolFeePercent;\\r\\n    uint256 public subjectFeePercent;\\r\\n\\r\\n    struct SideBet {\\r\\n        address initiator;\\r\\n        // person who initiates or creates the bet\\r\\n        address opponent;\\r\\n        // person who accepts the bet\\r\\n        uint256 wagerAmount;\\r\\n        // amount ETH wagered by each party\\r\\n        uint256 expirationTime;\\r\\n        // timestamp that closes bet if no opponents take the bet\\r\\n        bool isWinnerPicked;\\r\\n        // self-explanatory\\r\\n        address winner;\\r\\n        // winning address\\r\\n    }\\r\\n\\r\\n    event SideBetOpened(SideBet sideBet);\\r\\n    event SideBetAccepted(SideBet sideBet);\\r\\n    event WinnerPicked(bytes32 eventByte, address winner);\\r\\n    event SideBetClosed(SideBet sideBet);\\r\\n\\r\\n    mapping(bytes32 => SideBet) public sideBets;\\r\\n\\r\\n    // user roles\\r\\n    mapping(address => bool) public isVerifier;\\r\\n\\r\\n    modifier onlyVerifier() {\\r\\n        require(isVerifier[msg.sender], \\\"Caller is not a verifier\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    enum EventType {\\r\\n        YayNayVote,\\r\\n        VipBadge,\\r\\n        SideBet\\r\\n    }\\r\\n\\r\\n    modifier validEventType(EventType eventType) {\\r\\n        require(\\r\\n            eventType == EventType.SideBet,\\r\\n            \\\"Invalid event type\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        // Set the contract deployer as the initial verifier\\r\\n        isVerifier[msg.sender] = true;\\r\\n\\r\\n        protocolFeePercent = 5 * 10**16; // 5%\\r\\n        subjectFeePercent = 5 * 10**16;  // 5%\\r\\n    }\\r\\n\\r\\n    function setFeeDestination(address _feeDestination) public onlyOwner {\\r\\n        protocolFeeDestination = _feeDestination;\\r\\n    }\\r\\n\\r\\n    function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        protocolFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        subjectFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setVerifier(address verifier, bool value) public onlyOwner {\\r\\n        isVerifier[verifier] = value;\\r\\n    }\\r\\n\\r\\n\\tfunction generateKey(address eventAddress, uint256 eventId, EventType eventType) public pure validEventType(eventType) returns (bytes32) {\\r\\n        require(eventId < 10000000, \\\"ID must be less than 10 million\\\");\\r\\n        return keccak256(abi.encodePacked(eventAddress, eventId, eventType));\\r\\n    }\\r\\n\\r\\n    function getOpeningWagerAfterFee(uint256 wagerAmount) public view returns (uint256) {\\r\\n        uint256 protocolFee = wagerAmount * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = wagerAmount * subjectFeePercent / 1 ether;\\r\\n        return wagerAmount + protocolFee + subjectFee;\\r\\n    }\\r\\n\\r\\n    function getExistingWager(address eventAddress, uint256 eventId, EventType eventType) public view returns (uint256) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        uint256 wagerAmount = sideBets[eventBytes].wagerAmount;\\r\\n        return wagerAmount;\\r\\n    }\\r\\n\\r\\n    function getExistingWagerAfterFee(address eventAddress, uint256 eventId, EventType eventType) public view returns (uint256) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        uint256 wagerAmount = sideBets[eventBytes].wagerAmount;\\r\\n        uint256 protocolFee = wagerAmount * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = wagerAmount * subjectFeePercent / 1 ether;\\r\\n        return wagerAmount + protocolFee + subjectFee;\\r\\n    }\\r\\n\\r\\n    function isSideBetAvailable(address eventAddress, uint256 eventId, EventType eventType) public view returns (bool) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        return sideBets[eventBytes].expirationTime > block.timestamp && sideBets[eventBytes].opponent == address(0);\\r\\n    }\\r\\n\\r\\n    function openSideBet(\\r\\n        address eventAddress, \\r\\n        uint256 eventId, \\r\\n        EventType eventType, \\r\\n        uint256 wagerAmount, \\r\\n        uint256 expirationTime\\r\\n    ) public payable onlyVerifier validEventType(eventType) nonReentrant {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(sideBets[eventBytes].initiator == address(0), \\\"Sidebet already created\\\");\\r\\n\\r\\n        uint256 protocolFee = wagerAmount * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = wagerAmount * subjectFeePercent / 1 ether;\\r\\n        require(msg.value >= wagerAmount + protocolFee + subjectFee, \\\"Insufficient payment\\\");\\r\\n\\r\\n        if(msg.value > (wagerAmount + protocolFee + subjectFee)) {\\r\\n            (bool success, ) =  msg.sender.call{value: msg.value - (wagerAmount + protocolFee + subjectFee)}(\\\"\\\");\\r\\n            require(success, \\\"Unable to send leftover funds\\\");\\r\\n        }\\r\\n\\r\\n        sideBets[eventBytes] = SideBet({\\r\\n            initiator: msg.sender,\\r\\n            opponent: address(0), // No opponent yet\\r\\n            wagerAmount: wagerAmount,\\r\\n            expirationTime: expirationTime,\\r\\n            isWinnerPicked: false,\\r\\n            winner: address(0) // No winner yet\\r\\n        });\\r\\n\\r\\n        emit SideBetOpened(sideBets[eventBytes]);\\r\\n\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function acceptSideBet(\\r\\n        address eventAddress, \\r\\n        uint256 eventId, \\r\\n        EventType eventType\\r\\n    ) public payable {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n\\r\\n        // Check if the sidebet exists and is open for an opponent\\r\\n        require(sideBets[eventBytes].initiator != address(0), \\\"Sidebet does not exist\\\");\\r\\n        require(sideBets[eventBytes].opponent == address(0), \\\"Sidebet already taken\\\");\\r\\n        require(sideBets[eventBytes].expirationTime > block.timestamp, \\\"Sidebet expired\\\");\\r\\n        \\r\\n        // Validate the wager amount\\r\\n        uint256 wagerAmount = sideBets[eventBytes].wagerAmount;\\r\\n        uint256 protocolFee = wagerAmount * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = wagerAmount * subjectFeePercent / 1 ether;\\r\\n        require(msg.value >= wagerAmount + protocolFee + subjectFee, \\\"Insufficient payment\\\");\\r\\n\\r\\n        if(msg.value > (wagerAmount + protocolFee + subjectFee)) {\\r\\n            (bool success, ) = msg.sender.call{value: msg.value - (wagerAmount + protocolFee + subjectFee)}(\\\"\\\");\\r\\n            require(success, \\\"Unable to send leftover funds\\\");\\r\\n        }\\r\\n\\r\\n        // Update the sidebet with the opponent details\\r\\n        sideBets[eventBytes].opponent = msg.sender;\\r\\n\\r\\n        emit SideBetAccepted(sideBets[eventBytes]);\\r\\n\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function pickWinner(\\r\\n        address eventAddress,\\r\\n        uint256 eventId,\\r\\n        EventType eventType,\\r\\n        address winnerAddress\\r\\n    ) public onlyVerifier {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n\\r\\n        // Ensure the sidebet exists and is valid\\r\\n        require(sideBets[eventBytes].initiator != address(0), \\\"Sidebet does not exist\\\");\\r\\n        require(sideBets[eventBytes].opponent != address(0), \\\"Sidebet not yet accepted\\\");\\r\\n        require(!sideBets[eventBytes].isWinnerPicked, \\\"Winner already picked\\\");\\r\\n\\r\\n        // Assign the winner\\r\\n        sideBets[eventBytes].winner = winnerAddress;\\r\\n        sideBets[eventBytes].isWinnerPicked = true;\\r\\n\\r\\n        emit WinnerPicked(eventBytes, winnerAddress);\\r\\n\\r\\n        // Handle payout\\r\\n        uint256 totalWager = sideBets[eventBytes].wagerAmount * 2; // Sum of both wagers\\r\\n        (bool success, ) = winnerAddress.call{value: totalWager}(\\\"\\\");\\r\\n        require(success, \\\"Failed to transfer winnings\\\");\\r\\n    }\\r\\n\\r\\n    function closeSideBet(\\r\\n        address eventAddress,\\r\\n        uint256 eventId,\\r\\n        EventType eventType\\r\\n    ) public {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n\\r\\n        // Check if the sidebet exists\\r\\n        require(sideBets[eventBytes].initiator != address(0), \\\"Sidebet does not exist\\\");\\r\\n        // Ensure that the msg.sender is the initiator of the sidebet\\r\\n        require(sideBets[eventBytes].initiator == msg.sender, \\\"Only initiator can close the sidebet\\\");\\r\\n        // Check if sidebet has expired and not yet accepted\\r\\n        require(block.timestamp >= sideBets[eventBytes].expirationTime, \\\"Sidebet not yet expired\\\");\\r\\n        require(sideBets[eventBytes].opponent == address(0), \\\"Sidebet already accepted\\\");\\r\\n\\r\\n        // Refund the wager to the initiator\\r\\n        uint256 wager = sideBets[eventBytes].wagerAmount;\\r\\n        address initiator = sideBets[eventBytes].initiator;\\r\\n\\r\\n        // Reset the sidebet to free up storage and refund gas\\r\\n        delete sideBets[eventBytes];\\r\\n\\r\\n        (bool success, ) = initiator.call{value: wager}(\\\"\\\");\\r\\n        require(success, \\\"Refund failed\\\");\\r\\n\\r\\n        emit SideBetClosed(sideBets[eventBytes]);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x154c641332a0541644b6976a3ca46227a962602e1ad9c8cf7bff124e53f5db44\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200003262000026620000b360201b60201c565b620000bb60201b60201c565b600180819055506001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555066b1a2bc2ec5000060038190555066b1a2bc2ec500006004819055506200017f565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6131f7806200018f6000396000f3fe60806040526004361061012a5760003560e01c80638da5cb5b116100ab578063cff059131161006f578063cff05913146103c0578063d07b7bb514610402578063d6e6eb9f1461043f578063ebe2fd681461046a578063f2fde38b146104a7578063fbe53234146104d05761012a565b80638da5cb5b146102f157806391b0e3051461031c578063a498342114610345578063ac9b56711461036e578063c9e18c5b146103975761012a565b806333105218116100f2578063331052181461022d5780634ce7957c1461026a5780635a8a764e146102955780636c4d3626146102be578063715018a6146102da5761012a565b80630d7345191461012f5780631e0420161461016c57806324dc441d146101a957806330d06aca146101d45780633122883f14610211575b600080fd5b34801561013b57600080fd5b50610156600480360381019061015191906120a2565b6104f9565b604051610163919061210e565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190612129565b6105dc565b6040516101a09190612165565b60405180910390f35b3480156101b557600080fd5b506101be610647565b6040516101cb9190612165565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f691906120a2565b61064d565b6040516102089190612165565b60405180910390f35b61022b60048036038101906102269190612180565b610684565b005b34801561023957600080fd5b50610254600480360381019061024f91906121fb565b610cf7565b6040516102619190612243565b60405180910390f35b34801561027657600080fd5b5061027f610d17565b60405161028c919061226d565b60405180910390f35b3480156102a157600080fd5b506102bc60048036038101906102b79190612129565b610d3d565b005b6102d860048036038101906102d391906120a2565b610d4f565b005b3480156102e657600080fd5b506102ef611298565b005b3480156102fd57600080fd5b506103066112ac565b604051610313919061226d565b60405180910390f35b34801561032857600080fd5b50610343600480360381019061033e9190612288565b6112d5565b005b34801561035157600080fd5b5061036c60048036038101906103679190612129565b6116b9565b005b34801561037a57600080fd5b506103956004803603810190610390919061231b565b6116cb565b005b3480156103a357600080fd5b506103be60048036038101906103b991906120a2565b61172e565b005b3480156103cc57600080fd5b506103e760048036038101906103e29190612387565b611b88565b6040516103f9969594939291906123b4565b60405180910390f35b34801561040e57600080fd5b50610429600480360381019061042491906120a2565b611c31565b6040516104369190612165565b60405180910390f35b34801561044b57600080fd5b50610454611cca565b6040516104619190612165565b60405180910390f35b34801561047657600080fd5b50610491600480360381019061048c91906120a2565b611cd0565b60405161049e9190612243565b60405180910390f35b3480156104b357600080fd5b506104ce60048036038101906104c991906121fb565b611d71565b005b3480156104dc57600080fd5b506104f760048036038101906104f291906121fb565b611df5565b005b60008160028081111561050f5761050e612415565b5b81600281111561052257610521612415565b5b14610562576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610559906124a1565b60405180910390fd5b6298968084106105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e9061250d565b60405180910390fd5b8484846040516020016105bc93929190612605565b604051602081830303815290604052805190602001209150509392505050565b600080670de0b6b3a7640000600354846105f69190612671565b61060091906126fa565b90506000670de0b6b3a76400006004548561061b9190612671565b61062591906126fa565b9050808285610634919061272b565b61063e919061272b565b92505050919050565b60045481565b60008061065b8585856104f9565b905060006005600083815260200190815260200160002060020154905080925050509392505050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610710576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610707906127cd565b60405180910390fd5b8260028081111561072457610723612415565b5b81600281111561073757610736612415565b5b14610777576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076e906124a1565b60405180910390fd5b61077f611e41565b600061078c8787876104f9565b9050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a90612839565b60405180910390fd5b6000670de0b6b3a76400006003548661084c9190612671565b61085691906126fa565b90506000670de0b6b3a7640000600454876108719190612671565b61087b91906126fa565b905080828761088a919061272b565b610894919061272b565b3410156108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd906128a5565b60405180910390fd5b8082876108e3919061272b565b6108ed919061272b565b3411156109c35760003373ffffffffffffffffffffffffffffffffffffffff1682848961091a919061272b565b610924919061272b565b3461092f91906128c5565b60405161093b9061292a565b60006040518083038185875af1925050503d8060008114610978576040519150601f19603f3d011682016040523d82523d6000602084013e61097d565b606091505b50509050806109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b89061298b565b60405180910390fd5b505b6040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001878152602001868152602001600015158152602001600073ffffffffffffffffffffffffffffffffffffffff168152506005600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f8813bf2c16e5ca64abac3d50052f2afd42009222e1383bb6c02f44626b24043960056000858152602001908152602001600020604051610b979190612b49565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683604051610be79061292a565b60006040518083038185875af1925050503d8060008114610c24576040519150601f19603f3d011682016040523d82523d6000602084013e610c29565b606091505b5050905060008a73ffffffffffffffffffffffffffffffffffffffff1683604051610c539061292a565b60006040518083038185875af1925050503d8060008114610c90576040519150601f19603f3d011682016040523d82523d6000602084013e610c95565b606091505b50509050818015610ca35750805b610ce2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd990612bb0565b60405180910390fd5b5050505050610cef611e91565b505050505050565b60066020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d45611e9a565b8060048190555050565b6000610d5c8484846104f9565b9050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfb90612c1c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ea9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea090612c88565b60405180910390fd5b42600560008381526020019081526020016000206003015411610f01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef890612cf4565b60405180910390fd5b6000600560008381526020019081526020016000206002015490506000670de0b6b3a764000060035483610f359190612671565b610f3f91906126fa565b90506000670de0b6b3a764000060045484610f5a9190612671565b610f6491906126fa565b9050808284610f73919061272b565b610f7d919061272b565b341015610fbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb6906128a5565b60405180910390fd5b808284610fcc919061272b565b610fd6919061272b565b3411156110ac5760003373ffffffffffffffffffffffffffffffffffffffff16828486611003919061272b565b61100d919061272b565b3461101891906128c5565b6040516110249061292a565b60006040518083038185875af1925050503d8060008114611061576040519150601f19603f3d011682016040523d82523d6000602084013e611066565b606091505b50509050806110aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a19061298b565b60405180910390fd5b505b336005600086815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f987ccf2f7dac9340d88bf3963583113689bede57fb576dd64945a834d22218b3600560008681526020019081526020016000206040516111429190612b49565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040516111929061292a565b60006040518083038185875af1925050503d80600081146111cf576040519150601f19603f3d011682016040523d82523d6000602084013e6111d4565b606091505b5050905060008873ffffffffffffffffffffffffffffffffffffffff16836040516111fe9061292a565b60006040518083038185875af1925050503d806000811461123b576040519150601f19603f3d011682016040523d82523d6000602084013e611240565b606091505b5050905081801561124e5750805b61128d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128490612bb0565b60405180910390fd5b505050505050505050565b6112a0611e9a565b6112aa6000611f18565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611358906127cd565b60405180910390fd5b600061136e8585856104f9565b9050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140d90612c1c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b390612d60565b60405180910390fd5b6005600082815260200190815260200160002060040160009054906101000a900460ff1615611520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151790612dcc565b60405180910390fd5b816005600083815260200190815260200160002060040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600083815260200190815260200160002060040160006101000a81548160ff0219169083151502179055507fa040cb2ae02f8481afd8b1fc99a4b3e821369ec0e897306ea64fca8b79713d5981836040516115d5929190612dec565b60405180910390a16000600260056000848152602001908152602001600020600201546116029190612671565b905060008373ffffffffffffffffffffffffffffffffffffffff168260405161162a9061292a565b60006040518083038185875af1925050503d8060008114611667576040519150601f19603f3d011682016040523d82523d6000602084013e61166c565b606091505b50509050806116b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a790612e61565b60405180910390fd5b50505050505050565b6116c1611e9a565b8060038190555050565b6116d3611e9a565b80600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600061173b8484846104f9565b9050600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117da90612c1c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187e90612ef3565b60405180910390fd5b60056000828152602001908152602001600020600301544210156118e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d790612f5f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197c90612fcb565b60405180910390fd5b60006005600083815260200190815260200160002060020154905060006005600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060056000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600090556004820160006101000a81549060ff02191690556004820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505060008173ffffffffffffffffffffffffffffffffffffffff1683604051611ab09061292a565b60006040518083038185875af1925050503d8060008114611aed576040519150601f19603f3d011682016040523d82523d6000602084013e611af2565b606091505b5050905080611b36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2d90613037565b60405180910390fd5b7f4fcaa0e17090ed261738d12776397ddc5587fe6f4509d935a4d74d6a56a51d7560056000868152602001908152602001600020604051611b779190612b49565b60405180910390a150505050505050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905086565b600080611c3f8585856104f9565b90506000600560008381526020019081526020016000206002015490506000670de0b6b3a764000060035483611c759190612671565b611c7f91906126fa565b90506000670de0b6b3a764000060045484611c9a9190612671565b611ca491906126fa565b9050808284611cb3919061272b565b611cbd919061272b565b9450505050509392505050565b60035481565b600080611cde8585856104f9565b9050426005600083815260200190815260200160002060030154118015611d675750600073ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b9150509392505050565b611d79611e9a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de0906130c9565b60405180910390fd5b611df281611f18565b50565b611dfd611e9a565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026001541415611e87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7e90613135565b60405180910390fd5b6002600181905550565b60018081905550565b611ea2611fdc565b73ffffffffffffffffffffffffffffffffffffffff16611ec06112ac565b73ffffffffffffffffffffffffffffffffffffffff1614611f16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f0d906131a1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061201482611fe9565b9050919050565b61202481612009565b811461202f57600080fd5b50565b6000813590506120418161201b565b92915050565b6000819050919050565b61205a81612047565b811461206557600080fd5b50565b60008135905061207781612051565b92915050565b6003811061208a57600080fd5b50565b60008135905061209c8161207d565b92915050565b6000806000606084860312156120bb576120ba611fe4565b5b60006120c986828701612032565b93505060206120da86828701612068565b92505060406120eb8682870161208d565b9150509250925092565b6000819050919050565b612108816120f5565b82525050565b600060208201905061212360008301846120ff565b92915050565b60006020828403121561213f5761213e611fe4565b5b600061214d84828501612068565b91505092915050565b61215f81612047565b82525050565b600060208201905061217a6000830184612156565b92915050565b600080600080600060a0868803121561219c5761219b611fe4565b5b60006121aa88828901612032565b95505060206121bb88828901612068565b94505060406121cc8882890161208d565b93505060606121dd88828901612068565b92505060806121ee88828901612068565b9150509295509295909350565b60006020828403121561221157612210611fe4565b5b600061221f84828501612032565b91505092915050565b60008115159050919050565b61223d81612228565b82525050565b60006020820190506122586000830184612234565b92915050565b61226781612009565b82525050565b6000602082019050612282600083018461225e565b92915050565b600080600080608085870312156122a2576122a1611fe4565b5b60006122b087828801612032565b94505060206122c187828801612068565b93505060406122d28782880161208d565b92505060606122e387828801612032565b91505092959194509250565b6122f881612228565b811461230357600080fd5b50565b600081359050612315816122ef565b92915050565b6000806040838503121561233257612331611fe4565b5b600061234085828601612032565b925050602061235185828601612306565b9150509250929050565b612364816120f5565b811461236f57600080fd5b50565b6000813590506123818161235b565b92915050565b60006020828403121561239d5761239c611fe4565b5b60006123ab84828501612372565b91505092915050565b600060c0820190506123c9600083018961225e565b6123d6602083018861225e565b6123e36040830187612156565b6123f06060830186612156565b6123fd6080830185612234565b61240a60a083018461225e565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f496e76616c6964206576656e7420747970650000000000000000000000000000600082015250565b600061248b601283612444565b915061249682612455565b602082019050919050565b600060208201905081810360008301526124ba8161247e565b9050919050565b7f4944206d757374206265206c657373207468616e203130206d696c6c696f6e00600082015250565b60006124f7601f83612444565b9150612502826124c1565b602082019050919050565b60006020820190508181036000830152612526816124ea565b9050919050565b60008160601b9050919050565b60006125458261252d565b9050919050565b60006125578261253a565b9050919050565b61256f61256a82612009565b61254c565b82525050565b6000819050919050565b61259061258b82612047565b612575565b82525050565b600381106125a7576125a6612415565b5b50565b60008190506125b882612596565b919050565b60006125c8826125aa565b9050919050565b60008160f81b9050919050565b60006125e7826125cf565b9050919050565b6125ff6125fa826125bd565b6125dc565b82525050565b6000612611828661255e565b601482019150612621828561257f565b60208201915061263182846125ee565b600182019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061267c82612047565b915061268783612047565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156126c0576126bf612642565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061270582612047565b915061271083612047565b9250826127205761271f6126cb565b5b828204905092915050565b600061273682612047565b915061274183612047565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561277657612775612642565b5b828201905092915050565b7f43616c6c6572206973206e6f7420612076657269666965720000000000000000600082015250565b60006127b7601883612444565b91506127c282612781565b602082019050919050565b600060208201905081810360008301526127e6816127aa565b9050919050565b7f5369646562657420616c72656164792063726561746564000000000000000000600082015250565b6000612823601783612444565b915061282e826127ed565b602082019050919050565b6000602082019050818103600083015261285281612816565b9050919050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b600061288f601483612444565b915061289a82612859565b602082019050919050565b600060208201905081810360008301526128be81612882565b9050919050565b60006128d082612047565b91506128db83612047565b9250828210156128ee576128ed612642565b5b828203905092915050565b600081905092915050565b50565b60006129146000836128f9565b915061291f82612904565b600082019050919050565b600061293582612907565b9150819050919050565b7f556e61626c6520746f2073656e64206c6566746f7665722066756e6473000000600082015250565b6000612975601d83612444565b91506129808261293f565b602082019050919050565b600060208201905081810360008301526129a481612968565b9050919050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129eb6129e6836129ab565b6129b8565b9050919050565b6129fb81612009565b82525050565b6000819050919050565b6000612a1e612a19836129ab565b612a01565b9050919050565b612a2e81612047565b82525050565b600060ff82169050919050565b6000612a54612a4f836129ab565b612a34565b9050919050565b612a6481612228565b82525050565b60008160081c9050919050565b6000612a8a612a8583612a6a565b6129b8565b9050919050565b60c082016000808301549050612aa6816129d8565b612ab360008601826129f2565b5060018301549050612ac4816129d8565b612ad160208601826129f2565b5060028301549050612ae281612a0b565b612aef6040860182612a25565b5060038301549050612b0081612a0b565b612b0d6060860182612a25565b5060048301549050612b1e81612a41565b612b2b6080860182612a5b565b50612b3581612a77565b612b4260a08601826129f2565b5050505050565b600060c082019050612b5e6000830184612a91565b92915050565b7f556e61626c6520746f2073656e642066756e6473000000000000000000000000600082015250565b6000612b9a601483612444565b9150612ba582612b64565b602082019050919050565b60006020820190508181036000830152612bc981612b8d565b9050919050565b7f5369646562657420646f6573206e6f7420657869737400000000000000000000600082015250565b6000612c06601683612444565b9150612c1182612bd0565b602082019050919050565b60006020820190508181036000830152612c3581612bf9565b9050919050565b7f5369646562657420616c72656164792074616b656e0000000000000000000000600082015250565b6000612c72601583612444565b9150612c7d82612c3c565b602082019050919050565b60006020820190508181036000830152612ca181612c65565b9050919050565b7f5369646562657420657870697265640000000000000000000000000000000000600082015250565b6000612cde600f83612444565b9150612ce982612ca8565b602082019050919050565b60006020820190508181036000830152612d0d81612cd1565b9050919050565b7f53696465626574206e6f74207965742061636365707465640000000000000000600082015250565b6000612d4a601883612444565b9150612d5582612d14565b602082019050919050565b60006020820190508181036000830152612d7981612d3d565b9050919050565b7f57696e6e657220616c7265616479207069636b65640000000000000000000000600082015250565b6000612db6601583612444565b9150612dc182612d80565b602082019050919050565b60006020820190508181036000830152612de581612da9565b9050919050565b6000604082019050612e0160008301856120ff565b612e0e602083018461225e565b9392505050565b7f4661696c656420746f207472616e736665722077696e6e696e67730000000000600082015250565b6000612e4b601b83612444565b9150612e5682612e15565b602082019050919050565b60006020820190508181036000830152612e7a81612e3e565b9050919050565b7f4f6e6c7920696e69746961746f722063616e20636c6f7365207468652073696460008201527f6562657400000000000000000000000000000000000000000000000000000000602082015250565b6000612edd602483612444565b9150612ee882612e81565b604082019050919050565b60006020820190508181036000830152612f0c81612ed0565b9050919050565b7f53696465626574206e6f74207965742065787069726564000000000000000000600082015250565b6000612f49601783612444565b9150612f5482612f13565b602082019050919050565b60006020820190508181036000830152612f7881612f3c565b9050919050565b7f5369646562657420616c72656164792061636365707465640000000000000000600082015250565b6000612fb5601883612444565b9150612fc082612f7f565b602082019050919050565b60006020820190508181036000830152612fe481612fa8565b9050919050565b7f526566756e64206661696c656400000000000000000000000000000000000000600082015250565b6000613021600d83612444565b915061302c82612feb565b602082019050919050565b6000602082019050818103600083015261305081613014565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006130b3602683612444565b91506130be82613057565b604082019050919050565b600060208201905081810360008301526130e2816130a6565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061311f601f83612444565b915061312a826130e9565b602082019050919050565b6000602082019050818103600083015261314e81613112565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061318b602083612444565b915061319682613155565b602082019050919050565b600060208201905081810360008301526131ba8161317e565b905091905056fea2646970667358221220ec583fd72d53910bde81cb9789f438302718ed73e113a00166eadd87b66abf6b64736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 79,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 190,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "protocolFeeDestination",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 192,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "protocolFeePercent",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 194,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "subjectFeePercent",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 233,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "sideBets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_struct(SideBet)207_storage)"
      },
      {
        "astId": 237,
        "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
        "label": "isVerifier",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(SideBet)207_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct UnlonelySideBetsV1.SideBet)",
        "numberOfBytes": "32",
        "value": "t_struct(SideBet)207_storage"
      },
      "t_struct(SideBet)207_storage": {
        "encoding": "inplace",
        "label": "struct UnlonelySideBetsV1.SideBet",
        "members": [
          {
            "astId": 196,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "initiator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 198,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "opponent",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 200,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "wagerAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 202,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "expirationTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 204,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "isWinnerPicked",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 206,
            "contract": "contracts/UnlonelySideBetsV1.sol:UnlonelySideBetsV1",
            "label": "winner",
            "offset": 1,
            "slot": "4",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}