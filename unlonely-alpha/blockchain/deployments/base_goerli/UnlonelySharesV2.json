{
  "address": "0x0E32d6BA3E1E1FFdce3f4F9E85fCC552C969F5D4",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "eventByte",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTimestamp",
          "type": "uint256"
        }
      ],
      "name": "EventOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "eventByte",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "EventVerified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Payout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "eventByte",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "isBuy",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isYay",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "shareAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "ethAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "protocolEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "subjectEthAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct UnlonelySharesV2.TradeInfo",
          "name": "trade",
          "type": "tuple"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyVotes",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "claimVotePayout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "closeEventIfNoWinners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventEndTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventResult",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "eventVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        }
      ],
      "name": "generateKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "getHolderBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getVotePayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isVerifier",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nayVotesBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "nayVotesSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_eventEndTimestamp",
          "type": "uint256"
        }
      ],
      "name": "openEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceSlope",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeDestination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "isYay",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sellVotes",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeDestination",
          "type": "address"
        }
      ],
      "name": "setFeeDestination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setPriceSlope",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setSubjectFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifier",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "enum UnlonelySharesV2.EventType",
          "name": "eventType",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "verifyEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "votingPooledEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "yayVotesBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "yayVotesSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0b2785e9cf0dbdc7b748ce812e043cd113c541fc9a5702b86391e71c58512fde",
  "receipt": {
    "to": null,
    "from": "0x34Bb9e91dC8AC1E13fb42A0e23f7236999e063D4",
    "contractAddress": "0x0E32d6BA3E1E1FFdce3f4F9E85fCC552C969F5D4",
    "transactionIndex": 4,
    "gasUsed": "4036473",
    "logsBloom": "0x
    "blockHash": "0x0d393d3276f9fa4b2b2b8c16b37b9438e40390ced0e35d3025caf6343481d6f0",
    "transactionHash": "0x0b2785e9cf0dbdc7b748ce812e043cd113c541fc9a5702b86391e71c58512fde",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 12397260,
        "transactionHash": "0x0b2785e9cf0dbdc7b748ce812e043cd113c541fc9a5702b86391e71c58512fde",
        "address": "0x0E32d6BA3E1E1FFdce3f4F9E85fCC552C969F5D4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000034bb9e91dc8ac1e13fb42a0e23f7236999e063d4"
        ],
        "data": "0x",
        "logIndex": 13,
        "blockHash": "0x0d393d3276f9fa4b2b2b8c16b37b9438e40390ced0e35d3025caf6343481d6f0"
      }
    ],
    "blockNumber": 12397260,
    "cumulativeGasUsed": "5472714",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "77e2d56fc4612e967ca7196c3de9aefe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"}],\"name\":\"EventOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"EventVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Payout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"eventByte\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"protocolEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"subjectEthAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct UnlonelySharesV2.TradeInfo\",\"name\":\"trade\",\"type\":\"tuple\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyVotes\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"claimVotePayout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"closeEventIfNoWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventEndTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventResult\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"eventVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"}],\"name\":\"generateKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"getHolderBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getVotePayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVerifier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nayVotesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"nayVotesSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_eventEndTimestamp\",\"type\":\"uint256\"}],\"name\":\"openEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceSlope\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isYay\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellVotes\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setPriceSlope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setSubjectFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"enum UnlonelySharesV2.EventType\",\"name\":\"eventType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"verifyEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votingPooledEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"yayVotesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"yayVotesSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/UnlonelySharesV2.sol\":\"UnlonelySharesV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\"},\"contracts/UnlonelySharesV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _transferOwnership(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if the sender is not the owner.\\r\\n     */\\r\\n    function _checkOwner() internal view virtual {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Internal function without access restriction.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract UnlonelySharesV2 is Ownable, ReentrancyGuard {\\r\\n    // bytes32 is a unique identifier for each event that takes in:\\r\\n    // eventAddress: this is the address of the event owner, so channel owner (previously was sharesSubject)\\r\\n    // eventId: this is numerical and unique ID on our backend to differentiate between events for one channel\\r\\n    // eventType: this is the type of event, which can be YayVote, NayVote, or VIPBadge\\r\\n    // and combines all three into one bytes32 key\\r\\n\\r\\n    enum EventType {\\r\\n        YayNayVote,\\r\\n        VIPBadge\\r\\n    }\\r\\n\\r\\n    address public protocolFeeDestination;\\r\\n    uint256 public protocolFeePercent;\\r\\n    uint256 public subjectFeePercent;\\r\\n    uint256 public priceSlope;\\r\\n\\r\\n    struct TradeInfo {\\r\\n        address trader;\\r\\n        bytes32 eventByte;\\r\\n        bool isBuy;\\r\\n        bool isYay;\\r\\n        uint256 shareAmount;\\r\\n        uint256 ethAmount;\\r\\n        uint256 protocolEthAmount;\\r\\n        uint256 subjectEthAmount;\\r\\n        uint256 supply;\\r\\n    }\\r\\n\\r\\n    // ~~~~~~~~~~~~~~~~~~~TODO: edit events to include all types of trades~~~~~~~~~~~~~~~~~~\\r\\n    event Trade(TradeInfo trade);\\r\\n    event EventOpened(bytes32 eventByte, uint256 endTimestamp);\\r\\n    event EventVerified(bytes32 eventByte, bool result);\\r\\n    event Payout(address indexed voter, uint256 amount);\\r\\n\\r\\n    // this is a mapping between events and their holders which each own an amount of yay/nay votes\\r\\n    mapping(bytes32 => mapping(address => uint256)) public yayVotesBalance;\\r\\n    mapping(bytes32 => mapping(address => uint256)) public nayVotesBalance;\\r\\n\\r\\n    mapping(bytes32 => uint256) public yayVotesSupply;\\r\\n    mapping(bytes32 => uint256) public nayVotesSupply;\\r\\n\\r\\n    mapping(bytes32 => bool) public eventVerified;\\r\\n    mapping(bytes32 => bool) public eventResult;\\r\\n    mapping(bytes32 => uint256) public eventEndTimestamp;\\r\\n\\r\\n    // this is a mapping between sharesSubject and total amount of ETH in the pool\\r\\n    mapping(bytes32 => uint256) public votingPooledEth;\\r\\n\\r\\n    // user roles\\r\\n    mapping(address => bool) public isVerifier;\\r\\n\\r\\n    modifier onlyVerifier() {\\r\\n        require(isVerifier[msg.sender], \\\"Caller is not a verifier\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier validEventType(EventType eventType) {\\r\\n        require(\\r\\n            eventType == EventType.YayNayVote,\\r\\n            \\\"Invalid event type\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor() {\\r\\n        // Set the contract deployer as the initial verifier\\r\\n        isVerifier[msg.sender] = true;\\r\\n\\r\\n        protocolFeePercent = 5 * 10**16; // 5%\\r\\n        subjectFeePercent = 5 * 10**16;  // 5%\\r\\n        priceSlope = 5 * 10**14; // 0.0005\\r\\n    }\\r\\n\\r\\n    function setFeeDestination(address _feeDestination) public onlyOwner {\\r\\n        protocolFeeDestination = _feeDestination;\\r\\n    }\\r\\n\\r\\n    function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        protocolFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {\\r\\n        subjectFeePercent = _feePercent;\\r\\n    }\\r\\n\\r\\n    function setVerifier(address verifier, bool value) public onlyOwner {\\r\\n        isVerifier[verifier] = value;\\r\\n    }\\r\\n\\r\\n    function setPriceSlope(uint256 value) public onlyOwner {\\r\\n        priceSlope = value;\\r\\n    }\\r\\n\\r\\n\\tfunction generateKey(address eventAddress, uint256 eventId, EventType eventType) public pure validEventType(eventType) returns (bytes32) {\\r\\n        require(eventId < 1000000, \\\"ID must be less than 1 million\\\");\\r\\n        return keccak256(abi.encodePacked(eventAddress, eventId, eventType));\\r\\n    }\\r\\n\\r\\n    function openEvent(address eventAddress, uint256 eventId, EventType eventType, uint256 _eventEndTimestamp) public onlyVerifier validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        require(eventEndTimestamp[eventBytes] == 0, \\\"Event already opened\\\");\\r\\n        require(_eventEndTimestamp > block.timestamp, \\\"Event end timestamp must be in the future\\\");\\r\\n        eventEndTimestamp[eventBytes] = _eventEndTimestamp;\\r\\n\\r\\n        emit EventOpened(eventBytes, _eventEndTimestamp);\\r\\n    }\\r\\n\\r\\n    function verifyEvent(address eventAddress, uint256 eventId, EventType eventType, bool result) public onlyVerifier validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        eventVerified[eventBytes] = true;\\r\\n        eventResult[eventBytes] = result;\\r\\n\\r\\n        emit EventVerified(eventBytes, result);\\r\\n    }\\r\\n\\r\\n    function getHolderBalance(address eventAddress, uint256 eventId, EventType eventType, bool isYay, address holder) public view validEventType(eventType) returns (uint256 balance) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        return isYay ? yayVotesBalance[eventBytes][holder] : nayVotesBalance[eventBytes][holder];\\r\\n    }\\r\\n\\r\\n    function getPrice(uint256 supply, uint256 amount) public view returns (uint256) {\\r\\n        uint256 price = (supply + amount) * priceSlope;\\r\\n\\r\\n        return price;\\r\\n    }\\r\\n\\r\\n    function getBuyPrice(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256 price) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        return getPrice(supply, amount);\\r\\n    }\\r\\n\\r\\n    function getSellPrice(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256 price) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        if (supply < amount) return 0;\\r\\n        return getPrice(supply - amount, amount);\\r\\n    }\\r\\n\\r\\n    function getBuyPriceAfterFee(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256) {\\r\\n        uint256 price = getBuyPrice(eventAddress, eventId, eventType, isYay, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        return price + protocolFee + subjectFee;\\r\\n    }\\r\\n\\r\\n    function getSellPriceAfterFee(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public view validEventType(eventType) returns (uint256) {\\r\\n        uint256 price = getSellPrice(eventAddress, eventId, eventType, isYay, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        return price - protocolFee - subjectFee;\\r\\n    }\\r\\n\\r\\n    // def: buyShares takes in streamer address (ex: 0xTed), amount of shares purchased, and if its yay or nay\\r\\n    function buyVotes(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public payable validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(eventEndTimestamp[eventBytes] > 0 && eventEndTimestamp[eventBytes] > block.timestamp, \\\"Event is not ongoing\\\");\\r\\n        require(protocolFeeDestination != address(0), \\\"protocolFeeDestination is the zero address\\\");\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        require(amount > 0, \\\"Cannot buy zero shares\\\");\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        uint256 price = getPrice(supply, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        require(msg.value >= price + protocolFee + subjectFee, \\\"Insufficient payment\\\");\\r\\n\\r\\n        // Add the sent ETH (minus fees) to the sharesSubject's pool\\r\\n        votingPooledEth[eventBytes] += (msg.value - protocolFee - subjectFee);\\r\\n\\r\\n        if (isYay) {\\r\\n            yayVotesBalance[eventBytes][msg.sender] += amount;\\r\\n            yayVotesSupply[eventBytes] += amount;\\r\\n        } else {\\r\\n            nayVotesBalance[eventBytes][msg.sender] += amount;\\r\\n            nayVotesSupply[eventBytes] += amount;\\r\\n        }\\r\\n\\r\\n        TradeInfo memory tradeInfo = TradeInfo({\\r\\n            trader: msg.sender,\\r\\n            eventByte: eventBytes,\\r\\n            isBuy: true,\\r\\n            isYay: isYay,\\r\\n            shareAmount: amount,\\r\\n            ethAmount: price,\\r\\n            protocolEthAmount: protocolFee,\\r\\n            subjectEthAmount: subjectFee,\\r\\n            supply: supply + amount\\r\\n        });\\r\\n\\r\\n        emit Trade(tradeInfo);\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function sellVotes(address eventAddress, uint256 eventId, EventType eventType, bool isYay, uint256 amount) public payable validEventType(eventType) nonReentrant {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(eventEndTimestamp[eventBytes] > 0 && eventEndTimestamp[eventBytes] > block.timestamp, \\\"Event is not ongoing\\\");\\r\\n        require(protocolFeeDestination != address(0), \\\"protocolFeeDestination is the zero address\\\");\\r\\n        require(!eventVerified[eventBytes], \\\"Event already verified\\\");\\r\\n        require(amount > 0, \\\"Cannot sell zero shares\\\");\\r\\n        uint256 supply = isYay ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        require(supply >= amount, \\\"Cannot sell more shares than the current supply\\\");\\r\\n\\r\\n        uint256 userVotes = isYay ? yayVotesBalance[eventBytes][msg.sender] : nayVotesBalance[eventBytes][msg.sender];\\r\\n        require(userVotes >= amount, \\\"You don't have enough shares to sell\\\");\\r\\n        uint256 price = getPrice(supply - amount, amount);\\r\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\r\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\r\\n        // Deduct the sold shares from the user's balance and reduce the total supply\\r\\n        if (isYay) {\\r\\n            yayVotesBalance[eventBytes][msg.sender] -= amount;\\r\\n            yayVotesSupply[eventBytes] -= amount;\\r\\n        } else {\\r\\n            nayVotesBalance[eventBytes][msg.sender] -= amount;\\r\\n            nayVotesSupply[eventBytes] -= amount;\\r\\n        }\\r\\n\\r\\n        // Deduct the corresponding ETH from the sharesSubject's pool\\r\\n        votingPooledEth[eventBytes] -= price;\\r\\n\\r\\n        uint256 newSupply = supply - amount;\\r\\n\\r\\n        TradeInfo memory tradeInfo = TradeInfo({\\r\\n            trader: msg.sender,\\r\\n            eventByte: eventBytes,\\r\\n            isBuy: false,\\r\\n            isYay: isYay,\\r\\n            shareAmount: amount,\\r\\n            ethAmount: price,\\r\\n            protocolEthAmount: protocolFee,\\r\\n            subjectEthAmount: subjectFee,\\r\\n            supply: newSupply\\r\\n        });\\r\\n\\r\\n        emit Trade(tradeInfo);\\r\\n\\r\\n        // Transfer the net amount to the seller, and fees to the protocol and subject\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: subjectFee}(\\\"\\\");\\r\\n        (bool success3, ) = msg.sender.call{value: price - protocolFee - subjectFee}(\\\"\\\");\\r\\n        require(success1 && success2 && success3, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n\\r\\n    function claimVotePayout(address eventAddress, uint256 eventId, EventType eventType) public validEventType(eventType) nonReentrant {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(eventVerified[eventBytes], \\\"Event not yet verified\\\");\\r\\n\\r\\n        bool result = eventResult[eventBytes];\\r\\n        uint256 userShares = result ? yayVotesBalance[eventBytes][msg.sender] : nayVotesBalance[eventBytes][msg.sender];\\r\\n\\r\\n        require(userShares > 0, \\\"No shares to claim for\\\");\\r\\n\\r\\n        uint256 totalPool = votingPooledEth[eventBytes];\\r\\n        uint256 totalWinningShares = result ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        uint256 userPayout = totalWinningShares == 0 ? 0 : (totalPool * userShares / totalWinningShares);\\r\\n\\r\\n        require(userPayout > 0, \\\"No payout for user\\\");\\r\\n\\r\\n\\r\\n        // Reset user's shares after distributing\\r\\n        if (result) {\\r\\n            yayVotesBalance[eventBytes][msg.sender] = 0;\\r\\n            yayVotesSupply[eventBytes] -= userShares;\\r\\n        } else {\\r\\n            nayVotesBalance[eventBytes][msg.sender] = 0;\\r\\n            nayVotesSupply[eventBytes] -= userShares;\\r\\n        }\\r\\n\\r\\n        // Deduct the user's payout from the sharesSubject's pool\\r\\n        votingPooledEth[eventBytes] -= userPayout;\\r\\n\\r\\n        emit Payout(msg.sender, userPayout);\\r\\n        (bool success, ) = msg.sender.call{value: userPayout}(\\\"\\\");\\r\\n        require(success, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n\\r\\n    function getVotePayout(address eventAddress, uint256 eventId, EventType eventType, address userAddress) public view validEventType(eventType) returns (uint256) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        if (!eventVerified[eventBytes]) return 0;\\r\\n        bool result = eventResult[eventBytes];\\r\\n        uint256 userVotes = result ? yayVotesBalance[eventBytes][userAddress] : nayVotesBalance[eventBytes][userAddress];\\r\\n        uint256 totalPool = votingPooledEth[eventBytes];\\r\\n        uint256 totalWinningShares = result ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        uint256 userPayout = totalWinningShares == 0 ? 0 : (totalPool * userVotes / totalWinningShares);\\r\\n        return userPayout;\\r\\n    }\\r\\n\\r\\n    /*\\r\\n        this is for the unlikely edge-case that there are no winners \\r\\n        if yay wins but everyone is holding nay shares and no one is holding yay shares, \\r\\n        split the pool w creator and protocol\\r\\n    */\\r\\n    function closeEventIfNoWinners(address eventAddress, uint256 eventId, EventType eventType) public onlyVerifier validEventType(eventType) {\\r\\n        bytes32 eventBytes = generateKey(eventAddress, eventId, eventType);\\r\\n        require(protocolFeeDestination != address(0), \\\"protocolFeeDestination is the zero address\\\");\\r\\n        require(eventVerified[eventBytes], \\\"Event is not verified\\\");\\r\\n        require(votingPooledEth[eventBytes] > 0, \\\"Pool is already empty\\\");\\r\\n        uint256 sharesSupply = eventResult[eventBytes] ? yayVotesSupply[eventBytes] : nayVotesSupply[eventBytes];\\r\\n        require(sharesSupply == 0, \\\"There are still shares\\\");\\r\\n        uint256 splitPoolValue = votingPooledEth[eventBytes] / 2;\\r\\n        votingPooledEth[eventBytes] = 0;\\r\\n        (bool success1, ) = protocolFeeDestination.call{value: splitPoolValue}(\\\"\\\");\\r\\n        (bool success2, ) = eventAddress.call{value: splitPoolValue}(\\\"\\\");\\r\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf1b4ffc05cd58eb1d1847cc3e1139c600cf8333b64bf0b1bdebda7be1e9ed078\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200003262000026620000c160201b60201c565b620000c960201b60201c565b600180819055506001600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555066b1a2bc2ec5000060038190555066b1a2bc2ec500006004819055506601c6bf526340006005819055506200018d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6145e5806200019d6000396000f3fe6080604052600436106102045760003560e01c80638678810311610118578063ac9b5671116100a0578063dcd11d261161006f578063dcd11d26146107f5578063ddfb87a01461081e578063f2fde38b1461085b578063f60751b814610884578063fbe53234146108ad57610204565b8063ac9b567114610727578063bc6eaf7014610750578063c9c89f7f1461078d578063d6e6eb9f146107ca57610204565b80639b2bd771116100e75780639b2bd7711461062b578063a28bde4914610668578063a4983421146106a5578063a7151325146106ce578063a8393ec8146106ea57610204565b8063867881031461056a5780638c0a6d3e146105a75780638c169611146105e45780638da5cb5b1461060057610204565b80633a8641ea1161019b5780635a8a764e1161016a5780635a8a764e146104735780635cf4ee911461049c57806367031435146104d957806367a5f8d614610516578063715018a61461055357610204565b80633a8641ea146103cb57806345ef0d2b146103f45780634ce7957c1461041d57806354e42f7e1461044857610204565b80631287e761116101d75780631287e761146102e957806313b5408b1461032657806324dc441d14610363578063331052181461038e57610204565b80630105faff146102095780630905c17b146102465780630d734519146102835780630fcf5500146102c0575b600080fd5b34801561021557600080fd5b50610230600480360381019061022b9190613170565b6108d6565b60405161023d91906131b6565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190613170565b6108ee565b60405161027a91906131b6565b60405180910390f35b34801561028f57600080fd5b506102aa60048036038101906102a59190613280565b610906565b6040516102b791906132e2565b60405180910390f35b3480156102cc57600080fd5b506102e760048036038101906102e29190613280565b6109ea565b005b3480156102f557600080fd5b50610310600480360381019061030b91906132fd565b610ee3565b60405161031d91906131b6565b60405180910390f35b34801561033257600080fd5b5061034d6004803603810190610348919061339c565b6110ed565b60405161035a91906131b6565b60405180910390f35b34801561036f57600080fd5b506103786111d8565b60405161038591906131b6565b60405180910390f35b34801561039a57600080fd5b506103b560048036038101906103b09190613417565b6111de565b6040516103c29190613453565b60405180910390f35b3480156103d757600080fd5b506103f260048036038101906103ed919061346e565b6111fe565b005b34801561040057600080fd5b5061041b6004803603810190610416919061349b565b611210565b005b34801561042957600080fd5b50610432611465565b60405161043f9190613511565b60405180910390f35b34801561045457600080fd5b5061045d61148b565b60405161046a91906131b6565b60405180910390f35b34801561047f57600080fd5b5061049a6004803603810190610495919061346e565b611491565b005b3480156104a857600080fd5b506104c360048036038101906104be919061352c565b6114a3565b6040516104d091906131b6565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb919061356c565b6114cb565b60405161050d91906131b6565b60405180910390f35b34801561052257600080fd5b5061053d6004803603810190610538919061339c565b6115fe565b60405161054a91906131b6565b60405180910390f35b34801561055f57600080fd5b506105686116e5565b005b34801561057657600080fd5b50610591600480360381019061058c9190613170565b6116f9565b60405161059e91906131b6565b60405180910390f35b3480156105b357600080fd5b506105ce60048036038101906105c991906135e7565b611711565b6040516105db91906131b6565b60405180910390f35b6105fe60048036038101906105f9919061339c565b611736565b005b34801561060c57600080fd5b50610615611da1565b6040516106229190613511565b60405180910390f35b34801561063757600080fd5b50610652600480360381019061064d919061339c565b611dca565b60405161065f91906131b6565b60405180910390f35b34801561067457600080fd5b5061068f600480360381019061068a91906135e7565b611eb5565b60405161069c91906131b6565b60405180910390f35b3480156106b157600080fd5b506106cc60048036038101906106c7919061346e565b611eda565b005b6106e860048036038101906106e3919061339c565b611eec565b005b3480156106f657600080fd5b50610711600480360381019061070c9190613170565b6126cd565b60405161071e9190613453565b60405180910390f35b34801561073357600080fd5b5061074e60048036038101906107499190613627565b6126ed565b005b34801561075c57600080fd5b506107776004803603810190610772919061339c565b612750565b60405161078491906131b6565b60405180910390f35b34801561079957600080fd5b506107b460048036038101906107af9190613170565b612818565b6040516107c191906131b6565b60405180910390f35b3480156107d657600080fd5b506107df612830565b6040516107ec91906131b6565b60405180910390f35b34801561080157600080fd5b5061081c60048036038101906108179190613667565b612836565b005b34801561082a57600080fd5b5061084560048036038101906108409190613170565b612a32565b6040516108529190613453565b60405180910390f35b34801561086757600080fd5b50610882600480360381019061087d9190613417565b612a52565b005b34801561089057600080fd5b506108ab60048036038101906108a69190613280565b612ad6565b005b3480156108b957600080fd5b506108d460048036038101906108cf9190613417565b612f46565b005b60096020528060005260406000206000915090505481565b600d6020528060005260406000206000915090505481565b6000816000600181111561091d5761091c6136ce565b5b8160018111156109305761092f6136ce565b5b14610970576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109679061375a565b60405180910390fd5b620f424084106109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac906137c6565b60405180910390fd5b8484846040516020016109ca939291906138be565b604051602081830303815290604052805190602001209150509392505050565b80600060018111156109ff576109fe6136ce565b5b816001811115610a1257610a116136ce565b5b14610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a499061375a565b60405180910390fd5b610a5a612f92565b6000610a67858585610906565b9050600a600082815260200190815260200160002060009054906101000a900460ff16610ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac090613947565b60405180910390fd5b6000600b600083815260200190815260200160002060009054906101000a900460ff169050600081610b4b576007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b9d565b6006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b905060008111610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd9906139b3565b60405180910390fd5b6000600d6000858152602001908152602001600020549050600083610c1a576009600086815260200190815260200160002054610c2f565b60086000868152602001908152602001600020545b90506000808214610c5657818484610c479190613a02565b610c519190613a8b565b610c59565b60005b905060008111610c9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9590613b08565b60405180910390fd5b8415610d295760006006600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600860008881526020019081526020016000206000828254610d1d9190613b28565b92505081905550610daa565b60006007600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600960008881526020019081526020016000206000828254610da29190613b28565b925050819055505b80600d60008881526020019081526020016000206000828254610dcd9190613b28565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a682604051610e1a91906131b6565b60405180910390a260003373ffffffffffffffffffffffffffffffffffffffff1682604051610e4890613b8d565b60006040518083038185875af1925050503d8060008114610e85576040519150601f19603f3d011682016040523d82523d6000602084013e610e8a565b606091505b5050905080610ece576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec590613bee565b60405180910390fd5b50505050505050610edd612fe2565b50505050565b60008260006001811115610efa57610ef96136ce565b5b816001811115610f0d57610f0c6136ce565b5b14610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f449061375a565b60405180910390fd5b6000610f5a878787610906565b9050600a600082815260200190815260200160002060009054906101000a900460ff16610f8b5760009250506110e4565b6000600b600083815260200190815260200160002060009054906101000a900460ff16905060008161100d576007600084815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461105f565b6006600084815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b90506000600d60008581526020019081526020016000205490506000836110995760096000868152602001908152602001600020546110ae565b60086000868152602001908152602001600020545b905060008082146110d5578184846110c69190613a02565b6110d09190613a8b565b6110d8565b60005b90508097505050505050505b50949350505050565b60008360006001811115611104576111036136ce565b5b816001811115611117576111166136ce565b5b14611157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114e9061375a565b60405180910390fd5b60006111668888888888612750565b90506000670de0b6b3a7640000600354836111819190613a02565b61118b9190613a8b565b90506000670de0b6b3a7640000600454846111a69190613a02565b6111b09190613a8b565b90508082846111bf9190613c0e565b6111c99190613c0e565b94505050505095945050505050565b60045481565b600e6020528060005260406000206000915054906101000a900460ff1681565b611206612feb565b8060058190555050565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661129c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129390613cb0565b60405180910390fd5b81600060018111156112b1576112b06136ce565b5b8160018111156112c4576112c36136ce565b5b14611304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fb9061375a565b60405180910390fd5b6000611311868686610906565b9050600a600082815260200190815260200160002060009054906101000a900460ff1615611374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136b90613d1c565b60405180910390fd5b6000600c600083815260200190815260200160002054146113ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c190613d88565b60405180910390fd5b42831161140c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140390613e1a565b60405180910390fd5b82600c6000838152602001908152602001600020819055507f67c81c88502f8cadccbe9f54b615f7a97e88d9945c6a271e7787258961c78cd38184604051611455929190613e3a565b60405180910390a1505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b611499612feb565b8060048190555050565b60008060055483856114b59190613c0e565b6114bf9190613a02565b90508091505092915050565b600083600060018111156114e2576114e16136ce565b5b8160018111156114f5576114f46136ce565b5b14611535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152c9061375a565b60405180910390fd5b6000611542888888610906565b90508461159f576007600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f1565b6006600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b9250505095945050505050565b60008360006001811115611615576116146136ce565b5b816001811115611628576116276136ce565b5b14611668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165f9061375a565b60405180910390fd5b6000611675888888610906565b90506000856116975760096000838152602001908152602001600020546116ac565b60086000838152602001908152602001600020545b9050848110156116c1576000935050506116db565b6116d685826116d09190613b28565b866114a3565b935050505b5095945050505050565b6116ed612feb565b6116f76000613069565b565b600c6020528060005260406000206000915090505481565b6007602052816000526040600020602052806000526040600020600091509150505481565b826000600181111561174b5761174a6136ce565b5b81600181111561175e5761175d6136ce565b5b1461179e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117959061375a565b60405180910390fd5b60006117ab878787610906565b90506000600c6000838152602001908152602001600020541180156117e2575042600c600083815260200190815260200160002054115b611821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181890613eaf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118aa90613f41565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff1615611914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190b90613d1c565b60405180910390fd5b60008311611957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194e90613fad565b60405180910390fd5b60008461197757600960008381526020019081526020016000205461198c565b60086000838152602001908152602001600020545b9050600061199a82866114a3565b90506000670de0b6b3a7640000600354836119b59190613a02565b6119bf9190613a8b565b90506000670de0b6b3a7640000600454846119da9190613a02565b6119e49190613a8b565b90508082846119f39190613c0e565b6119fd9190613c0e565b341015611a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3690614019565b60405180910390fd5b808234611a4c9190613b28565b611a569190613b28565b600d60008781526020019081526020016000206000828254611a789190613c0e565b925050819055508715611b1b57866006600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ae59190613c0e565b9250508190555086600860008781526020019081526020016000206000828254611b0f9190613c0e565b92505081905550611bad565b866007600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b7b9190613c0e565b9250508190555086600960008781526020019081526020016000206000828254611ba59190613c0e565b925050819055505b60006040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018781526020016001151581526020018a151581526020018981526020018581526020018481526020018381526020018987611c129190613c0e565b81525090507f3b9bd27781456fed243b0e24f17268c9900c2bbe7e7fc6a6f61c9fdd66edbb2581604051611c46919061412c565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1684604051611c9690613b8d565b60006040518083038185875af1925050503d8060008114611cd3576040519150601f19603f3d011682016040523d82523d6000602084013e611cd8565b606091505b5050905060008d73ffffffffffffffffffffffffffffffffffffffff1684604051611d0290613b8d565b60006040518083038185875af1925050503d8060008114611d3f576040519150601f19603f3d011682016040523d82523d6000602084013e611d44565b606091505b50509050818015611d525750805b611d91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8890613bee565b60405180910390fd5b5050505050505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008360006001811115611de157611de06136ce565b5b816001811115611df457611df36136ce565b5b14611e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2b9061375a565b60405180910390fd5b6000611e4388888888886115fe565b90506000670de0b6b3a764000060035483611e5e9190613a02565b611e689190613a8b565b90506000670de0b6b3a764000060045484611e839190613a02565b611e8d9190613a8b565b9050808284611e9c9190613b28565b611ea69190613b28565b94505050505095945050505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b611ee2612feb565b8060038190555050565b8260006001811115611f0157611f006136ce565b5b816001811115611f1457611f136136ce565b5b14611f54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4b9061375a565b60405180910390fd5b611f5c612f92565b6000611f69878787610906565b90506000600c600083815260200190815260200160002054118015611fa0575042600c600083815260200190815260200160002054115b611fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd690613eaf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612071576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206890613f41565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff16156120d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c990613d1c565b60405180910390fd5b60008311612115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210c90614194565b60405180910390fd5b60008461213557600960008381526020019081526020016000205461214a565b60086000838152602001908152602001600020545b90508381101561218f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218690614226565b60405180910390fd5b6000856121ec576007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461223e565b6006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b905084811015612283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161227a906142b8565b60405180910390fd5b600061229a86846122949190613b28565b876114a3565b90506000670de0b6b3a7640000600354836122b59190613a02565b6122bf9190613a8b565b90506000670de0b6b3a7640000600454846122da9190613a02565b6122e49190613a8b565b9050881561238257876006600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461234c9190613b28565b92505081905550876008600088815260200190815260200160002060008282546123769190613b28565b92505081905550612414565b876007600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123e29190613b28565b925050819055508760096000888152602001908152602001600020600082825461240c9190613b28565b925050819055505b82600d600088815260200190815260200160002060008282546124379190613b28565b925050819055506000888661244c9190613b28565b905060006040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018981526020016000151581526020018c151581526020018b81526020018681526020018581526020018481526020018381525090507f3b9bd27781456fed243b0e24f17268c9900c2bbe7e7fc6a6f61c9fdd66edbb25816040516124dc919061412c565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560405161252c90613b8d565b60006040518083038185875af1925050503d8060008114612569576040519150601f19603f3d011682016040523d82523d6000602084013e61256e565b606091505b5050905060008f73ffffffffffffffffffffffffffffffffffffffff168560405161259890613b8d565b60006040518083038185875af1925050503d80600081146125d5576040519150601f19603f3d011682016040523d82523d6000602084013e6125da565b606091505b5050905060003373ffffffffffffffffffffffffffffffffffffffff1686888a6126049190613b28565b61260e9190613b28565b60405161261a90613b8d565b60006040518083038185875af1925050503d8060008114612657576040519150601f19603f3d011682016040523d82523d6000602084013e61265c565b606091505b5050905082801561266a5750815b80156126735750805b6126b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126a990613bee565b60405180910390fd5b50505050505050505050506126c5612fe2565b505050505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b6126f5612feb565b80600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008360006001811115612767576127666136ce565b5b81600181111561277a576127796136ce565b5b146127ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b19061375a565b60405180910390fd5b60006127c7888888610906565b90506000856127e95760096000838152602001908152602001600020546127fe565b60086000838152602001908152602001600020545b905061280a81866114a3565b935050505095945050505050565b60086020528060005260406000206000915090505481565b60035481565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166128c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b990613cb0565b60405180910390fd5b81600060018111156128d7576128d66136ce565b5b8160018111156128ea576128e96136ce565b5b1461292a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129219061375a565b60405180910390fd5b6000612937868686610906565b9050600a600082815260200190815260200160002060009054906101000a900460ff161561299a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299190613d1c565b60405180910390fd5b6001600a600083815260200190815260200160002060006101000a81548160ff02191690831515021790555082600b600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcc923a681ce0b30457b296ce823db752116e20a34977298145ccd5c46f9b38bc8184604051612a229291906142d8565b60405180910390a1505050505050565b600b6020528060005260406000206000915054906101000a900460ff1681565b612a5a612feb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612aca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ac190614373565b60405180910390fd5b612ad381613069565b50565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b5990613cb0565b60405180910390fd5b8060006001811115612b7757612b766136ce565b5b816001811115612b8a57612b896136ce565b5b14612bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bc19061375a565b60405180910390fd5b6000612bd7858585610906565b9050600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612c6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c6290613f41565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff16612ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cc2906143df565b60405180910390fd5b6000600d60008381526020019081526020016000205411612d21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d189061444b565b60405180910390fd5b6000600b600083815260200190815260200160002060009054906101000a900460ff16612d61576009600083815260200190815260200160002054612d76565b60086000838152602001908152602001600020545b905060008114612dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612db2906144b7565b60405180910390fd5b60006002600d600085815260200190815260200160002054612ddd9190613a8b565b90506000600d6000858152602001908152602001600020819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051612e4090613b8d565b60006040518083038185875af1925050503d8060008114612e7d576040519150601f19603f3d011682016040523d82523d6000602084013e612e82565b606091505b5050905060008873ffffffffffffffffffffffffffffffffffffffff1683604051612eac90613b8d565b60006040518083038185875af1925050503d8060008114612ee9576040519150601f19603f3d011682016040523d82523d6000602084013e612eee565b606091505b50509050818015612efc5750805b612f3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f3290613bee565b60405180910390fd5b505050505050505050565b612f4e612feb565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026001541415612fd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fcf90614523565b60405180910390fd5b6002600181905550565b60018081905550565b612ff361312d565b73ffffffffffffffffffffffffffffffffffffffff16613011611da1565b73ffffffffffffffffffffffffffffffffffffffff1614613067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161305e9061458f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61314d8161313a565b811461315857600080fd5b50565b60008135905061316a81613144565b92915050565b60006020828403121561318657613185613135565b5b60006131948482850161315b565b91505092915050565b6000819050919050565b6131b08161319d565b82525050565b60006020820190506131cb60008301846131a7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006131fc826131d1565b9050919050565b61320c816131f1565b811461321757600080fd5b50565b60008135905061322981613203565b92915050565b6132388161319d565b811461324357600080fd5b50565b6000813590506132558161322f565b92915050565b6002811061326857600080fd5b50565b60008135905061327a8161325b565b92915050565b60008060006060848603121561329957613298613135565b5b60006132a78682870161321a565b93505060206132b886828701613246565b92505060406132c98682870161326b565b9150509250925092565b6132dc8161313a565b82525050565b60006020820190506132f760008301846132d3565b92915050565b6000806000806080858703121561331757613316613135565b5b60006133258782880161321a565b945050602061333687828801613246565b93505060406133478782880161326b565b92505060606133588782880161321a565b91505092959194509250565b60008115159050919050565b61337981613364565b811461338457600080fd5b50565b60008135905061339681613370565b92915050565b600080600080600060a086880312156133b8576133b7613135565b5b60006133c68882890161321a565b95505060206133d788828901613246565b94505060406133e88882890161326b565b93505060606133f988828901613387565b925050608061340a88828901613246565b9150509295509295909350565b60006020828403121561342d5761342c613135565b5b600061343b8482850161321a565b91505092915050565b61344d81613364565b82525050565b60006020820190506134686000830184613444565b92915050565b60006020828403121561348457613483613135565b5b600061349284828501613246565b91505092915050565b600080600080608085870312156134b5576134b4613135565b5b60006134c38782880161321a565b94505060206134d487828801613246565b93505060406134e58782880161326b565b92505060606134f687828801613246565b91505092959194509250565b61350b816131f1565b82525050565b60006020820190506135266000830184613502565b92915050565b6000806040838503121561354357613542613135565b5b600061355185828601613246565b925050602061356285828601613246565b9150509250929050565b600080600080600060a0868803121561358857613587613135565b5b60006135968882890161321a565b95505060206135a788828901613246565b94505060406135b88882890161326b565b93505060606135c988828901613387565b92505060806135da8882890161321a565b9150509295509295909350565b600080604083850312156135fe576135fd613135565b5b600061360c8582860161315b565b925050602061361d8582860161321a565b9150509250929050565b6000806040838503121561363e5761363d613135565b5b600061364c8582860161321a565b925050602061365d85828601613387565b9150509250929050565b6000806000806080858703121561368157613680613135565b5b600061368f8782880161321a565b94505060206136a087828801613246565b93505060406136b18782880161326b565b92505060606136c287828801613387565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f496e76616c6964206576656e7420747970650000000000000000000000000000600082015250565b60006137446012836136fd565b915061374f8261370e565b602082019050919050565b6000602082019050818103600083015261377381613737565b9050919050565b7f4944206d757374206265206c657373207468616e2031206d696c6c696f6e0000600082015250565b60006137b0601e836136fd565b91506137bb8261377a565b602082019050919050565b600060208201905081810360008301526137df816137a3565b9050919050565b60008160601b9050919050565b60006137fe826137e6565b9050919050565b6000613810826137f3565b9050919050565b613828613823826131f1565b613805565b82525050565b6000819050919050565b6138496138448261319d565b61382e565b82525050565b600281106138605761385f6136ce565b5b50565b60008190506138718261384f565b919050565b600061388182613863565b9050919050565b60008160f81b9050919050565b60006138a082613888565b9050919050565b6138b86138b382613876565b613895565b82525050565b60006138ca8286613817565b6014820191506138da8285613838565b6020820191506138ea82846138a7565b600182019150819050949350505050565b7f4576656e74206e6f742079657420766572696669656400000000000000000000600082015250565b60006139316016836136fd565b915061393c826138fb565b602082019050919050565b6000602082019050818103600083015261396081613924565b9050919050565b7f4e6f2073686172657320746f20636c61696d20666f7200000000000000000000600082015250565b600061399d6016836136fd565b91506139a882613967565b602082019050919050565b600060208201905081810360008301526139cc81613990565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613a0d8261319d565b9150613a188361319d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a5157613a506139d3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613a968261319d565b9150613aa18361319d565b925082613ab157613ab0613a5c565b5b828204905092915050565b7f4e6f207061796f757420666f7220757365720000000000000000000000000000600082015250565b6000613af26012836136fd565b9150613afd82613abc565b602082019050919050565b60006020820190508181036000830152613b2181613ae5565b9050919050565b6000613b338261319d565b9150613b3e8361319d565b925082821015613b5157613b506139d3565b5b828203905092915050565b600081905092915050565b50565b6000613b77600083613b5c565b9150613b8282613b67565b600082019050919050565b6000613b9882613b6a565b9150819050919050565b7f556e61626c6520746f2073656e642066756e6473000000000000000000000000600082015250565b6000613bd86014836136fd565b9150613be382613ba2565b602082019050919050565b60006020820190508181036000830152613c0781613bcb565b9050919050565b6000613c198261319d565b9150613c248361319d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c5957613c586139d3565b5b828201905092915050565b7f43616c6c6572206973206e6f7420612076657269666965720000000000000000600082015250565b6000613c9a6018836136fd565b9150613ca582613c64565b602082019050919050565b60006020820190508181036000830152613cc981613c8d565b9050919050565b7f4576656e7420616c726561647920766572696669656400000000000000000000600082015250565b6000613d066016836136fd565b9150613d1182613cd0565b602082019050919050565b60006020820190508181036000830152613d3581613cf9565b9050919050565b7f4576656e7420616c7265616479206f70656e6564000000000000000000000000600082015250565b6000613d726014836136fd565b9150613d7d82613d3c565b602082019050919050565b60006020820190508181036000830152613da181613d65565b9050919050565b7f4576656e7420656e642074696d657374616d70206d75737420626520696e207460008201527f6865206675747572650000000000000000000000000000000000000000000000602082015250565b6000613e046029836136fd565b9150613e0f82613da8565b604082019050919050565b60006020820190508181036000830152613e3381613df7565b9050919050565b6000604082019050613e4f60008301856132d3565b613e5c60208301846131a7565b9392505050565b7f4576656e74206973206e6f74206f6e676f696e67000000000000000000000000600082015250565b6000613e996014836136fd565b9150613ea482613e63565b602082019050919050565b60006020820190508181036000830152613ec881613e8c565b9050919050565b7f70726f746f636f6c46656544657374696e6174696f6e20697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000613f2b602a836136fd565b9150613f3682613ecf565b604082019050919050565b60006020820190508181036000830152613f5a81613f1e565b9050919050565b7f43616e6e6f7420627579207a65726f2073686172657300000000000000000000600082015250565b6000613f976016836136fd565b9150613fa282613f61565b602082019050919050565b60006020820190508181036000830152613fc681613f8a565b9050919050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b60006140036014836136fd565b915061400e82613fcd565b602082019050919050565b6000602082019050818103600083015261403281613ff6565b9050919050565b614042816131f1565b82525050565b6140518161313a565b82525050565b61406081613364565b82525050565b61406f8161319d565b82525050565b6101208201600082015161408c6000850182614039565b50602082015161409f6020850182614048565b5060408201516140b26040850182614057565b5060608201516140c56060850182614057565b5060808201516140d86080850182614066565b5060a08201516140eb60a0850182614066565b5060c08201516140fe60c0850182614066565b5060e082015161411160e0850182614066565b50610100820151614126610100850182614066565b50505050565b6000610120820190506141426000830184614075565b92915050565b7f43616e6e6f742073656c6c207a65726f20736861726573000000000000000000600082015250565b600061417e6017836136fd565b915061418982614148565b602082019050919050565b600060208201905081810360008301526141ad81614171565b9050919050565b7f43616e6e6f742073656c6c206d6f726520736861726573207468616e2074686560008201527f2063757272656e7420737570706c790000000000000000000000000000000000602082015250565b6000614210602f836136fd565b915061421b826141b4565b604082019050919050565b6000602082019050818103600083015261423f81614203565b9050919050565b7f596f7520646f6e2774206861766520656e6f7567682073686172657320746f2060008201527f73656c6c00000000000000000000000000000000000000000000000000000000602082015250565b60006142a26024836136fd565b91506142ad82614246565b604082019050919050565b600060208201905081810360008301526142d181614295565b9050919050565b60006040820190506142ed60008301856132d3565b6142fa6020830184613444565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061435d6026836136fd565b915061436882614301565b604082019050919050565b6000602082019050818103600083015261438c81614350565b9050919050565b7f4576656e74206973206e6f742076657269666965640000000000000000000000600082015250565b60006143c96015836136fd565b91506143d482614393565b602082019050919050565b600060208201905081810360008301526143f8816143bc565b9050919050565b7f506f6f6c20697320616c726561647920656d7074790000000000000000000000600082015250565b60006144356015836136fd565b9150614440826143ff565b602082019050919050565b6000602082019050818103600083015261446481614428565b9050919050565b7f546865726520617265207374696c6c2073686172657300000000000000000000600082015250565b60006144a16016836136fd565b91506144ac8261446b565b602082019050919050565b600060208201905081810360008301526144d081614494565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061450d601f836136fd565b9150614518826144d7565b602082019050919050565b6000602082019050818103600083015261453c81614500565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006145796020836136fd565b915061458482614543565b602082019050919050565b600060208201905081810360008301526145a88161456c565b905091905056fea2646970667358221220d7c400f1eac50b809ef12d262791c9caae7a6b0dabd5070fcc89a27dac01cd3a64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106102045760003560e01c80638678810311610118578063ac9b5671116100a0578063dcd11d261161006f578063dcd11d26146107f5578063ddfb87a01461081e578063f2fde38b1461085b578063f60751b814610884578063fbe53234146108ad57610204565b8063ac9b567114610727578063bc6eaf7014610750578063c9c89f7f1461078d578063d6e6eb9f146107ca57610204565b80639b2bd771116100e75780639b2bd7711461062b578063a28bde4914610668578063a4983421146106a5578063a7151325146106ce578063a8393ec8146106ea57610204565b8063867881031461056a5780638c0a6d3e146105a75780638c169611146105e45780638da5cb5b1461060057610204565b80633a8641ea1161019b5780635a8a764e1161016a5780635a8a764e146104735780635cf4ee911461049c57806367031435146104d957806367a5f8d614610516578063715018a61461055357610204565b80633a8641ea146103cb57806345ef0d2b146103f45780634ce7957c1461041d57806354e42f7e1461044857610204565b80631287e761116101d75780631287e761146102e957806313b5408b1461032657806324dc441d14610363578063331052181461038e57610204565b80630105faff146102095780630905c17b146102465780630d734519146102835780630fcf5500146102c0575b600080fd5b34801561021557600080fd5b50610230600480360381019061022b9190613170565b6108d6565b60405161023d91906131b6565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190613170565b6108ee565b60405161027a91906131b6565b60405180910390f35b34801561028f57600080fd5b506102aa60048036038101906102a59190613280565b610906565b6040516102b791906132e2565b60405180910390f35b3480156102cc57600080fd5b506102e760048036038101906102e29190613280565b6109ea565b005b3480156102f557600080fd5b50610310600480360381019061030b91906132fd565b610ee3565b60405161031d91906131b6565b60405180910390f35b34801561033257600080fd5b5061034d6004803603810190610348919061339c565b6110ed565b60405161035a91906131b6565b60405180910390f35b34801561036f57600080fd5b506103786111d8565b60405161038591906131b6565b60405180910390f35b34801561039a57600080fd5b506103b560048036038101906103b09190613417565b6111de565b6040516103c29190613453565b60405180910390f35b3480156103d757600080fd5b506103f260048036038101906103ed919061346e565b6111fe565b005b34801561040057600080fd5b5061041b6004803603810190610416919061349b565b611210565b005b34801561042957600080fd5b50610432611465565b60405161043f9190613511565b60405180910390f35b34801561045457600080fd5b5061045d61148b565b60405161046a91906131b6565b60405180910390f35b34801561047f57600080fd5b5061049a6004803603810190610495919061346e565b611491565b005b3480156104a857600080fd5b506104c360048036038101906104be919061352c565b6114a3565b6040516104d091906131b6565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb919061356c565b6114cb565b60405161050d91906131b6565b60405180910390f35b34801561052257600080fd5b5061053d6004803603810190610538919061339c565b6115fe565b60405161054a91906131b6565b60405180910390f35b34801561055f57600080fd5b506105686116e5565b005b34801561057657600080fd5b50610591600480360381019061058c9190613170565b6116f9565b60405161059e91906131b6565b60405180910390f35b3480156105b357600080fd5b506105ce60048036038101906105c991906135e7565b611711565b6040516105db91906131b6565b60405180910390f35b6105fe60048036038101906105f9919061339c565b611736565b005b34801561060c57600080fd5b50610615611da1565b6040516106229190613511565b60405180910390f35b34801561063757600080fd5b50610652600480360381019061064d919061339c565b611dca565b60405161065f91906131b6565b60405180910390f35b34801561067457600080fd5b5061068f600480360381019061068a91906135e7565b611eb5565b60405161069c91906131b6565b60405180910390f35b3480156106b157600080fd5b506106cc60048036038101906106c7919061346e565b611eda565b005b6106e860048036038101906106e3919061339c565b611eec565b005b3480156106f657600080fd5b50610711600480360381019061070c9190613170565b6126cd565b60405161071e9190613453565b60405180910390f35b34801561073357600080fd5b5061074e60048036038101906107499190613627565b6126ed565b005b34801561075c57600080fd5b506107776004803603810190610772919061339c565b612750565b60405161078491906131b6565b60405180910390f35b34801561079957600080fd5b506107b460048036038101906107af9190613170565b612818565b6040516107c191906131b6565b60405180910390f35b3480156107d657600080fd5b506107df612830565b6040516107ec91906131b6565b60405180910390f35b34801561080157600080fd5b5061081c60048036038101906108179190613667565b612836565b005b34801561082a57600080fd5b5061084560048036038101906108409190613170565b612a32565b6040516108529190613453565b60405180910390f35b34801561086757600080fd5b50610882600480360381019061087d9190613417565b612a52565b005b34801561089057600080fd5b506108ab60048036038101906108a69190613280565b612ad6565b005b3480156108b957600080fd5b506108d460048036038101906108cf9190613417565b612f46565b005b60096020528060005260406000206000915090505481565b600d6020528060005260406000206000915090505481565b6000816000600181111561091d5761091c6136ce565b5b8160018111156109305761092f6136ce565b5b14610970576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109679061375a565b60405180910390fd5b620f424084106109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac906137c6565b60405180910390fd5b8484846040516020016109ca939291906138be565b604051602081830303815290604052805190602001209150509392505050565b80600060018111156109ff576109fe6136ce565b5b816001811115610a1257610a116136ce565b5b14610a52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a499061375a565b60405180910390fd5b610a5a612f92565b6000610a67858585610906565b9050600a600082815260200190815260200160002060009054906101000a900460ff16610ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac090613947565b60405180910390fd5b6000600b600083815260200190815260200160002060009054906101000a900460ff169050600081610b4b576007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b9d565b6006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b905060008111610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd9906139b3565b60405180910390fd5b6000600d6000858152602001908152602001600020549050600083610c1a576009600086815260200190815260200160002054610c2f565b60086000868152602001908152602001600020545b90506000808214610c5657818484610c479190613a02565b610c519190613a8b565b610c59565b60005b905060008111610c9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9590613b08565b60405180910390fd5b8415610d295760006006600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600860008881526020019081526020016000206000828254610d1d9190613b28565b92505081905550610daa565b60006007600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600960008881526020019081526020016000206000828254610da29190613b28565b925050819055505b80600d60008881526020019081526020016000206000828254610dcd9190613b28565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f5afeca38b2064c23a692c4cf353015d80ab3ecc417b4f893f372690c11fbd9a682604051610e1a91906131b6565b60405180910390a260003373ffffffffffffffffffffffffffffffffffffffff1682604051610e4890613b8d565b60006040518083038185875af1925050503d8060008114610e85576040519150601f19603f3d011682016040523d82523d6000602084013e610e8a565b606091505b5050905080610ece576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec590613bee565b60405180910390fd5b50505050505050610edd612fe2565b50505050565b60008260006001811115610efa57610ef96136ce565b5b816001811115610f0d57610f0c6136ce565b5b14610f4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f449061375a565b60405180910390fd5b6000610f5a878787610906565b9050600a600082815260200190815260200160002060009054906101000a900460ff16610f8b5760009250506110e4565b6000600b600083815260200190815260200160002060009054906101000a900460ff16905060008161100d576007600084815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461105f565b6006600084815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b90506000600d60008581526020019081526020016000205490506000836110995760096000868152602001908152602001600020546110ae565b60086000868152602001908152602001600020545b905060008082146110d5578184846110c69190613a02565b6110d09190613a8b565b6110d8565b60005b90508097505050505050505b50949350505050565b60008360006001811115611104576111036136ce565b5b816001811115611117576111166136ce565b5b14611157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114e9061375a565b60405180910390fd5b60006111668888888888612750565b90506000670de0b6b3a7640000600354836111819190613a02565b61118b9190613a8b565b90506000670de0b6b3a7640000600454846111a69190613a02565b6111b09190613a8b565b90508082846111bf9190613c0e565b6111c99190613c0e565b94505050505095945050505050565b60045481565b600e6020528060005260406000206000915054906101000a900460ff1681565b611206612feb565b8060058190555050565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661129c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129390613cb0565b60405180910390fd5b81600060018111156112b1576112b06136ce565b5b8160018111156112c4576112c36136ce565b5b14611304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112fb9061375a565b60405180910390fd5b6000611311868686610906565b9050600a600082815260200190815260200160002060009054906101000a900460ff1615611374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136b90613d1c565b60405180910390fd5b6000600c600083815260200190815260200160002054146113ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c190613d88565b60405180910390fd5b42831161140c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140390613e1a565b60405180910390fd5b82600c6000838152602001908152602001600020819055507f67c81c88502f8cadccbe9f54b615f7a97e88d9945c6a271e7787258961c78cd38184604051611455929190613e3a565b60405180910390a1505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b611499612feb565b8060048190555050565b60008060055483856114b59190613c0e565b6114bf9190613a02565b90508091505092915050565b600083600060018111156114e2576114e16136ce565b5b8160018111156114f5576114f46136ce565b5b14611535576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152c9061375a565b60405180910390fd5b6000611542888888610906565b90508461159f576007600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546115f1565b6006600082815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b9250505095945050505050565b60008360006001811115611615576116146136ce565b5b816001811115611628576116276136ce565b5b14611668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165f9061375a565b60405180910390fd5b6000611675888888610906565b90506000856116975760096000838152602001908152602001600020546116ac565b60086000838152602001908152602001600020545b9050848110156116c1576000935050506116db565b6116d685826116d09190613b28565b866114a3565b935050505b5095945050505050565b6116ed612feb565b6116f76000613069565b565b600c6020528060005260406000206000915090505481565b6007602052816000526040600020602052806000526040600020600091509150505481565b826000600181111561174b5761174a6136ce565b5b81600181111561175e5761175d6136ce565b5b1461179e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117959061375a565b60405180910390fd5b60006117ab878787610906565b90506000600c6000838152602001908152602001600020541180156117e2575042600c600083815260200190815260200160002054115b611821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181890613eaf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156118b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118aa90613f41565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff1615611914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190b90613d1c565b60405180910390fd5b60008311611957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194e90613fad565b60405180910390fd5b60008461197757600960008381526020019081526020016000205461198c565b60086000838152602001908152602001600020545b9050600061199a82866114a3565b90506000670de0b6b3a7640000600354836119b59190613a02565b6119bf9190613a8b565b90506000670de0b6b3a7640000600454846119da9190613a02565b6119e49190613a8b565b90508082846119f39190613c0e565b6119fd9190613c0e565b341015611a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3690614019565b60405180910390fd5b808234611a4c9190613b28565b611a569190613b28565b600d60008781526020019081526020016000206000828254611a789190613c0e565b925050819055508715611b1b57866006600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611ae59190613c0e565b9250508190555086600860008781526020019081526020016000206000828254611b0f9190613c0e565b92505081905550611bad565b866007600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b7b9190613c0e565b9250508190555086600960008781526020019081526020016000206000828254611ba59190613c0e565b925050819055505b60006040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018781526020016001151581526020018a151581526020018981526020018581526020018481526020018381526020018987611c129190613c0e565b81525090507f3b9bd27781456fed243b0e24f17268c9900c2bbe7e7fc6a6f61c9fdd66edbb2581604051611c46919061412c565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1684604051611c9690613b8d565b60006040518083038185875af1925050503d8060008114611cd3576040519150601f19603f3d011682016040523d82523d6000602084013e611cd8565b606091505b5050905060008d73ffffffffffffffffffffffffffffffffffffffff1684604051611d0290613b8d565b60006040518083038185875af1925050503d8060008114611d3f576040519150601f19603f3d011682016040523d82523d6000602084013e611d44565b606091505b50509050818015611d525750805b611d91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d8890613bee565b60405180910390fd5b5050505050505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008360006001811115611de157611de06136ce565b5b816001811115611df457611df36136ce565b5b14611e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2b9061375a565b60405180910390fd5b6000611e4388888888886115fe565b90506000670de0b6b3a764000060035483611e5e9190613a02565b611e689190613a8b565b90506000670de0b6b3a764000060045484611e839190613a02565b611e8d9190613a8b565b9050808284611e9c9190613b28565b611ea69190613b28565b94505050505095945050505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b611ee2612feb565b8060038190555050565b8260006001811115611f0157611f006136ce565b5b816001811115611f1457611f136136ce565b5b14611f54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f4b9061375a565b60405180910390fd5b611f5c612f92565b6000611f69878787610906565b90506000600c600083815260200190815260200160002054118015611fa0575042600c600083815260200190815260200160002054115b611fdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd690613eaf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612071576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161206890613f41565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff16156120d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120c990613d1c565b60405180910390fd5b60008311612115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161210c90614194565b60405180910390fd5b60008461213557600960008381526020019081526020016000205461214a565b60086000838152602001908152602001600020545b90508381101561218f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218690614226565b60405180910390fd5b6000856121ec576007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461223e565b6006600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b905084811015612283576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161227a906142b8565b60405180910390fd5b600061229a86846122949190613b28565b876114a3565b90506000670de0b6b3a7640000600354836122b59190613a02565b6122bf9190613a8b565b90506000670de0b6b3a7640000600454846122da9190613a02565b6122e49190613a8b565b9050881561238257876006600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461234c9190613b28565b92505081905550876008600088815260200190815260200160002060008282546123769190613b28565b92505081905550612414565b876007600088815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123e29190613b28565b925050819055508760096000888152602001908152602001600020600082825461240c9190613b28565b925050819055505b82600d600088815260200190815260200160002060008282546124379190613b28565b925050819055506000888661244c9190613b28565b905060006040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018981526020016000151581526020018c151581526020018b81526020018681526020018581526020018481526020018381525090507f3b9bd27781456fed243b0e24f17268c9900c2bbe7e7fc6a6f61c9fdd66edbb25816040516124dc919061412c565b60405180910390a16000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168560405161252c90613b8d565b60006040518083038185875af1925050503d8060008114612569576040519150601f19603f3d011682016040523d82523d6000602084013e61256e565b606091505b5050905060008f73ffffffffffffffffffffffffffffffffffffffff168560405161259890613b8d565b60006040518083038185875af1925050503d80600081146125d5576040519150601f19603f3d011682016040523d82523d6000602084013e6125da565b606091505b5050905060003373ffffffffffffffffffffffffffffffffffffffff1686888a6126049190613b28565b61260e9190613b28565b60405161261a90613b8d565b60006040518083038185875af1925050503d8060008114612657576040519150601f19603f3d011682016040523d82523d6000602084013e61265c565b606091505b5050905082801561266a5750815b80156126735750805b6126b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126a990613bee565b60405180910390fd5b50505050505050505050506126c5612fe2565b505050505050565b600a6020528060005260406000206000915054906101000a900460ff1681565b6126f5612feb565b80600e60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008360006001811115612767576127666136ce565b5b81600181111561277a576127796136ce565b5b146127ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127b19061375a565b60405180910390fd5b60006127c7888888610906565b90506000856127e95760096000838152602001908152602001600020546127fe565b60086000838152602001908152602001600020545b905061280a81866114a3565b935050505095945050505050565b60086020528060005260406000206000915090505481565b60035481565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166128c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b990613cb0565b60405180910390fd5b81600060018111156128d7576128d66136ce565b5b8160018111156128ea576128e96136ce565b5b1461292a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129219061375a565b60405180910390fd5b6000612937868686610906565b9050600a600082815260200190815260200160002060009054906101000a900460ff161561299a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161299190613d1c565b60405180910390fd5b6001600a600083815260200190815260200160002060006101000a81548160ff02191690831515021790555082600b600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcc923a681ce0b30457b296ce823db752116e20a34977298145ccd5c46f9b38bc8184604051612a229291906142d8565b60405180910390a1505050505050565b600b6020528060005260406000206000915054906101000a900460ff1681565b612a5a612feb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612aca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ac190614373565b60405180910390fd5b612ad381613069565b50565b600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16612b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b5990613cb0565b60405180910390fd5b8060006001811115612b7757612b766136ce565b5b816001811115612b8a57612b896136ce565b5b14612bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bc19061375a565b60405180910390fd5b6000612bd7858585610906565b9050600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612c6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c6290613f41565b60405180910390fd5b600a600082815260200190815260200160002060009054906101000a900460ff16612ccb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cc2906143df565b60405180910390fd5b6000600d60008381526020019081526020016000205411612d21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d189061444b565b60405180910390fd5b6000600b600083815260200190815260200160002060009054906101000a900460ff16612d61576009600083815260200190815260200160002054612d76565b60086000838152602001908152602001600020545b905060008114612dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612db2906144b7565b60405180910390fd5b60006002600d600085815260200190815260200160002054612ddd9190613a8b565b90506000600d6000858152602001908152602001600020819055506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051612e4090613b8d565b60006040518083038185875af1925050503d8060008114612e7d576040519150601f19603f3d011682016040523d82523d6000602084013e612e82565b606091505b5050905060008873ffffffffffffffffffffffffffffffffffffffff1683604051612eac90613b8d565b60006040518083038185875af1925050503d8060008114612ee9576040519150601f19603f3d011682016040523d82523d6000602084013e612eee565b606091505b50509050818015612efc5750805b612f3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f3290613bee565b60405180910390fd5b505050505050505050565b612f4e612feb565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60026001541415612fd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612fcf90614523565b60405180910390fd5b6002600181905550565b60018081905550565b612ff361312d565b73ffffffffffffffffffffffffffffffffffffffff16613011611da1565b73ffffffffffffffffffffffffffffffffffffffff1614613067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161305e9061458f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b61314d8161313a565b811461315857600080fd5b50565b60008135905061316a81613144565b92915050565b60006020828403121561318657613185613135565b5b60006131948482850161315b565b91505092915050565b6000819050919050565b6131b08161319d565b82525050565b60006020820190506131cb60008301846131a7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006131fc826131d1565b9050919050565b61320c816131f1565b811461321757600080fd5b50565b60008135905061322981613203565b92915050565b6132388161319d565b811461324357600080fd5b50565b6000813590506132558161322f565b92915050565b6002811061326857600080fd5b50565b60008135905061327a8161325b565b92915050565b60008060006060848603121561329957613298613135565b5b60006132a78682870161321a565b93505060206132b886828701613246565b92505060406132c98682870161326b565b9150509250925092565b6132dc8161313a565b82525050565b60006020820190506132f760008301846132d3565b92915050565b6000806000806080858703121561331757613316613135565b5b60006133258782880161321a565b945050602061333687828801613246565b93505060406133478782880161326b565b92505060606133588782880161321a565b91505092959194509250565b60008115159050919050565b61337981613364565b811461338457600080fd5b50565b60008135905061339681613370565b92915050565b600080600080600060a086880312156133b8576133b7613135565b5b60006133c68882890161321a565b95505060206133d788828901613246565b94505060406133e88882890161326b565b93505060606133f988828901613387565b925050608061340a88828901613246565b9150509295509295909350565b60006020828403121561342d5761342c613135565b5b600061343b8482850161321a565b91505092915050565b61344d81613364565b82525050565b60006020820190506134686000830184613444565b92915050565b60006020828403121561348457613483613135565b5b600061349284828501613246565b91505092915050565b600080600080608085870312156134b5576134b4613135565b5b60006134c38782880161321a565b94505060206134d487828801613246565b93505060406134e58782880161326b565b92505060606134f687828801613246565b91505092959194509250565b61350b816131f1565b82525050565b60006020820190506135266000830184613502565b92915050565b6000806040838503121561354357613542613135565b5b600061355185828601613246565b925050602061356285828601613246565b9150509250929050565b600080600080600060a0868803121561358857613587613135565b5b60006135968882890161321a565b95505060206135a788828901613246565b94505060406135b88882890161326b565b93505060606135c988828901613387565b92505060806135da8882890161321a565b9150509295509295909350565b600080604083850312156135fe576135fd613135565b5b600061360c8582860161315b565b925050602061361d8582860161321a565b9150509250929050565b6000806040838503121561363e5761363d613135565b5b600061364c8582860161321a565b925050602061365d85828601613387565b9150509250929050565b6000806000806080858703121561368157613680613135565b5b600061368f8782880161321a565b94505060206136a087828801613246565b93505060406136b18782880161326b565b92505060606136c287828801613387565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f496e76616c6964206576656e7420747970650000000000000000000000000000600082015250565b60006137446012836136fd565b915061374f8261370e565b602082019050919050565b6000602082019050818103600083015261377381613737565b9050919050565b7f4944206d757374206265206c657373207468616e2031206d696c6c696f6e0000600082015250565b60006137b0601e836136fd565b91506137bb8261377a565b602082019050919050565b600060208201905081810360008301526137df816137a3565b9050919050565b60008160601b9050919050565b60006137fe826137e6565b9050919050565b6000613810826137f3565b9050919050565b613828613823826131f1565b613805565b82525050565b6000819050919050565b6138496138448261319d565b61382e565b82525050565b600281106138605761385f6136ce565b5b50565b60008190506138718261384f565b919050565b600061388182613863565b9050919050565b60008160f81b9050919050565b60006138a082613888565b9050919050565b6138b86138b382613876565b613895565b82525050565b60006138ca8286613817565b6014820191506138da8285613838565b6020820191506138ea82846138a7565b600182019150819050949350505050565b7f4576656e74206e6f742079657420766572696669656400000000000000000000600082015250565b60006139316016836136fd565b915061393c826138fb565b602082019050919050565b6000602082019050818103600083015261396081613924565b9050919050565b7f4e6f2073686172657320746f20636c61696d20666f7200000000000000000000600082015250565b600061399d6016836136fd565b91506139a882613967565b602082019050919050565b600060208201905081810360008301526139cc81613990565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613a0d8261319d565b9150613a188361319d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a5157613a506139d3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613a968261319d565b9150613aa18361319d565b925082613ab157613ab0613a5c565b5b828204905092915050565b7f4e6f207061796f757420666f7220757365720000000000000000000000000000600082015250565b6000613af26012836136fd565b9150613afd82613abc565b602082019050919050565b60006020820190508181036000830152613b2181613ae5565b9050919050565b6000613b338261319d565b9150613b3e8361319d565b925082821015613b5157613b506139d3565b5b828203905092915050565b600081905092915050565b50565b6000613b77600083613b5c565b9150613b8282613b67565b600082019050919050565b6000613b9882613b6a565b9150819050919050565b7f556e61626c6520746f2073656e642066756e6473000000000000000000000000600082015250565b6000613bd86014836136fd565b9150613be382613ba2565b602082019050919050565b60006020820190508181036000830152613c0781613bcb565b9050919050565b6000613c198261319d565b9150613c248361319d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613c5957613c586139d3565b5b828201905092915050565b7f43616c6c6572206973206e6f7420612076657269666965720000000000000000600082015250565b6000613c9a6018836136fd565b9150613ca582613c64565b602082019050919050565b60006020820190508181036000830152613cc981613c8d565b9050919050565b7f4576656e7420616c726561647920766572696669656400000000000000000000600082015250565b6000613d066016836136fd565b9150613d1182613cd0565b602082019050919050565b60006020820190508181036000830152613d3581613cf9565b9050919050565b7f4576656e7420616c7265616479206f70656e6564000000000000000000000000600082015250565b6000613d726014836136fd565b9150613d7d82613d3c565b602082019050919050565b60006020820190508181036000830152613da181613d65565b9050919050565b7f4576656e7420656e642074696d657374616d70206d75737420626520696e207460008201527f6865206675747572650000000000000000000000000000000000000000000000602082015250565b6000613e046029836136fd565b9150613e0f82613da8565b604082019050919050565b60006020820190508181036000830152613e3381613df7565b9050919050565b6000604082019050613e4f60008301856132d3565b613e5c60208301846131a7565b9392505050565b7f4576656e74206973206e6f74206f6e676f696e67000000000000000000000000600082015250565b6000613e996014836136fd565b9150613ea482613e63565b602082019050919050565b60006020820190508181036000830152613ec881613e8c565b9050919050565b7f70726f746f636f6c46656544657374696e6174696f6e20697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000613f2b602a836136fd565b9150613f3682613ecf565b604082019050919050565b60006020820190508181036000830152613f5a81613f1e565b9050919050565b7f43616e6e6f7420627579207a65726f2073686172657300000000000000000000600082015250565b6000613f976016836136fd565b9150613fa282613f61565b602082019050919050565b60006020820190508181036000830152613fc681613f8a565b9050919050565b7f496e73756666696369656e74207061796d656e74000000000000000000000000600082015250565b60006140036014836136fd565b915061400e82613fcd565b602082019050919050565b6000602082019050818103600083015261403281613ff6565b9050919050565b614042816131f1565b82525050565b6140518161313a565b82525050565b61406081613364565b82525050565b61406f8161319d565b82525050565b6101208201600082015161408c6000850182614039565b50602082015161409f6020850182614048565b5060408201516140b26040850182614057565b5060608201516140c56060850182614057565b5060808201516140d86080850182614066565b5060a08201516140eb60a0850182614066565b5060c08201516140fe60c0850182614066565b5060e082015161411160e0850182614066565b50610100820151614126610100850182614066565b50505050565b6000610120820190506141426000830184614075565b92915050565b7f43616e6e6f742073656c6c207a65726f20736861726573000000000000000000600082015250565b600061417e6017836136fd565b915061418982614148565b602082019050919050565b600060208201905081810360008301526141ad81614171565b9050919050565b7f43616e6e6f742073656c6c206d6f726520736861726573207468616e2074686560008201527f2063757272656e7420737570706c790000000000000000000000000000000000602082015250565b6000614210602f836136fd565b915061421b826141b4565b604082019050919050565b6000602082019050818103600083015261423f81614203565b9050919050565b7f596f7520646f6e2774206861766520656e6f7567682073686172657320746f2060008201527f73656c6c00000000000000000000000000000000000000000000000000000000602082015250565b60006142a26024836136fd565b91506142ad82614246565b604082019050919050565b600060208201905081810360008301526142d181614295565b9050919050565b60006040820190506142ed60008301856132d3565b6142fa6020830184613444565b9392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061435d6026836136fd565b915061436882614301565b604082019050919050565b6000602082019050818103600083015261438c81614350565b9050919050565b7f4576656e74206973206e6f742076657269666965640000000000000000000000600082015250565b60006143c96015836136fd565b91506143d482614393565b602082019050919050565b600060208201905081810360008301526143f8816143bc565b9050919050565b7f506f6f6c20697320616c726561647920656d7074790000000000000000000000600082015250565b60006144356015836136fd565b9150614440826143ff565b602082019050919050565b6000602082019050818103600083015261446481614428565b9050919050565b7f546865726520617265207374696c6c2073686172657300000000000000000000600082015250565b60006144a16016836136fd565b91506144ac8261446b565b602082019050919050565b600060208201905081810360008301526144d081614494565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061450d601f836136fd565b9150614518826144d7565b602082019050919050565b6000602082019050818103600083015261453c81614500565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006145796020836136fd565b915061458482614543565b602082019050919050565b600060208201905081810360008301526145a88161456c565b905091905056fea2646970667358221220d7c400f1eac50b809ef12d262791c9caae7a6b0dabd5070fcc89a27dac01cd3a64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 79,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 10,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 193,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "protocolFeeDestination",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 195,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "protocolFeePercent",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 197,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "subjectFeePercent",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 199,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "priceSlope",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 247,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "yayVotesBalance",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 253,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "nayVotesBalance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 257,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "yayVotesSupply",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 261,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "nayVotesSupply",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 265,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "eventVerified",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 269,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "eventResult",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 273,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "eventEndTimestamp",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 277,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "votingPooledEth",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 281,
        "contract": "contracts/UnlonelySharesV2.sol:UnlonelySharesV2",
        "label": "isVerifier",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}