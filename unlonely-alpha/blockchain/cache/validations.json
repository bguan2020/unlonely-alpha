{
  "version": "3.2",
  "log": [
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:7",
        "version": {
          "withMetadata": "bc45f09c0394c8ac6073cd7c1c98d4a49c9a00896b54257e4e35cce1e46abc32",
          "withoutMetadata": "1ab02c54b3a7de9f9bd6685bca79fac47a82833a17e14ac0e9dcb9b427a942cb",
          "linkedWithoutMetadata": "1ab02c54b3a7de9f9bd6685bca79fac47a82833a17e14ac0e9dcb9b427a942cb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setWinningTokenTradeableAndTransferLiquidity(address[])",
          "mintWinnerTokens(address,uint256)",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)",
          "getBalance()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:84"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)903_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "74ac688e287067500f5a74b87def969366b09278507faba86b404278b9c423dd",
          "withoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216",
          "linkedWithoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityToFactory()",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:7",
        "version": {
          "withMetadata": "ab1ff6e8561abb0a9aeaf8ba7932d3e75b48584d5a5f56d7c8a66af07276e457",
          "withoutMetadata": "1bc61689e5905c810ed8a364e29750d0f3e3f4a3aa8f8a40bb215e118cab064c",
          "linkedWithoutMetadata": "1bc61689e5905c810ed8a364e29750d0f3e3f4a3aa8f8a40bb215e118cab064c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setWinningTokenTradeableAndTransferLiquidity(address[])",
          "mintWinnerTokens(address,uint256)",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)",
          "getBalance()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:84"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)903_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "74ac688e287067500f5a74b87def969366b09278507faba86b404278b9c423dd",
          "withoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216",
          "linkedWithoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityToFactory()",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:7",
        "version": {
          "withMetadata": "8ce68106aab539e6e3dfe21d1153dd18694f17f7cd52d473dc21a1aa827652e3",
          "withoutMetadata": "28795ba0d5b4ba62d296e7fdf424926a5fbdd2678c71e9c8c597786ae75a8b8d",
          "linkedWithoutMetadata": "28795ba0d5b4ba62d296e7fdf424926a5fbdd2678c71e9c8c597786ae75a8b8d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setWinningTokenTradeableAndTransferLiquidity(address[])",
          "mintWinnerTokens(address,uint256)",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)",
          "getBalance()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:84"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)903_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "74ac688e287067500f5a74b87def969366b09278507faba86b404278b9c423dd",
          "withoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216",
          "linkedWithoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityToFactory()",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:7",
        "version": {
          "withMetadata": "92c2fb4ff9a02430cd20f360a110121dddc865f4e0c2518c459e5b4f5ed73031",
          "withoutMetadata": "641c71c408f9b527a283054ece19ae3d4fa30cadf360db51007cc4deb3143fd8",
          "linkedWithoutMetadata": "641c71c408f9b527a283054ece19ae3d4fa30cadf360db51007cc4deb3143fd8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setWinningTokenTradeableAndTransferLiquidity(address,address)",
          "mintWinnerTokens(address,uint256)",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)",
          "getBalance()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:84"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)903_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "74ac688e287067500f5a74b87def969366b09278507faba86b404278b9c423dd",
          "withoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216",
          "linkedWithoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityToFactory()",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:7",
        "version": {
          "withMetadata": "dd8c270765031ccd8e66dce93f001d3c109ad816d4f65baf57d69db94bcdddcf",
          "withoutMetadata": "f3d266766517b6401006a438da10484163254047addefaea535842b5c15a75b6",
          "linkedWithoutMetadata": "f3d266766517b6401006a438da10484163254047addefaea535842b5c15a75b6"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setWinningTokenTradeableAndTransferLiquidity(address,address)",
          "mintWinnerTokens(address,uint256)",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:84"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)903_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "74ac688e287067500f5a74b87def969366b09278507faba86b404278b9c423dd",
          "withoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216",
          "linkedWithoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityToFactory()",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:7",
        "version": {
          "withMetadata": "55c8ef2a8a8a198e1dc81976f46efd7f19cdd5d7611cdf9c3430f28dc7dc9230",
          "withoutMetadata": "1fcc448e20f66c9372724c1c1692de102244f2b1b3b898ac3c47fbc8aa3772ac",
          "linkedWithoutMetadata": "1fcc448e20f66c9372724c1c1692de102244f2b1b3b898ac3c47fbc8aa3772ac"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setWinningTokenTradeableAndTransferLiquidity(address,address)",
          "mintWinnerTokens(address,uint256)",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:84"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)903_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)903_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "74ac688e287067500f5a74b87def969366b09278507faba86b404278b9c423dd",
          "withoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216",
          "linkedWithoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityToFactory()",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "fc180a37cb83fab3758084800a8130b83a1351ee68b55ba3e38a573e28c3775a",
          "withoutMetadata": "8ba2ba2885e3355bb6040762ecdbc8c12fbcc9da7081184f3354500b747e2a48",
          "linkedWithoutMetadata": "8ba2ba2885e3355bb6040762ecdbc8c12fbcc9da7081184f3354500b747e2a48"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setWinningTokenTradeableAndTransferLiquidity(address,address)",
          "mintWinnerTokens(address,uint256)",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:82"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "8bc86485c71e66f7aa5412c9d07336855c21fad723c8b4b58d59d990617d8909",
          "withoutMetadata": "b2c4f73c6b372dec9facbca786de9cb092e7cff99d7be9a51eff37fa4d783875",
          "linkedWithoutMetadata": "b2c4f73c6b372dec9facbca786de9cb092e7cff99d7be9a51eff37fa4d783875"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityToFactory()",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "debd208ecefa4b358ec06bb417e5df02d5b72fe31410ea6d2ecc0b9655007e6f",
          "withoutMetadata": "3e9f2e2f63b4dcf91af27372cb89de30eba15add73775ce1282fde6316b0ea3f",
          "linkedWithoutMetadata": "3e9f2e2f63b4dcf91af27372cb89de30eba15add73775ce1282fde6316b0ea3f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setWinningTokenTradeableAndTransferLiquidity(address,address)",
          "mintWinnerTokens(address,uint256)",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:82"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "74ac688e287067500f5a74b87def969366b09278507faba86b404278b9c423dd",
          "withoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216",
          "linkedWithoutMetadata": "9c27040659dcb1dd4c9eb1aa322c8d4a81ea8b2094545e6d6341f6cd311c4216"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityToFactory()",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "97c21aef6e2e0f5019030c5eafcd4baeff6b952f49986634716f2de0a30b3914",
          "withoutMetadata": "c549a6e77d10727aebfe0517778b97699d28de8adbfd344afe37edf49d6826a6",
          "linkedWithoutMetadata": "c549a6e77d10727aebfe0517778b97699d28de8adbfd344afe37edf49d6826a6"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setWinningTokenTradeableAndTransferLiquidity(address,address)",
          "mintWinnerTokens(address,uint256)",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "a31d31b1b95e009f9a310b05a7c9395a512de784bf004e65d56a5d72f8ad10ee",
          "withoutMetadata": "e2015ac4a95839267d8f12e9554349baf9822e8cd08f175d427df04cbe0a29c6",
          "linkedWithoutMetadata": "e2015ac4a95839267d8f12e9554349baf9822e8cd08f175d427df04cbe0a29c6"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "ad74030df6dcc8e4d5654a0fea254d00815f9a79729da471869b1d9de226c82e",
          "withoutMetadata": "87b6e6528f36ccd2d8e6c0a228571205a56c6eb695a6920cd00f7617ae2e1b79",
          "linkedWithoutMetadata": "87b6e6528f36ccd2d8e6c0a228571205a56c6eb695a6920cd00f7617ae2e1b79"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "sendLoserTokenLiquidityToWinnerToken(address,address,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "2eaf31db8798831d8bd18ad1203ec0755c4f931901aec26a8aa9aba48d921b5c",
          "withoutMetadata": "f5f6f4c296f05334b3356b09bc778890dc9dad886a74638d04a37e9e9f905ace",
          "linkedWithoutMetadata": "f5f6f4c296f05334b3356b09bc778890dc9dad886a74638d04a37e9e9f905ace"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityTo(address,uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "0efd09e027edf6756fc4e4f8cb0de3292adf76eeecafaa1bbf7efd83f0e85d7b",
          "withoutMetadata": "fe36dd616584ba2079cc69c456f8bb88f914b37f54fe8998e5558a6a01ccf43a",
          "linkedWithoutMetadata": "fe36dd616584ba2079cc69c456f8bb88f914b37f54fe8998e5558a6a01ccf43a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "createMultipleTempTokens(string[],string[],uint256,uint256)",
          "sendLoserTokenLiquidityToWinnerToken(address,address,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "c16c76dbccafd767e788c67727f493b8467d1c39fdac8b192108a76e53586d2a",
          "withoutMetadata": "e03391b698b3a855d562eb6c819e510d81e47346a3ff218ece8859503996cd0b",
          "linkedWithoutMetadata": "e03391b698b3a855d562eb6c819e510d81e47346a3ff218ece8859503996cd0b"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "transferLiquidityTo(address,uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "b996fb3efb49eafd8310ed5d86cf999f0e97405bd890e3e7ad7c0a0977a593cd",
          "withoutMetadata": "596cbf13f8b5b22a97ca443931ac89daef4e5440d71b950d62939ddadecdbc3d",
          "linkedWithoutMetadata": "596cbf13f8b5b22a97ca443931ac89daef4e5440d71b950d62939ddadecdbc3d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:79"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "b2ff6e61771763f755858764286b6c3c1b0501cd6df48dfe779fc2bc71365e91",
          "withoutMetadata": "e82f4e4425ed1595ef7d40fa44c9acb983cbe0f2f427ac7dd2c2e2100f09f6f6",
          "linkedWithoutMetadata": "e82f4e4425ed1595ef7d40fa44c9acb983cbe0f2f427ac7dd2c2e2100f09f6f6"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "15840f58e16296427a5b22db2da6ad8acbc5f6f8642d5fab80f512a153b14647",
          "withoutMetadata": "da53b2d543f1ab1825b9ff51a5f6094595d7f271cfd8516c017f2271742d825c",
          "linkedWithoutMetadata": "da53b2d543f1ab1825b9ff51a5f6094595d7f271cfd8516c017f2271742d825c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "59cd2de7966f19d201b6f07629c73e79c027b63658b0fd3205c7430b054a33a3",
          "withoutMetadata": "0f689b2222812f8fe6724e0d425323af101b24bdf4c4265a86023744a8851bc3",
          "linkedWithoutMetadata": "0f689b2222812f8fe6724e0d425323af101b24bdf4c4265a86023744a8851bc3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "380b09e80e23636f059980628e4938e457893a254b17b302bc87cd4b31811c96",
          "withoutMetadata": "da53b2d543f1ab1825b9ff51a5f6094595d7f271cfd8516c017f2271742d825c",
          "linkedWithoutMetadata": "da53b2d543f1ab1825b9ff51a5f6094595d7f271cfd8516c017f2271742d825c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:80"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:63"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "59cd2de7966f19d201b6f07629c73e79c027b63658b0fd3205c7430b054a33a3",
          "withoutMetadata": "0f689b2222812f8fe6724e0d425323af101b24bdf4c4265a86023744a8851bc3",
          "linkedWithoutMetadata": "0f689b2222812f8fe6724e0d425323af101b24bdf4c4265a86023744a8851bc3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "8a9670c23a107d89a572d7194922c41315f6f96f74bbfb46ae9c9bf58005425c",
          "withoutMetadata": "1eae47dce578b49a8cebb0a452c4321bfb26d9967a1212b15e624fee7be308fd",
          "linkedWithoutMetadata": "1eae47dce578b49a8cebb0a452c4321bfb26d9967a1212b15e624fee7be308fd"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:79"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "creationBlockNumber",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "e893cd9387504aa4c179c4037532a85ce05ca1abcb0261e4991f48a87029519e",
          "withoutMetadata": "f769885696ec78de6403ee4d3ddf21119e453ef346fdc6da2dbe20a3f0246247",
          "linkedWithoutMetadata": "f769885696ec78de6403ee4d3ddf21119e453ef346fdc6da2dbe20a3f0246247"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "2e5483b7fe441186b4a4402cce8aecd116f2572bcb25206a37e0ee772f8c8ddf",
          "withoutMetadata": "7902296c89784125b366d8b26be51be9dfed84b7d11c7bdf82cbdffeac71e4d3",
          "linkedWithoutMetadata": "7902296c89784125b366d8b26be51be9dfed84b7d11c7bdf82cbdffeac71e4d3"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:78"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "24ec74277e20f44172beda8a65b2ec699eaf8a0dbc7011bd1e488200393f792c",
          "withoutMetadata": "843806f288559411a764428a78fad05b425a3d8b6f0255fc338b8d69ca18b2f1",
          "linkedWithoutMetadata": "843806f288559411a764428a78fad05b425a3d8b6f0255fc338b8d69ca18b2f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "creationBlockTimestamp",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "16",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "16",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "5b70ba24167096f52699f31e1b0d5489b319f03449817e58d9e2b5a9b458cb46",
          "withoutMetadata": "2c1b8dc2eb752be46eaa344b37810b18f9e7ad6614b47cbd0b2d3c1ff43210d0",
          "linkedWithoutMetadata": "2c1b8dc2eb752be46eaa344b37810b18f9e7ad6614b47cbd0b2d3c1ff43210d0"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:78"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "6828b4faa582c22d32a4cb15512ab4e278cf257cb990c7a051962133acc4c9ee",
          "withoutMetadata": "39ee4e190d940fa92e31ee74687280fde6d86c60b49a113f50401677b7ffa1a8",
          "linkedWithoutMetadata": "39ee4e190d940fa92e31ee74687280fde6d86c60b49a113f50401677b7ffa1a8"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "creationBlockNumber",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "15",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "bbe1e5fffca9489f5e0265096134f2445284a05cf26df94c9a9ae820b56e3fda",
          "withoutMetadata": "bbb7df05ce484703d24177121ba771dcea9efd91ad13dc523c94127caa21be04",
          "linkedWithoutMetadata": "bbb7df05ce484703d24177121ba771dcea9efd91ad13dc523c94127caa21be04"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:78"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3edf2ee7c071587f44afa99d9d36ff033252c37525f38ddfa602124af30003d5",
          "withoutMetadata": "25bcbd6d6456ec9b42c9373753bccfc7be3db2a3f90ea32ec39c023e890a9aa0",
          "linkedWithoutMetadata": "25bcbd6d6456ec9b42c9373753bccfc7be3db2a3f90ea32ec39c023e890a9aa0"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "9ff73a181951b9c7bcdcd2762e5806036974cac85a2654e9877cd884676956d4",
          "withoutMetadata": "ecc5e42a347657f0a94fc671bdf6f9fc2e81db14cba558dfe0b2fb331f07bbda",
          "linkedWithoutMetadata": "ecc5e42a347657f0a94fc671bdf6f9fc2e81db14cba558dfe0b2fb331f07bbda"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:78"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "c3b9b4c18ada57a97338295433c2f7562294a64e681fd23c420f62db11507b15",
          "withoutMetadata": "8caeb8d2fb4d0af04607deb44d36a84df7bf051b83cbda6627515351512b908d",
          "linkedWithoutMetadata": "8caeb8d2fb4d0af04607deb44d36a84df7bf051b83cbda6627515351512b908d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToWinnerAfterTokenExpiration(address payable)",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "c5417cb6b6e27e2e77ee222c0092309f4a23897f742b33718f5b4b8bbc41a2dc",
          "withoutMetadata": "1d44c6e0b85baedd76027fd21054791adf50160fb774afe47d59a9bd423b68a8",
          "linkedWithoutMetadata": "1d44c6e0b85baedd76027fd21054791adf50160fb774afe47d59a9bd423b68a8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:78"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "84feaf1bbffe7489210751cd406000f36d185c676bb6702c75343aea59e3a705",
          "withoutMetadata": "3195f3c28e98922d66a7d7e5702298a96945fd7cee335d269e00aec5b0ce43ba",
          "linkedWithoutMetadata": "3195f3c28e98922d66a7d7e5702298a96945fd7cee335d269e00aec5b0ce43ba"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "1023747729b5a187d4d8032b98070a20137818c37fce173e8949872d79b87754",
          "withoutMetadata": "91d141987826acdc546addf7c0a71e433b57f73db3083a389ec46f80dd41e1a2",
          "linkedWithoutMetadata": "91d141987826acdc546addf7c0a71e433b57f73db3083a389ec46f80dd41e1a2"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setAlwaysTradeableForTokens(bool,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:78"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "07bef1e76c2c1cb32ca73d7f91199e4a303868fe7340a7fa7d48e3d56e00ae12",
          "withoutMetadata": "3d7e4329c85a546b100fe048f1c0a3a2cc0cb7ad74259afddff2f73f658debd3",
          "linkedWithoutMetadata": "3d7e4329c85a546b100fe048f1c0a3a2cc0cb7ad74259afddff2f73f658debd3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "setAlwaysTradeable(bool)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "highestTotalSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "14",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:29"
            },
            {
              "label": "isAlwaysTradeable",
              "offset": 1,
              "slot": "14",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:30"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "bf9e47a5c1bc9653b2a662c8eee1ea3bbd237e5ed5590bce79a578e00c7b639a",
          "withoutMetadata": "1271f9282afa7d1799d106e1843fcf01ce588004b2954cc059a0edaac2aa814c",
          "linkedWithoutMetadata": "1271f9282afa7d1799d106e1843fcf01ce588004b2954cc059a0edaac2aa814c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "972edd4470c1d9480606843cc33e6d21e15e04b311578d2a547877a7f85ac386",
          "withoutMetadata": "143660293886d2c569154d40c13fa60a00971278302da7581fac3646838b1bae",
          "linkedWithoutMetadata": "143660293886d2c569154d40c13fa60a00971278302da7581fac3646838b1bae"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "1e89ccc03d84f30b2cf5d107bd85521be5b91f41975e3b3a1751817be37efd3a",
          "withoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566",
          "linkedWithoutMetadata": "4d25d45e78727bcafc703bbb4907285a61f036774fab03605769f9bf1ded7566"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "fbc3a33bf3266d94d5e414aab24ce24eb10032a407c8a865cc12a38ae0a78770",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "af87601ad86b5a22c695a779f639bb112d134b9beefff82a9788b95f42b3c868",
          "withoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076",
          "linkedWithoutMetadata": "8d038a389711ff8a2c6d1b2ef015a3a51f4981b84ef4ca41b1b9980060212076"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "b9dcb1bb78212b62040dac53839597ac21aa8d5272015c1246e7200ffbf50257",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "95dfe22b29165be2253afb9d946ae36e45eac24d7715414d1fb23a7813c288f5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "32000de71879f4bad46f7e3bb5f1c36bea4cf807b7ab66e22c23f8e7b74b01b8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "041f1c24bf2518a2800367a29fd62834cc35d7971958df3717023e43c81b8c23",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts\\BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "bdfb4feea25c0592bc5a0a3ccd186a96acfd6575924094378c52cd02e58d4562",
          "withoutMetadata": "9a33510f1b26408b8c646ce5c43f5aba940f34f906f9b9b1cb809d208da5f8f2",
          "linkedWithoutMetadata": "9a33510f1b26408b8c646ce5c43f5aba940f34f906f9b9b1cb809d208da5f8f2"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts\\BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "593e509e184dfd256fe6627b95c723444c35c3f471e2bb6f29f10084019f21d8",
          "withoutMetadata": "9c512c7904e0496e716b61e9c27067c154877633dbec60b1f74d1ab2a0290c15",
          "linkedWithoutMetadata": "9c512c7904e0496e716b61e9c27067c154877633dbec60b1f74d1ab2a0290c15"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)3958_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:59"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:60"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)3958_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)3958_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "399dc52a2c85e9975a9045f7c9ff82111c0409822d9c78d2f918cdaac06c3ac8",
          "withoutMetadata": "56186c0092b365a62b9ab130976122b9a5470489e35f506f96df71a2ecf8be6c",
          "linkedWithoutMetadata": "56186c0092b365a62b9ab130976122b9a5470489e35f506f96df71a2ecf8be6c"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyAdminContractV1": {
        "src": "contracts\\UnlonelyAdminContractV1.sol:4",
        "version": {
          "withMetadata": "158a9324b32d106c5d7abad9eedadeb181da913827f50b1d2b76c09c3eea2720",
          "withoutMetadata": "236d81f71de1421c2363aedcdbeb7e3a92a8809c21d321bb38dfaab7d084bc90",
          "linkedWithoutMetadata": "236d81f71de1421c2363aedcdbeb7e3a92a8809c21d321bb38dfaab7d084bc90"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "addAdmin(address)",
          "removeAdmin(address)",
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyAdminContractV1",
            "src": "contracts\\UnlonelyAdminContractV1.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admins",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyAdminContractV1",
              "src": "contracts\\UnlonelyAdminContractV1.sol:5"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyAdminContractV1",
              "src": "contracts\\UnlonelyAdminContractV1.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "23d0d04a78c669b6d1a86fa25f98d478fadfd009867e814de60b580ce10b947f",
          "withoutMetadata": "e2be5e15d86782735148b14c3daeb35c0b2b6d822b6827f37bcb56a0dd060bb4",
          "linkedWithoutMetadata": "e2be5e15d86782735148b14c3daeb35c0b2b6d822b6827f37bcb56a0dd060bb4"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)831)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)831)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "057aa2688686290ca6bb8320d23a4743b11f3a24f80dccdb291461c7e5d2019d",
          "withoutMetadata": "b036486aa0aaf0c1477914f5a84994e2c26c54a1e820b4938e8042c889f8eacc",
          "linkedWithoutMetadata": "b036486aa0aaf0c1477914f5a84994e2c26c54a1e820b4938e8042c889f8eacc"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2762_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2762_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "dfb7c22f1a05ccf23b2c38e1213f3768c39431aaf6c1916c6842d53c70019f5d",
          "withoutMetadata": "00fd3afa423def1a2cea0d92f6f14a4fd91caa4a7f18e19af96e7419b6f4e5b5",
          "linkedWithoutMetadata": "00fd3afa423def1a2cea0d92f6f14a4fd91caa4a7f18e19af96e7419b6f4e5b5"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "fef14fd24eb45a36cecd2c26fa89a0acf72da4253eefb3f9427092ec75b94e36",
          "withoutMetadata": "cd8e89a6225b2767a6a7352ce8a1938052029cc7c233e482e36cc49163a313a8",
          "linkedWithoutMetadata": "cd8e89a6225b2767a6a7352ce8a1938052029cc7c233e482e36cc49163a313a8"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:146"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "priceSlope",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:96"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:117"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:120"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:124"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:125"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:128"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySideBetsV1": {
        "src": "contracts\\UnlonelySideBetsV1.sol:81",
        "version": {
          "withMetadata": "8b616785216f5123def7b059b630a72d8cb45bf31d3f8b39a7abc4849ff4c991",
          "withoutMetadata": "fe25b571ee1e6d54f0e6246a5cdf3e04559205c863f11cfacfa6a9681181e688",
          "linkedWithoutMetadata": "fe25b571ee1e6d54f0e6246a5cdf3e04559205c863f11cfacfa6a9681181e688"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getOpeningWagerAfterFee(uint256)",
          "getExistingWager(address,uint256,uint8)",
          "getExistingWagerAfterFee(address,uint256,uint8)",
          "isSideBetAvailable(address,uint256,uint8)",
          "openSideBet(address,uint256,uint8,uint256,uint256)",
          "acceptSideBet(address,uint256,uint8)",
          "pickWinner(address,uint256,uint8,address)",
          "closeSideBet(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySideBetsV1",
            "src": "contracts\\UnlonelySideBetsV1.sol:130"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetsV1.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:84"
            },
            {
              "label": "sideBets",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(SideBet)8849_storage)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:106"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:109"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_bytes32,t_struct(SideBet)8849_storage)": {
              "label": "mapping(bytes32 => struct UnlonelySideBetsV1.SideBet)"
            },
            "t_struct(SideBet)8849_storage": {
              "label": "struct UnlonelySideBetsV1.SideBet",
              "members": [
                {
                  "label": "initiator",
                  "type": "t_address"
                },
                {
                  "label": "opponent",
                  "type": "t_address"
                },
                {
                  "label": "wagerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint256"
                },
                {
                  "label": "isWinnerPicked",
                  "type": "t_bool"
                },
                {
                  "label": "winner",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "fcf6478039c208e40c27d2ab1fcf10516436d64fabb730419944c919c38ed66f",
          "withoutMetadata": "327e9dd4d586e337d24cce43eedac9af524012f25114a2bfbe816455c006b233",
          "linkedWithoutMetadata": "327e9dd4d586e337d24cce43eedac9af524012f25114a2bfbe816455c006b233"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getSupply(address,uint256,uint8)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament(address,uint256,uint8)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:137"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)9842_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:109"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:111"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:112"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:113"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:114"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:119"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:120"
            },
            {
              "label": "winningBadges",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:121"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:122"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)9842_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "VibesTokenV1": {
        "src": "contracts\\VibesTokenV1.sol:7",
        "version": {
          "withMetadata": "b616981aba6fd48a2779bf4a6f5acfacefab82828a10f7de337f8f12c0638f9f",
          "withoutMetadata": "e60cfb5ac3d1dce258840a34e2cd9a44f61d903edbd57edacf34c82e9156f27a",
          "linkedWithoutMetadata": "e60cfb5ac3d1dce258840a34e2cd9a44f61d903edbd57edacf34c82e9156f27a"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "mint(uint256,address)",
          "burn(uint256,address)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VibesTokenV1",
            "src": "contracts\\VibesTokenV1.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\VibesTokenV1.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:8"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:9"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:10"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "97d1d203965ab5c428b71ca147274459e39efcfdf7c8452acbbfe360e3d113c3",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "deb3c4477db3b98db7a00c31674c1eb8732660e82d5c23d42868f5e77af0d1aa",
          "withoutMetadata": "f52b3a0722afd7b0daf622c97486df49f511792929194de036e8eb5c2ff12b0a",
          "linkedWithoutMetadata": "f52b3a0722afd7b0daf622c97486df49f511792929194de036e8eb5c2ff12b0a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:70"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:30"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:51"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:52"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "005ccf4cd5df473dd6bbe4ab3fc93bc328f6fe1071013b743e9e7046a3fece43",
          "withoutMetadata": "08392e612fe3a23d2cc04070d30344b7be04b48c69678e893a98d1f53c20b635",
          "linkedWithoutMetadata": "08392e612fe3a23d2cc04070d30344b7be04b48c69678e893a98d1f53c20b635"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:63"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:21"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:22"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)886_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:23"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:30"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:42"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:43"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)886_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)886_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "3fed0f703ec42b6695a329b2cf29ba5724c55dc0bc1714b68326424215121a77",
          "withoutMetadata": "093d7958714a9309945b2bf75260361736d9b62548aabf8bd8a0458f30e8476c",
          "linkedWithoutMetadata": "093d7958714a9309945b2bf75260361736d9b62548aabf8bd8a0458f30e8476c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:60"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:25"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:26"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:42"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:43"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)894_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "d94033b71a981d0024a568bda18b7c4562e8f5275f802149258054e118145a8a",
          "withoutMetadata": "25b119f2472d02b9cec83c3b477a45012f6431380df8fa051e51b21f2c70d588",
          "linkedWithoutMetadata": "25b119f2472d02b9cec83c3b477a45012f6431380df8fa051e51b21f2c70d588"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:25"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:26"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:42"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:43"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)894_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "0f7205d25d2b0b2191354eb593d52360828fa3e3eb15d9e2d0bc0ec6baac2b67",
          "withoutMetadata": "4d94e44f8f8c0db190b3d2ff006aaf528785934b5e1346f625891132a4001792",
          "linkedWithoutMetadata": "4d94e44f8f8c0db190b3d2ff006aaf528785934b5e1346f625891132a4001792"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:26"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:30"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:43"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)894_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "bab85eb76fe3cce075280c6960949d31868aa743ad593b8ce3d45ec37ce54fdf",
          "withoutMetadata": "c8fa3febf092df6c34dfe1dc9dd346843aba58d34f17738df9db5e907cd57d4e",
          "linkedWithoutMetadata": "c8fa3febf092df6c34dfe1dc9dd346843aba58d34f17738df9db5e907cd57d4e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:26"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:30"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:43"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)894_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "d862924dd3785d2bc80c585179e5e2479a4b7a07bde469e303207e018616135c",
          "withoutMetadata": "80ce188cdcbaad38c4dcf3028a461dd674d65919bf3a4e6d63f39182bc20d696",
          "linkedWithoutMetadata": "80ce188cdcbaad38c4dcf3028a461dd674d65919bf3a4e6d63f39182bc20d696"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:26"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:30"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:43"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)894_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "bab85eb76fe3cce075280c6960949d31868aa743ad593b8ce3d45ec37ce54fdf",
          "withoutMetadata": "c8fa3febf092df6c34dfe1dc9dd346843aba58d34f17738df9db5e907cd57d4e",
          "linkedWithoutMetadata": "c8fa3febf092df6c34dfe1dc9dd346843aba58d34f17738df9db5e907cd57d4e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:26"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:30"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:43"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)894_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "e584ea9457b1059731a736a1c60ccd7ea0742f3e5a7d634c4f9f1779bf43a896",
          "withoutMetadata": "716b59ff013b1469925eabf2228f9da98a56746d24f52c70e378e0c7191c1973",
          "linkedWithoutMetadata": "716b59ff013b1469925eabf2228f9da98a56746d24f52c70e378e0c7191c1973"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)896_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "9d4ba1691c2930dd2aea342195360aba9dd5e60b6646004ec384db19f3c11df4",
          "withoutMetadata": "3a6be472cb4139bc4d998072faaf22e1898516e1dd6ffa11fbcf696ae4e75275",
          "linkedWithoutMetadata": "3a6be472cb4139bc4d998072faaf22e1898516e1dd6ffa11fbcf696ae4e75275"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)896_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "383a612b280aa04f26b71b067c772aaeca144418ec3d33b59b22b112a38695fe",
          "withoutMetadata": "c5e46f4634f9631d1e7e61271f4ea1e266fc39bdb9ae77eb5e0c71f2ed1f448c",
          "linkedWithoutMetadata": "c5e46f4634f9631d1e7e61271f4ea1e266fc39bdb9ae77eb5e0c71f2ed1f448c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)896_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "2768b38704f9dfa804bd2dbd4901db5bcf815dbcf81894382a63cc3dd181373c",
          "withoutMetadata": "1ffe595d85d3d6bdae2c5892c2a00954f67cdd3f432f13ae702e14cc093feef6",
          "linkedWithoutMetadata": "1ffe595d85d3d6bdae2c5892c2a00954f67cdd3f432f13ae702e14cc093feef6"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)896_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "ebf83153bfeed581c50036c642c3ffd12cdd1793ad295c6b64ed1f127df9ffb0",
          "withoutMetadata": "3b8250d74d9dd08b84a756c862e33bc949d5d39dc8223f9105bfa85d7b8b7cc5",
          "linkedWithoutMetadata": "3b8250d74d9dd08b84a756c862e33bc949d5d39dc8223f9105bfa85d7b8b7cc5"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)896_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "df3d792b674f26212337a825bdfbfe31f039c170696b79d2db223262a5b2aea6",
          "withoutMetadata": "aaed53ff1171e6232912c77dbea230fd9004857db262e83a3d8e84bd01398704",
          "linkedWithoutMetadata": "aaed53ff1171e6232912c77dbea230fd9004857db262e83a3d8e84bd01398704"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)896_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "52ab6bf7f71e335532933c97ea43b73e40a02fc020aa04861ca56edadf30e5a6",
          "withoutMetadata": "fb69d92ed62eb8b1ebad3555db4f777bce1053ee7546b6d706723e24cbcb7907",
          "linkedWithoutMetadata": "fb69d92ed62eb8b1ebad3555db4f777bce1053ee7546b6d706723e24cbcb7907"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,address)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)896_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyAdminContractV1": {
        "src": "contracts\\UnlonelyAdminContractV1.sol:4",
        "version": {
          "withMetadata": "d177ce3f9c5cea54171fd6d5b167c3fe0e4232866c4db42d15c8ee35c54acfad",
          "withoutMetadata": "b744ccb6b7acfff8d4d546ecd936b1e1a3ba7128df9baba67ff8419a1cdd7929",
          "linkedWithoutMetadata": "b744ccb6b7acfff8d4d546ecd936b1e1a3ba7128df9baba67ff8419a1cdd7929"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "addAdmin(address)",
          "removeAdmin(address)",
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyAdminContractV1",
            "src": "contracts\\UnlonelyAdminContractV1.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admins",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyAdminContractV1",
              "src": "contracts\\UnlonelyAdminContractV1.sol:5"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyAdminContractV1",
              "src": "contracts\\UnlonelyAdminContractV1.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IAdminContract": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:10",
        "version": {
          "withMetadata": "e7e67f26ab1372f027bb89db3794d30c56f614686c793c3db61bb7b44526e5e0",
          "withoutMetadata": "822b5ca74a7971d56fe041482990b04ac8a6eea5ad20483b8388fccc4c5710a8",
          "linkedWithoutMetadata": "822b5ca74a7971d56fe041482990b04ac8a6eea5ad20483b8388fccc4c5710a8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:28"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "adminContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IAdminContract)889",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:44"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_contract(IAdminContract)889": {
              "label": "contract IAdminContract"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)896_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)896_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyAdminContractV1": {
        "src": "contracts\\UnlonelyAdminContractV1.sol:4",
        "version": {
          "withMetadata": "d2d5eda3be27f53afe354018607bd13a63aab83b6f44c7b46c33a37651be34ac",
          "withoutMetadata": "99d4225f74ca5b72781340403d67a65d5d62827737e11cdfb35e04a498824d90",
          "linkedWithoutMetadata": "99d4225f74ca5b72781340403d67a65d5d62827737e11cdfb35e04a498824d90"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "addAdmin(address)",
          "removeAdmin(address)",
          "isAdmin(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyAdminContractV1",
            "src": "contracts\\UnlonelyAdminContractV1.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admins",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyAdminContractV1",
              "src": "contracts\\UnlonelyAdminContractV1.sol:5"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyAdminContractV1",
              "src": "contracts\\UnlonelyAdminContractV1.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "5cc5bad10306e8fd482092f7cb289d2278e28787ea795c7d5cf8933269541d1b",
          "withoutMetadata": "f9a3b13ad5b402e6d5a85cb3772e53c7a18b9a9ac140f07f9603af66ecd81a29",
          "linkedWithoutMetadata": "f9a3b13ad5b402e6d5a85cb3772e53c7a18b9a9ac140f07f9603af66ecd81a29"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:23"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:24"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:25"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)888_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "30d4ffadfe8742fb51778a9a9a02bb0f5396f295ee1888b25745023a202da771",
          "withoutMetadata": "b46af8692b8d42cdd3d541ae33feaf62cd16affaa5d2c7954649d6bf27c5f8dd",
          "linkedWithoutMetadata": "b46af8692b8d42cdd3d541ae33feaf62cd16affaa5d2c7954649d6bf27c5f8dd"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeInfo(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:23"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:24"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:25"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)888_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "a61f66c7d0def80ca73b33ef4c798e392ae1a96b619b8710daf8171b314e6daa",
          "withoutMetadata": "99732e2f214515066c5e32e008094626bf53969072fcaa3f8ac9563bc3704cd4",
          "linkedWithoutMetadata": "99732e2f214515066c5e32e008094626bf53969072fcaa3f8ac9563bc3704cd4"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:23"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:24"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:25"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)888_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "3c93dd9932f338eafd192c3cc345ec96da55ad589d1da797d2948551968e193d",
          "withoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982",
          "linkedWithoutMetadata": "d54f708e3117a6377de44b442c5416c9c1db905ead09fe2189b866e7dbf62982"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:58"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:24"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:25"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:26"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:27"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "d58633379462f6f0942e4cb5e725bca20d335524c59a16f833c0999ec471bf0f",
          "withoutMetadata": "b2cff6291f0755b2ae6ee58b672e49601bf1458fe2385fdec291ca92a5f22b80",
          "linkedWithoutMetadata": "b2cff6291f0755b2ae6ee58b672e49601bf1458fe2385fdec291ca92a5f22b80"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "increaseEndTimestampForTokens(uint256,address[])",
          "setMaxDuration(uint256)",
          "setPauseFactory(bool)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:23"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:24"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:25"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:45"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)888_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "741d6ec0f8a7427b8c0319a39b973dd0ab76bd48001ec5c4b1925de8ce8e129c",
          "withoutMetadata": "9fb2af270f27dd3de7437564c377c43a1124c9a38bb080c1320cf238263f79f1",
          "linkedWithoutMetadata": "9fb2af270f27dd3de7437564c377c43a1124c9a38bb080c1320cf238263f79f1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "increaseEndTimestamp(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "6fb8e466e2f5aba2ce159392642c2156ff45fe873fd86ae2b164b3c1b28a8541",
          "withoutMetadata": "b203664a943c7d16052e4e5073af27240fe18c6b9c45e413b3ad3d691493b04b",
          "linkedWithoutMetadata": "b203664a943c7d16052e4e5073af27240fe18c6b9c45e413b3ad3d691493b04b"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:30"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:33"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)888_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "ce0f0e482de9aa5eb01893284b4a78542769e9ca35575cb95010233f392bc994",
          "withoutMetadata": "d84a6061307d31e1a112b0e421bff288b63112f935264089171429b6a65c1246",
          "linkedWithoutMetadata": "d84a6061307d31e1a112b0e421bff288b63112f935264089171429b6a65c1246"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:65"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:29"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:30"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:33"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)888_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "576793f5c792beb757391210f2ee3c2bb1e7c63f2f438850586c81f85b29f9af",
          "withoutMetadata": "0eef5863e9924b7adcc1413bacdf0b2ab4179063f466f21754467d7d29b50891",
          "linkedWithoutMetadata": "0eef5863e9924b7adcc1413bacdf0b2ab4179063f466f21754467d7d29b50891"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:68"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:33"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:34"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:51"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:52"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)894_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)894_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "8c691e12d999bd9dde87884b7404648d8519ea7b5afcb93baa3aeea1d977d1d0",
          "withoutMetadata": "35a6afe556be79287a032b145cf258f68efa723c5ca04e5df9ed963deacfc964",
          "linkedWithoutMetadata": "35a6afe556be79287a032b145cf258f68efa723c5ca04e5df9ed963deacfc964"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:70"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:34"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)898_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:51"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:52"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)898_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)898_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "bef93138a2982b9282d525dd0dc86acfcbb7b198f61085f13f845259ebf8d2a0",
          "withoutMetadata": "125f6ea4a51a696b62b76386f624b9f30e96a55eb5f39ceaf4b5bd6eb8f7f279",
          "linkedWithoutMetadata": "125f6ea4a51a696b62b76386f624b9f30e96a55eb5f39ceaf4b5bd6eb8f7f279"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:70"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:34"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)898_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:51"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:52"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)898_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)898_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "4000f67df5b090eed5839fba48d0abc217874eb10d7417fb98560767c3204d6f",
          "withoutMetadata": "420225322a546135f67a0002ee82ec96bb8fac5c495938477bdd70959ec341f9",
          "linkedWithoutMetadata": "420225322a546135f67a0002ee82ec96bb8fac5c495938477bdd70959ec341f9"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "a04738b5c119b08bbaf33537bd5ffec6303a7dca233380c254ced7f2fe12b5b5",
          "withoutMetadata": "a8e531cf2c741b404f9676851fd68725da5900137988c854c7473947b73caeb5",
          "linkedWithoutMetadata": "a8e531cf2c741b404f9676851fd68725da5900137988c854c7473947b73caeb5"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "7cff2123fa2a8e023c816be71619dc33090196f74538bea68aba975a3d305199",
          "withoutMetadata": "3ec201ef7f366f7037296dd8cd2092a9cbda986d98efd3bae4cf2b68ddc34e14",
          "linkedWithoutMetadata": "3ec201ef7f366f7037296dd8cd2092a9cbda986d98efd3bae4cf2b68ddc34e14"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "0b619da031d6451dd2856baa1bea4b4c99fbaf63577fc93258520953573f8c13",
          "withoutMetadata": "2d46c954ff88ec2063c36411a7fa1dd5cdc573c7ce9ef1e6627ba5e1b2e00bd6",
          "linkedWithoutMetadata": "2d46c954ff88ec2063c36411a7fa1dd5cdc573c7ce9ef1e6627ba5e1b2e00bd6"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "dcc7a10afdad92af1499c28e1a414a731e0c13cbd5080f8c712071c13be8028e",
          "withoutMetadata": "8206f4691800a8466d9c2bffd895a9958c1f2f70d27c38067daae74631790106",
          "linkedWithoutMetadata": "8206f4691800a8466d9c2bffd895a9958c1f2f70d27c38067daae74631790106"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "f369c994ab9f1d8685a987efee4abcf3f127095e06e61562d791dc66d8b6175a",
          "withoutMetadata": "7414b7632a325b919f86d029ad2068f31f8167de9dd92f4d14b9822281156185",
          "linkedWithoutMetadata": "7414b7632a325b919f86d029ad2068f31f8167de9dd92f4d14b9822281156185"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeePercentages(address,uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "fdd4b7d06b3c4a343ac71896a64d7ccbfe89d4cfa9cd9dba4133207ebc86e011",
          "withoutMetadata": "e2b8b21b1cd88450319ac3b5934f986b0b8bb84e835d0ab9245c639c1d7e6826",
          "linkedWithoutMetadata": "e2b8b21b1cd88450319ac3b5934f986b0b8bb84e835d0ab9245c639c1d7e6826"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setFeePercentages(uint256,uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:73"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "d4a9aa0d807ca91f77eae1941d50b68e3209aad0a593f00078584c4cf12f4c1b",
          "withoutMetadata": "bab2edf7fbd29fbd2654cd023aa420da6796417ec77c8898db8178897e05e04c",
          "linkedWithoutMetadata": "bab2edf7fbd29fbd2654cd023aa420da6796417ec77c8898db8178897e05e04c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:74"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "b16bbfcc0554f2591861bab0ac5adaba72efe5dfb18c8aa7f5483c6b8108cc19",
          "withoutMetadata": "f3cdcdef4e679b484279c530f471db87253379ce91401675175e9558a3921597",
          "linkedWithoutMetadata": "f3cdcdef4e679b484279c530f471db87253379ce91401675175e9558a3921597"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:74"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "6bf8f0db9f0c3f76d2dbe5d7967cdbfce4f34b32c9d9abcc471d6943396e3dc5",
          "withoutMetadata": "e96a045d938b5043fc2bd8e81537f3c4b6a90f430d4ae5197edda449c318be54",
          "linkedWithoutMetadata": "e96a045d938b5043fc2bd8e81537f3c4b6a90f430d4ae5197edda449c318be54"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:74"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "58a9196dd892f5a5e0f360758eb97a94a0b6b7ef0d32b3df91e81db30be11b19",
          "withoutMetadata": "8a0f29320e39b5dd4067efe3da68386f8b226ba36023afb7fd0368400bfcadb1",
          "linkedWithoutMetadata": "8a0f29320e39b5dd4067efe3da68386f8b226ba36023afb7fd0368400bfcadb1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[],uint256[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:74"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "371afc29b29b5c9e7504828b4053232e2fe31c422be123f02aea0d821dfb3a92",
          "withoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a",
          "linkedWithoutMetadata": "80ac4ffcf8d6e3384d82cf96efcb1af89f03de6c916980d68d7750be7b56c94a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256,uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "4ba88ee045c7e6d9bde2550eaf7c96441825de420a392463564b66747ca88f72",
          "withoutMetadata": "03f9a8e21a66d0e687fd17357584994b4a44095321efe47ef6646d291b89d9d1",
          "linkedWithoutMetadata": "03f9a8e21a66d0e687fd17357584994b4a44095321efe47ef6646d291b89d9d1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:74"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "a857c40764c8efd36f6295677d67701d58fe74a1402a6c79f96c06b071b10001",
          "withoutMetadata": "d1cd21d35afad3eae58faa2c9322e59cbb928afa97fd3a13731eb56f62b9e3c3",
          "linkedWithoutMetadata": "d1cd21d35afad3eae58faa2c9322e59cbb928afa97fd3a13731eb56f62b9e3c3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "160093d8cb90a50012fdc23527009475f4f3133559a38d26cadc95ecd40437e0",
          "withoutMetadata": "91fa4a762bc8dac2adbc7f88f0307383537c0ff7c30f15d44b141584f5ab40d4",
          "linkedWithoutMetadata": "91fa4a762bc8dac2adbc7f88f0307383537c0ff7c30f15d44b141584f5ab40d4"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThreshold(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "setAdmin(address,bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:74"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "admins",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "7",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:57"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:58"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "a857c40764c8efd36f6295677d67701d58fe74a1402a6c79f96c06b071b10001",
          "withoutMetadata": "d1cd21d35afad3eae58faa2c9322e59cbb928afa97fd3a13731eb56f62b9e3c3",
          "linkedWithoutMetadata": "d1cd21d35afad3eae58faa2c9322e59cbb928afa97fd3a13731eb56f62b9e3c3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "d08480ee261c39f95ff6c80a7cd267bf908f4c84cf14977b96298a5b1e04cb04",
          "withoutMetadata": "e3807a0567990e21bd88b9c35e5004968ad9c3d3a46b24b54ceb76694215cc95",
          "linkedWithoutMetadata": "e3807a0567990e21bd88b9c35e5004968ad9c3d3a46b24b54ceb76694215cc95"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setTotalSupplyThreshold(uint256)",
          "setTotalSupplyThresholdForTokens(uint256,address[])",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:51"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:52"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:53"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:54"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:55"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)902_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)902_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "totalSupplyThreshold",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "bc7c57b897f2707aa79436300ac99460b5b24ebc8b0fdc786067e7569d9d27cd",
          "withoutMetadata": "b714e103d4bbdfd3a5a76c8d5f46cf7650e937672e42d733828d41969e5075f6",
          "linkedWithoutMetadata": "b714e103d4bbdfd3a5a76c8d5f46cf7650e937672e42d733828d41969e5075f6"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "updateTotalSupplyThreshold(uint256)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            },
            {
              "label": "totalSupplyThreshold",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:22"
            },
            {
              "label": "hasHitTotalSupplyThreshold",
              "offset": 0,
              "slot": "13",
              "type": "t_bool",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "3d11e8d621631efb3e2f52fb50b7a649b93ca4660466b93c02eee23e841df349",
          "withoutMetadata": "cff22b3e8bbeb33f0f11adaeaa8f0f4b74caa0bb9a250a5716f95ebdc153985b",
          "linkedWithoutMetadata": "cff22b3e8bbeb33f0f11adaeaa8f0f4b74caa0bb9a250a5716f95ebdc153985b"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "getTokenInfo(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:60"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "d90fe63eae07ead05af41b07e5d4a47028a0694da3e7c443a6c74ff85434791c",
          "withoutMetadata": "4b345c086cb6e1dbec58a8d231625578721efca0f9e23414c3af249c270377be",
          "linkedWithoutMetadata": "4b345c086cb6e1dbec58a8d231625578721efca0f9e23414c3af249c270377be"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "sendRemainingFundsToCreatorAfterTokenExpiration()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "getBalance()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:17"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:18"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:19"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:20"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "6836b7ba161bd3ff9da68887ab935a2a5ed156fef9ddc01aad594ef554af0508",
          "withoutMetadata": "f428ae399f984eaec148a561986e5e8154405024a5fc3d474851bd79f85cbfe5",
          "linkedWithoutMetadata": "f428ae399f984eaec148a561986e5e8154405024a5fc3d474851bd79f85cbfe5"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string,uint256)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "setMaxDuration(uint256)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:60"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:46"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:47"
            },
            {
              "label": "defaultProtocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:48"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:49"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:50"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "protocolFeeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "b462056a51448dea0431468cf286244d18125b9868b478a44f25cc136ebcc7db",
          "withoutMetadata": "811798ef36479ed0d085420d45c8574b9983c7bbb61d3c2e1a9771e5dbca6c7d",
          "linkedWithoutMetadata": "811798ef36479ed0d085420d45c8574b9983c7bbb61d3c2e1a9771e5dbca6c7d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "getBalance()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:13"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "70668c02ae9de1fb57da3e77b928fe8943fcb6d5f466f45be2344971c72f5f9f",
          "withoutMetadata": "203980fed0c1c36e1bf6b5ee61c6bf425d72711ed0ab08bbf111e197e980dd08",
          "linkedWithoutMetadata": "203980fed0c1c36e1bf6b5ee61c6bf425d72711ed0ab08bbf111e197e980dd08"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "setDuration(uint256)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:25"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:26"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:27"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:36"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:37"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:38"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:39"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)900_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(TokenInfo)900_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                },
                {
                  "label": "feeDestination",
                  "type": "t_address"
                },
                {
                  "label": "protocolFeePercent",
                  "type": "t_uint256"
                },
                {
                  "label": "streamerFeePercent",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "b462056a51448dea0431468cf286244d18125b9868b478a44f25cc136ebcc7db",
          "withoutMetadata": "811798ef36479ed0d085420d45c8574b9983c7bbb61d3c2e1a9771e5dbca6c7d",
          "linkedWithoutMetadata": "811798ef36479ed0d085420d45c8574b9983c7bbb61d3c2e1a9771e5dbca6c7d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "getBalance()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:13"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "e39701b2cceec1cb1cc2bae9c4e7bd0f558c245e75631392f9e29275013bfe8d",
          "withoutMetadata": "7a3e6b574c899e79ebd1431f7a83286ce2507ce35556809c334700b2e80d2aaf",
          "linkedWithoutMetadata": "7a3e6b574c899e79ebd1431f7a83286ce2507ce35556809c334700b2e80d2aaf"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "setDuration(uint256)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:20"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:21"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:22"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:33"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:34"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "b462056a51448dea0431468cf286244d18125b9868b478a44f25cc136ebcc7db",
          "withoutMetadata": "811798ef36479ed0d085420d45c8574b9983c7bbb61d3c2e1a9771e5dbca6c7d",
          "linkedWithoutMetadata": "811798ef36479ed0d085420d45c8574b9983c7bbb61d3c2e1a9771e5dbca6c7d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "getBalance()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:13"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "a8c3b1d9170cd57bf272f2f14396fd5826e68d5b164dfab635670ca78f2345bf",
          "withoutMetadata": "0559269f155c7f2b6811ba9db140d28bcaf35b07206a52771ac92d4e62078cc2",
          "linkedWithoutMetadata": "0559269f155c7f2b6811ba9db140d28bcaf35b07206a52771ac92d4e62078cc2"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "setDuration(uint256)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:20"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:21"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:22"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:33"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:34"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "b462056a51448dea0431468cf286244d18125b9868b478a44f25cc136ebcc7db",
          "withoutMetadata": "811798ef36479ed0d085420d45c8574b9983c7bbb61d3c2e1a9771e5dbca6c7d",
          "linkedWithoutMetadata": "811798ef36479ed0d085420d45c8574b9983c7bbb61d3c2e1a9771e5dbca6c7d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "getBalance()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:13"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "58288755402fed9f2008ce167fedf1ccc5394b33b37af492c3c83020de5cc890",
          "withoutMetadata": "35a32c926044682c9158013d8f16b58072d1b615e875a31c54c04b8bfa0daee5",
          "linkedWithoutMetadata": "35a32c926044682c9158013d8f16b58072d1b615e875a31c54c04b8bfa0daee5"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "setDuration(uint256)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:20"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:21"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:22"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:33"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:34"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "0333f72e3df01c3718a9e3f4ff3e6ee73c61ed85a241faf55c7797c34ad32a16",
          "withoutMetadata": "52a084b4200e52b5d495f273a88eb37e8dd1438f84643d0c283fe6cbfbe739b4",
          "linkedWithoutMetadata": "52a084b4200e52b5d495f273a88eb37e8dd1438f84643d0c283fe6cbfbe739b4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:13"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "5afeec2d9f05f7db8b7f00622a634784b073e768eedfe3cf20df55ba4d779453",
          "withoutMetadata": "af375f7769ecfd9cd5cd55175f690feaf42ecfee926bb312d6d7a31108d6ad73",
          "linkedWithoutMetadata": "af375f7769ecfd9cd5cd55175f690feaf42ecfee926bb312d6d7a31108d6ad73"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "setDuration(uint256)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:20"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:21"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:22"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:33"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:34"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "8aaab7e32a2462fbc9be4fc9f69596d3775cf70e6350cf8260556e2091482311",
          "withoutMetadata": "3ef6ba76e28536387a6f237e51c4ea123801fff6b6c043f4d6d6d020f7d04526",
          "linkedWithoutMetadata": "3ef6ba76e28536387a6f237e51c4ea123801fff6b6c043f4d6d6d020f7d04526"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\TempTokenV1.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:13"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:14"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "3399a4051379674f4941de959312e7f2d8b72a83f1eaf6b0a6a6d18fe5d44c1a",
          "withoutMetadata": "333ef04bda387e7397ad11b7e78994e673e018ccfa112b2d921d73791dfe5b75",
          "linkedWithoutMetadata": "333ef04bda387e7397ad11b7e78994e673e018ccfa112b2d921d73791dfe5b75"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "setDuration(uint256)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:20"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:21"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:22"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:33"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:34"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "e14e5264c3453e143bb6fa084949b9e6955099f605099d12990e2ddc4fbf2afa",
          "withoutMetadata": "ca9357d99008913a3f46469bdbe7460d5a5aac22350afad1104beee99d9ff7b2",
          "linkedWithoutMetadata": "ca9357d99008913a3f46469bdbe7460d5a5aac22350afad1104beee99d9ff7b2"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\TempTokenV1.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:13"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:14"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TempTokenFactoryV1": {
        "src": "contracts\\TempTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "3a87f550b48e096ee381595ac68dbc9df728b93102c4e772d438d2df630e62a5",
          "withoutMetadata": "abccc6232b7b503cf6a64856400d83149a898014761a413a27450a3d01495158",
          "linkedWithoutMetadata": "abccc6232b7b503cf6a64856400d83149a898014761a413a27450a3d01495158"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createTempToken(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "setDuration(uint256)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenFactoryV1",
            "src": "contracts\\TempTokenFactoryV1.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:20"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:21"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:22"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:31"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:32"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:33"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:34"
            },
            {
              "label": "duration",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TempTokenFactoryV1",
              "src": "contracts\\TempTokenFactoryV1.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(uint256 => struct TempTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct TempTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TempTokenV1": {
        "src": "contracts\\TempTokenV1.sol:8",
        "version": {
          "withMetadata": "31f844b99f4ccd09ae45df8333ecf7b42dad130bd24a6cc1aab624b0156bd0cd",
          "withoutMetadata": "fec76a5dd7f788c2333e6d3c770c5c7f97694132aab838e821e60da22e7b1699",
          "linkedWithoutMetadata": "fec76a5dd7f788c2333e6d3c770c5c7f97694132aab838e821e60da22e7b1699"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TempTokenV1",
            "src": "contracts\\TempTokenV1.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\TempTokenV1.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:13"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:14"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "TempTokenV1",
              "src": "contracts\\TempTokenV1.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EphemeralVibesTokenFactoryV1": {
        "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "8da24b934509f48ffec794bf99bc9a14fb1e52b6919113645a337d8feaa9aaa3",
          "withoutMetadata": "597fbfa5283202369d708e753ec1dc86341f16977a52cfbd7e53154046a9a778",
          "linkedWithoutMetadata": "597fbfa5283202369d708e753ec1dc86341f16977a52cfbd7e53154046a9a778"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createEphemeralVibesToken(string,string,uint256)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenFactoryV1",
            "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:14"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:15"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:16"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:18"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:19"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:20"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(uint256 => struct EphemeralVibesTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct EphemeralVibesTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EphemeralVibesTokenV1": {
        "src": "contracts\\EphemeralVibesTokenV1.sol:8",
        "version": {
          "withMetadata": "d9056684e8e401beac92fe00b1dfeb8cb51d0eea229cfe7cfe67b0b3c0e2ab2d",
          "withoutMetadata": "fec76a5dd7f788c2333e6d3c770c5c7f97694132aab838e821e60da22e7b1699",
          "linkedWithoutMetadata": "fec76a5dd7f788c2333e6d3c770c5c7f97694132aab838e821e60da22e7b1699"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenV1",
            "src": "contracts\\EphemeralVibesTokenV1.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\EphemeralVibesTokenV1.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:13"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:14"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EphemeralVibesTokenFactoryV1": {
        "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "13930ddff1708431780b6116212d7be0da89077f7db8bcbd0c15904e9a0fdbf4",
          "withoutMetadata": "6f2a19e7ff85dbbf012de26de00237c1a8966adf3d59053c792938030aa50991",
          "linkedWithoutMetadata": "6f2a19e7ff85dbbf012de26de00237c1a8966adf3d59053c792938030aa50991"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createEphemeralVibesToken(string,string,uint256)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "setPauseFactory(bool)",
          "getTokenInfo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenFactoryV1",
            "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:14"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:15"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:16"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:18"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:19"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:20"
            },
            {
              "label": "isPaused",
              "offset": 20,
              "slot": "6",
              "type": "t_bool",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(uint256 => struct EphemeralVibesTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct EphemeralVibesTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EphemeralVibesTokenV1": {
        "src": "contracts\\EphemeralVibesTokenV1.sol:8",
        "version": {
          "withMetadata": "d9056684e8e401beac92fe00b1dfeb8cb51d0eea229cfe7cfe67b0b3c0e2ab2d",
          "withoutMetadata": "fec76a5dd7f788c2333e6d3c770c5c7f97694132aab838e821e60da22e7b1699",
          "linkedWithoutMetadata": "fec76a5dd7f788c2333e6d3c770c5c7f97694132aab838e821e60da22e7b1699"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenV1",
            "src": "contracts\\EphemeralVibesTokenV1.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\EphemeralVibesTokenV1.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:13"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:14"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EphemeralVibesTokenFactoryV1": {
        "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "6fb0b2919b4a7e9c515651a16379e2920cb2b0b047c3db55f61823a778d3cc77",
          "withoutMetadata": "9c8bf846e2980a416a329e6051678d2cd122b733439e278cdfa1fa62ef46bc7e",
          "linkedWithoutMetadata": "9c8bf846e2980a416a329e6051678d2cd122b733439e278cdfa1fa62ef46bc7e"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createEphemeralVibesToken(string,string,uint256)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenFactoryV1",
            "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:14"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:15"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:16"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:18"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:19"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(uint256 => struct EphemeralVibesTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct EphemeralVibesTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "ownerAddress",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EphemeralVibesTokenV1": {
        "src": "contracts\\EphemeralVibesTokenV1.sol:8",
        "version": {
          "withMetadata": "d884263f9e8755db417fd7354cdc7eb2afbafdab9782ed45d3151bba7331b49a",
          "withoutMetadata": "3ef6ba76e28536387a6f237e51c4ea123801fff6b6c043f4d6d6d020f7d04526",
          "linkedWithoutMetadata": "3ef6ba76e28536387a6f237e51c4ea123801fff6b6c043f4d6d6d020f7d04526"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenV1",
            "src": "contracts\\EphemeralVibesTokenV1.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\EphemeralVibesTokenV1.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:13"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:14"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EphemeralVibesTokenFactoryV1": {
        "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "5a9f2e1a8e68e7978d3f67e82866c61513422c74ed2f9cb7b4605a198d939248",
          "withoutMetadata": "78b9923dde32cfe35cfb35ad6dc74b41170811934e8474d88006cc7a4719ae58",
          "linkedWithoutMetadata": "78b9923dde32cfe35cfb35ad6dc74b41170811934e8474d88006cc7a4719ae58"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createEphemeralVibesToken(string,string,uint256)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenFactoryV1",
            "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "numDeployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:13"
            },
            {
              "label": "deployedTokenIndices",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:14"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:15"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:17"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:18"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_struct(TokenInfo)888_storage)": {
              "label": "mapping(uint256 => struct EphemeralVibesTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)888_storage": {
              "label": "struct EphemeralVibesTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EphemeralVibesTokenV1": {
        "src": "contracts\\EphemeralVibesTokenV1.sol:8",
        "version": {
          "withMetadata": "d884263f9e8755db417fd7354cdc7eb2afbafdab9782ed45d3151bba7331b49a",
          "withoutMetadata": "3ef6ba76e28536387a6f237e51c4ea123801fff6b6c043f4d6d6d020f7d04526",
          "linkedWithoutMetadata": "3ef6ba76e28536387a6f237e51c4ea123801fff6b6c043f4d6d6d020f7d04526"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenV1",
            "src": "contracts\\EphemeralVibesTokenV1.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\EphemeralVibesTokenV1.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:13"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:14"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EphemeralVibesTokenFactoryV1": {
        "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "880428c46bf1cbe954c68c741eac4d2a3de3aaff74e7785d58f8326acffaf748",
          "withoutMetadata": "a5cd2d3331a80ef1c0a2ce2c642819d1c7ada9d24f575fa706a099a940a80cbe",
          "linkedWithoutMetadata": "a5cd2d3331a80ef1c0a2ce2c642819d1c7ada9d24f575fa706a099a940a80cbe"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createEphemeralVibesToken(string,string,uint256)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenFactoryV1",
            "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:13"
            },
            {
              "label": "deployedTokenInfos",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(TokenInfo)888_storage)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:14"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:16"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:17"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_struct(TokenInfo)888_storage)": {
              "label": "mapping(address => struct EphemeralVibesTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)888_storage": {
              "label": "struct EphemeralVibesTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EphemeralVibesTokenV1": {
        "src": "contracts\\EphemeralVibesTokenV1.sol:8",
        "version": {
          "withMetadata": "d884263f9e8755db417fd7354cdc7eb2afbafdab9782ed45d3151bba7331b49a",
          "withoutMetadata": "3ef6ba76e28536387a6f237e51c4ea123801fff6b6c043f4d6d6d020f7d04526",
          "linkedWithoutMetadata": "3ef6ba76e28536387a6f237e51c4ea123801fff6b6c043f4d6d6d020f7d04526"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256,address)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenV1",
            "src": "contracts\\EphemeralVibesTokenV1.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\EphemeralVibesTokenV1.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "factoryAddress",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:10"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:11"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:12"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:13"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:14"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EphemeralVibesTokenFactoryV1": {
        "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "2fda5679fe677c513bdedf0fccdbecffd4422afc2c5a867ca7cc58c3d49d1deb",
          "withoutMetadata": "26be84ac3d06e64262161dcca0de8b01a4d00d4cea8dd2358e9cfcfd9d66c719",
          "linkedWithoutMetadata": "26be84ac3d06e64262161dcca0de8b01a4d00d4cea8dd2358e9cfcfd9d66c719"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createEphemeralVibesToken(string,string,uint256)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenFactoryV1",
            "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "deployedTokenAddresses",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:13"
            },
            {
              "label": "deployedTokenInfos",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(TokenInfo)888_storage)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:14"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:16"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:17"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_struct(TokenInfo)888_storage)": {
              "label": "mapping(address => struct EphemeralVibesTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)888_storage": {
              "label": "struct EphemeralVibesTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EphemeralVibesTokenV1": {
        "src": "contracts\\EphemeralVibesTokenV1.sol:8",
        "version": {
          "withMetadata": "fb208fcf0e7b1c330ce325b0f1ec50294aa681a3f1a27c188229e755af1fcea8",
          "withoutMetadata": "f6147028d184287da127577455213c7db62cdf5429221278a20eedd278e6ebeb",
          "linkedWithoutMetadata": "f6147028d184287da127577455213c7db62cdf5429221278a20eedd278e6ebeb"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenV1",
            "src": "contracts\\EphemeralVibesTokenV1.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\EphemeralVibesTokenV1.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:9"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:10"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:11"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:12"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EphemeralVibesTokenFactoryV1": {
        "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:6",
        "version": {
          "withMetadata": "948893abb36fe09012310b93be018f8faf1b15a09fcf22471023c97bbbc439c5",
          "withoutMetadata": "5d0dd11f271975296d68651a49506898b8daac3507dad8640b5fb5f377a7c8ca",
          "linkedWithoutMetadata": "5d0dd11f271975296d68651a49506898b8daac3507dad8640b5fb5f377a7c8ca"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256)",
          "createEphemeralVibesToken(string,string,uint256)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenFactoryV1",
            "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "deployedTokens",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:14"
            },
            {
              "label": "deployedTokenInfos",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(TokenInfo)890_storage)",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:15"
            },
            {
              "label": "defaultProtocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:17"
            },
            {
              "label": "defaultStreamerFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:18"
            },
            {
              "label": "defaultFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "EphemeralVibesTokenFactoryV1",
              "src": "contracts\\EphemeralVibesTokenFactoryV1.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_mapping(t_address,t_struct(TokenInfo)890_storage)": {
              "label": "mapping(address => struct EphemeralVibesTokenFactoryV1.TokenInfo)"
            },
            "t_struct(TokenInfo)890_storage": {
              "label": "struct EphemeralVibesTokenFactoryV1.TokenInfo",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "owner",
                  "type": "t_address"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "EphemeralVibesTokenV1": {
        "src": "contracts\\EphemeralVibesTokenV1.sol:8",
        "version": {
          "withMetadata": "7a091d22bb1cd92863b8b63a28d6d9dd9c223a84075bae09c698d6a8247eefde",
          "withoutMetadata": "cd62aec89469880915d5b4c5f26e025615afaa0dfc2c994681a2c0995f1c44bc",
          "linkedWithoutMetadata": "cd62aec89469880915d5b4c5f26e025615afaa0dfc2c994681a2c0995f1c44bc"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address,uint256,uint256)",
          "mint(uint256)",
          "burn(uint256)",
          "drainFundsIntoMyWallet()",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "getIsActive()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "EphemeralVibesTokenV1",
            "src": "contracts\\EphemeralVibesTokenV1.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\EphemeralVibesTokenV1.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:9"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:10"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:11"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:12"
            },
            {
              "label": "endTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "EphemeralVibesTokenV1",
              "src": "contracts\\EphemeralVibesTokenV1.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VibesTokenV1": {
        "src": "contracts\\VibesTokenV1.sol:7",
        "version": {
          "withMetadata": "218b195ed787550baa4763f3bd1cb02f8ae809212429ec08982bb0b0ec6f6ce5",
          "withoutMetadata": "c4a6b879107c3bd6b4d1ad7c0aa3194fbc696ddfcc9144bb4c54f801c76ac4fd",
          "linkedWithoutMetadata": "c4a6b879107c3bd6b4d1ad7c0aa3194fbc696ddfcc9144bb4c54f801c76ac4fd"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "mint(uint256,address)",
          "burn(uint256,address)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VibesTokenV1",
            "src": "contracts\\VibesTokenV1.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\VibesTokenV1.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:8"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:9"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:10"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VibesTokenV1": {
        "src": "contracts\\VibesTokenV1.sol:7",
        "version": {
          "withMetadata": "574ecbb0b98b2416bd07c144cb2b05c9516ee543f32e985731578977d525ce6d",
          "withoutMetadata": "c5b6cc0d0a5190d7917ef9e34661498a06659409a3f2331f268657e5674ab661",
          "linkedWithoutMetadata": "c5b6cc0d0a5190d7917ef9e34661498a06659409a3f2331f268657e5674ab661"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "mint(uint256,address)",
          "burn(uint256,address)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VibesTokenV1",
            "src": "contracts\\VibesTokenV1.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "MAX_SUPPLY",
            "src": "contracts\\VibesTokenV1.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:8"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:9"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:10"
            },
            {
              "label": "MAX_SUPPLY",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VibesTokenV1": {
        "src": "contracts\\VibesTokenV1.sol:7",
        "version": {
          "withMetadata": "4fb6fcd48801c10fd0c626af7eaf7f2054d1a3c34df3a144e4bcc27f7b97677f",
          "withoutMetadata": "81a3b30a725ab5aebba45f611a0d59d5fffe27ed6718014178a92d30c1eb2583",
          "linkedWithoutMetadata": "81a3b30a725ab5aebba45f611a0d59d5fffe27ed6718014178a92d30c1eb2583"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "mint(uint256,address)",
          "burn(uint256,address)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VibesTokenV1",
            "src": "contracts\\VibesTokenV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:8"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:9"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VibesTokenV1": {
        "src": "contracts\\VibesTokenV1.sol:7",
        "version": {
          "withMetadata": "36bad209713d50295c480dcc5b93ea824708560505378fe55211f3396fd83173",
          "withoutMetadata": "7b6e4fa7a7192d9c660101788a3600edfec43fd3cd5d2645e473c9ed110e9968",
          "linkedWithoutMetadata": "7b6e4fa7a7192d9c660101788a3600edfec43fd3cd5d2645e473c9ed110e9968"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "mint(uint256,address)",
          "burn(uint256,address)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()",
          "sumOfPriceToNTokens(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VibesTokenV1",
            "src": "contracts\\VibesTokenV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:8"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:9"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VibesTokenV1": {
        "src": "contracts\\VibesTokenV1.sol:7",
        "version": {
          "withMetadata": "1e548d85ab49f770aa9736733f6342151a573882aafa6577cc602c68dd21d5b0",
          "withoutMetadata": "50fd9e32c7b5a8e9bd6c2a64c61ddf8d81b6873996f8f2e2806b00de28c84b56",
          "linkedWithoutMetadata": "50fd9e32c7b5a8e9bd6c2a64c61ddf8d81b6873996f8f2e2806b00de28c84b56"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "mint(uint256,address)",
          "burn(uint256,address)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VibesTokenV1",
            "src": "contracts\\VibesTokenV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:8"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:9"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VibesTokenV1": {
        "src": "contracts\\VibesTokenV1.sol:7",
        "version": {
          "withMetadata": "e50d229f7a92a0f6d7e98f7b7a3ac777e30d01a0f7d400a426295539fa57af0f",
          "withoutMetadata": "d942ff9952ab1e534be59c41ee7db04cbf08f9a3179c7eef93b0b2a194c90eb0",
          "linkedWithoutMetadata": "d942ff9952ab1e534be59c41ee7db04cbf08f9a3179c7eef93b0b2a194c90eb0"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "mint(uint256,address)",
          "burn(uint256,address)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VibesTokenV1",
            "src": "contracts\\VibesTokenV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:8"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:9"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VibesTokenV1": {
        "src": "contracts\\VibesTokenV1.sol:7",
        "version": {
          "withMetadata": "30b175e38d60c8bf749ff351501cd1bc23c5378e7bb2f60be3b6aa12ba7daf05",
          "withoutMetadata": "d942ff9952ab1e534be59c41ee7db04cbf08f9a3179c7eef93b0b2a194c90eb0",
          "linkedWithoutMetadata": "d942ff9952ab1e534be59c41ee7db04cbf08f9a3179c7eef93b0b2a194c90eb0"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setStreamerFeePercent(uint256)",
          "mint(uint256,address)",
          "burn(uint256,address)",
          "mintCost(uint256)",
          "mintCostAfterFees(uint256)",
          "burnProceeds(uint256)",
          "burnProceedsAfterFees(uint256)",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VibesTokenV1",
            "src": "contracts\\VibesTokenV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:8"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:9"
            },
            {
              "label": "streamerFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "VibesTokenV1",
              "src": "contracts\\VibesTokenV1.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySideBetsV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySideBetsV1.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySideBetsV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetsV1.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySideBetsV1": {
        "src": "contracts\\UnlonelySideBetsV1.sol:81",
        "version": {
          "withMetadata": "b3f500dba8c0b50f7966cf0c2bb36e30faf5298a65d0481cb46d58dabc931e39",
          "withoutMetadata": "21ca888fa7ab07164d2868ced472045ca61070fb855cd1c98f0be2235e91b4c6",
          "linkedWithoutMetadata": "21ca888fa7ab07164d2868ced472045ca61070fb855cd1c98f0be2235e91b4c6"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getOpeningWagerAfterFee(uint256)",
          "getExistingWager(address,uint256,uint8)",
          "getExistingWagerAfterFee(address,uint256,uint8)",
          "isSideBetAvailable(address,uint256,uint8)",
          "openSideBet(address,uint256,uint8,uint256,uint256)",
          "acceptSideBet(address,uint256,uint8)",
          "pickWinner(address,uint256,uint8,address)",
          "closeSideBet(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySideBetsV1",
            "src": "contracts\\UnlonelySideBetsV1.sol:130"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetsV1.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:84"
            },
            {
              "label": "sideBets",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(SideBet)207_storage)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:106"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:109"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_bytes32,t_struct(SideBet)207_storage)": {
              "label": "mapping(bytes32 => struct UnlonelySideBetsV1.SideBet)"
            },
            "t_struct(SideBet)207_storage": {
              "label": "struct UnlonelySideBetsV1.SideBet",
              "members": [
                {
                  "label": "initiator",
                  "type": "t_address"
                },
                {
                  "label": "opponent",
                  "type": "t_address"
                },
                {
                  "label": "wagerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint256"
                },
                {
                  "label": "isWinnerPicked",
                  "type": "t_bool"
                },
                {
                  "label": "winner",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySideBetsV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySideBetsV1.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySideBetsV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetsV1.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySideBetsV1": {
        "src": "contracts\\UnlonelySideBetsV1.sol:81",
        "version": {
          "withMetadata": "86be5cfa6cd80250782265a85165bae0bd495950999d17c95873a3c833419c90",
          "withoutMetadata": "87a8f36300efbc8576a9a51cab31198c6e8d6f3cdea29f371c3ef1e906bb7388",
          "linkedWithoutMetadata": "87a8f36300efbc8576a9a51cab31198c6e8d6f3cdea29f371c3ef1e906bb7388"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getOpeningWagerAfterFee(uint256)",
          "getExistingWager(address,uint256,uint8)",
          "getExistingWagerAfterFee(address,uint256,uint8)",
          "isSideBetAvailable(address,uint256,uint8)",
          "openSideBet(address,uint256,uint8,uint256,uint256)",
          "acceptSideBet(address,uint256,uint8)",
          "pickWinner(address,uint256,uint8,address)",
          "closeSideBet(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySideBetsV1",
            "src": "contracts\\UnlonelySideBetsV1.sol:130"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetsV1.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:84"
            },
            {
              "label": "sideBets",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(SideBet)207_storage)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:106"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:109"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_bytes32,t_struct(SideBet)207_storage)": {
              "label": "mapping(bytes32 => struct UnlonelySideBetsV1.SideBet)"
            },
            "t_struct(SideBet)207_storage": {
              "label": "struct UnlonelySideBetsV1.SideBet",
              "members": [
                {
                  "label": "initiator",
                  "type": "t_address"
                },
                {
                  "label": "opponent",
                  "type": "t_address"
                },
                {
                  "label": "wagerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint256"
                },
                {
                  "label": "isWinnerPicked",
                  "type": "t_bool"
                },
                {
                  "label": "winner",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySideBetsV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySideBetsV1.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySideBetsV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetsV1.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySideBetsV1": {
        "src": "contracts\\UnlonelySideBetsV1.sol:81",
        "version": {
          "withMetadata": "9fcb16036c134d2cf6368ec2aa6714b2a776d6d9369ddefb04b8b091eb579d8d",
          "withoutMetadata": "80058411995f807e9999393f4142df0f959b5d9e0e3436902b4d74dca490a249",
          "linkedWithoutMetadata": "80058411995f807e9999393f4142df0f959b5d9e0e3436902b4d74dca490a249"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getOpeningWagerAfterFee(uint256)",
          "getExistingWager(address,uint256,uint8)",
          "getExistingWagerAfterFee(address,uint256,uint8)",
          "isSideBetAvailable(address,uint256,uint8)",
          "openSideBet(address,uint256,uint8,uint256,uint256)",
          "acceptSideBet(address,uint256,uint8)",
          "pickWinner(address,uint256,uint8,address)",
          "closeSideBet(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySideBetsV1",
            "src": "contracts\\UnlonelySideBetsV1.sol:130"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetsV1.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:84"
            },
            {
              "label": "sideBets",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(SideBet)207_storage)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:106"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:109"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_bytes32,t_struct(SideBet)207_storage)": {
              "label": "mapping(bytes32 => struct UnlonelySideBetsV1.SideBet)"
            },
            "t_struct(SideBet)207_storage": {
              "label": "struct UnlonelySideBetsV1.SideBet",
              "members": [
                {
                  "label": "initiator",
                  "type": "t_address"
                },
                {
                  "label": "opponent",
                  "type": "t_address"
                },
                {
                  "label": "wagerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint256"
                },
                {
                  "label": "isWinnerPicked",
                  "type": "t_bool"
                },
                {
                  "label": "winner",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySideBetsV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySideBetsV1.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySideBetsV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetsV1.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySideBetsV1": {
        "src": "contracts\\UnlonelySideBetsV1.sol:81",
        "version": {
          "withMetadata": "f51813d87ee70a639085850165bafee0830cc1417c0fc383dccb04a1faafae9e",
          "withoutMetadata": "ce4e5aca65c4e9dad76b0a0666fa3481da4b51bd4b5ce095d875293553fedb60",
          "linkedWithoutMetadata": "ce4e5aca65c4e9dad76b0a0666fa3481da4b51bd4b5ce095d875293553fedb60"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openSideBet(address,uint256,uint8,uint256,uint256)",
          "acceptSideBet(address,uint256,uint8)",
          "pickWinner(address,uint256,uint8,address)",
          "closeSideBet(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySideBetsV1",
            "src": "contracts\\UnlonelySideBetsV1.sol:130"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetsV1.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:84"
            },
            {
              "label": "sideBetStructs",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(SideBet)207_storage)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:106"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetsV1.sol:109"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_bytes32,t_struct(SideBet)207_storage)": {
              "label": "mapping(bytes32 => struct UnlonelySideBetsV1.SideBet)"
            },
            "t_struct(SideBet)207_storage": {
              "label": "struct UnlonelySideBetsV1.SideBet",
              "members": [
                {
                  "label": "initiator",
                  "type": "t_address"
                },
                {
                  "label": "opponent",
                  "type": "t_address"
                },
                {
                  "label": "wagerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint256"
                },
                {
                  "label": "isWinnerPicked",
                  "type": "t_bool"
                },
                {
                  "label": "winner",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySideBetV1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySideBetV1.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySideBetV1.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetV1.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySideBetsV1": {
        "src": "contracts\\UnlonelySideBetV1.sol:81",
        "version": {
          "withMetadata": "27dbb4cf6c59f8a6af45e7a2e32dedefb9a7c1598d6ce38cabf44dd380fb8f5a",
          "withoutMetadata": "ce4e5aca65c4e9dad76b0a0666fa3481da4b51bd4b5ce095d875293553fedb60",
          "linkedWithoutMetadata": "ce4e5aca65c4e9dad76b0a0666fa3481da4b51bd4b5ce095d875293553fedb60"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openSideBet(address,uint256,uint8,uint256,uint256)",
          "acceptSideBet(address,uint256,uint8)",
          "pickWinner(address,uint256,uint8,address)",
          "closeSideBet(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySideBetsV1",
            "src": "contracts\\UnlonelySideBetV1.sol:130"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySideBetV1.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetV1.sol:84"
            },
            {
              "label": "sideBetStructs",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(SideBet)207_storage)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetV1.sol:106"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySideBetsV1",
              "src": "contracts\\UnlonelySideBetV1.sol:109"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_bytes32,t_struct(SideBet)207_storage)": {
              "label": "mapping(bytes32 => struct UnlonelySideBetsV1.SideBet)"
            },
            "t_struct(SideBet)207_storage": {
              "label": "struct UnlonelySideBetsV1.SideBet",
              "members": [
                {
                  "label": "initiator",
                  "type": "t_address"
                },
                {
                  "label": "opponent",
                  "type": "t_address"
                },
                {
                  "label": "wagerAmount",
                  "type": "t_uint256"
                },
                {
                  "label": "expirationTime",
                  "type": "t_uint256"
                },
                {
                  "label": "isWinnerPicked",
                  "type": "t_bool"
                },
                {
                  "label": "winner",
                  "type": "t_address"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "5d51092851f3fb5e4e9188b199f7ced3c664ba9abd8e055ddba36f232cf7902e",
          "withoutMetadata": "ef0c9a1c6bae6237d93325a37cdf89b27cac71906938fc2f9f373641eaf8b3fd",
          "linkedWithoutMetadata": "ef0c9a1c6bae6237d93325a37cdf89b27cac71906938fc2f9f373641eaf8b3fd"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:146"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "priceSlope",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:96"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:117"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:120"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:124"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:125"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:128"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "ba42753a1626560ae70214fc51194cb705fca61b17b3593804ed55c6c05483e7",
          "withoutMetadata": "d1d5d2e0014ef0b176d9a65e586900a72e704a0feb6bfa69d4e2157ae29fa39c",
          "linkedWithoutMetadata": "d1d5d2e0014ef0b176d9a65e586900a72e704a0feb6bfa69d4e2157ae29fa39c"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getSupply(address,uint256,uint8)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament(address,uint256,uint8)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:137"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:109"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:111"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:112"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:113"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:114"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:119"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:120"
            },
            {
              "label": "winningBadges",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:121"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:122"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "a91d4ce0ba6f558c0a1a1789744bbbe85bbdc3fdf9a14b0b82229dd34d6c3adb",
          "withoutMetadata": "5b3f11a3589afe4eb494f5313eeefba7dac2ebc4e2bece70b9534e1252ba97c8",
          "linkedWithoutMetadata": "5b3f11a3589afe4eb494f5313eeefba7dac2ebc4e2bece70b9534e1252ba97c8"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:146"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "priceSlope",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:96"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:117"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:120"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:124"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:125"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:128"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "4c8e598a645fe1c58d29a400baf350856b677a565ae8b5db5c3c43cb6685efe7",
          "withoutMetadata": "d406a10ea61103ae80a49a149e754d5f8b18e0f7542e839b8b58d4c35e394865",
          "linkedWithoutMetadata": "d406a10ea61103ae80a49a149e754d5f8b18e0f7542e839b8b58d4c35e394865"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getSupply(address,uint256,uint8)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:136"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)1771_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:109"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:111"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:112"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:113"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:114"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:119"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:120"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:121"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)1771_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "829b10943f67c64a99c6c6e172a37e48f05a46dc96bc7d7203366ff64edc047a",
          "withoutMetadata": "edfd2a651c8e103d5ea31e570a332d1c8e88ee095e51e718f344b728065f228c",
          "linkedWithoutMetadata": "edfd2a651c8e103d5ea31e570a332d1c8e88ee095e51e718f344b728065f228c"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getSupply(address,uint256,uint8)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:136"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:109"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:111"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:112"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:113"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:114"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:119"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:120"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:121"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "ec0e6ef09ce05731cb33da98c76231ab40b98266ba419b244b1395c3c666cd2d",
          "withoutMetadata": "724c5f2a0d44d07c6b15ebea8351c31e99891c5e9d1d5da72779e1a6bd3db551",
          "linkedWithoutMetadata": "724c5f2a0d44d07c6b15ebea8351c31e99891c5e9d1d5da72779e1a6bd3db551"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "setPriceSlope(uint256)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:146"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "priceSlope",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:96"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:117"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:120"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:124"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:125"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:128"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:131"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "f9198e26b9c5ac02f9cb16f3c1f5fc2a6b363ee43bbea70c57df2839f44d27d3",
          "withoutMetadata": "a2699fcdee7cc1d1179fcb9641c66f77ea218f7159cfac177d5b5a6b50e28f27",
          "linkedWithoutMetadata": "a2699fcdee7cc1d1179fcb9641c66f77ea218f7159cfac177d5b5a6b50e28f27"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getSupply(address,uint256,uint8)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:136"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)1767_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:109"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:111"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:112"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:113"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:114"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:119"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:120"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:121"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)1767_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "cc77f09e978e3fea06470b9e13c609aedd789d7073046910c6df4525ea73e0da",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "089f2240cf711b3b7144a5fcf4deb02b91dcaaf32ff23704b0a1ca23e3045e72",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "32e999c939e42560adcce9569a9e6ebdc60f4ffc00e13eaa52eaccbbaaa443e3",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "8541625d87eea02b0dfd42a77729959aa2bfb8e4fba2aefe33cd43a43333c4b1",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "293405fae636ff5a910a99dea257531486ed4a8dfafba32e89de51316aa941f2",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "3a475d16691125176ce95ed4f5840cf26385ab911f3a93e3e29ef167b8b879dc",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "338fdc31d1855e6e9e78151463dda70aea5835dcdd73aab6505d7ca96c1f896b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts\\BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "c69e533b2054194dcebe5b6e02623b22b4e9969e5975fedfecb7a7911a70feac",
          "withoutMetadata": "a7a5712b26577065835950b3d42187ed84c8cbb9244f251f38ac49404474cb57",
          "linkedWithoutMetadata": "a7a5712b26577065835950b3d42187ed84c8cbb9244f251f38ac49404474cb57"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts\\BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "be28f18221c6bacf95eb1e275ee2faf5d70551ad09f12d63c47f513eb40e5b93",
          "withoutMetadata": "908f850e8ae90b549caf9075a2cf5be35d7615ec81379bb43ca16dc0cc69266a",
          "linkedWithoutMetadata": "908f850e8ae90b549caf9075a2cf5be35d7615ec81379bb43ca16dc0cc69266a"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)831)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)831)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "70dc0633819e7d8cad02bcc6b05a9d247cd40193ea904624dd84fd60ddda7fb5",
          "withoutMetadata": "a79f7aa53d69777e281af8fc29cfc70e3a207f1d95e0f1b8fd3c6b623851ead6",
          "linkedWithoutMetadata": "a79f7aa53d69777e281af8fc29cfc70e3a207f1d95e0f1b8fd3c6b623851ead6"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2762_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2762_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "89794efdf70be3b8fb47e76fecbe0f5f231d732bb31aea00409b6b407c31fa8f",
          "withoutMetadata": "68053e223a5daeb0185701b4d68239ea8cc9f0016b5428eba7a2762a274e5b36",
          "linkedWithoutMetadata": "68053e223a5daeb0185701b4d68239ea8cc9f0016b5428eba7a2762a274e5b36"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "a9a9094ff58b4b8bef90636e0c59c01d8e5c7da5cfff708a569aec244943d0df",
          "withoutMetadata": "e081b8858aa16ef2673bd6448a0741741005d378798a7e84603eb684ea36ef0a",
          "linkedWithoutMetadata": "e081b8858aa16ef2673bd6448a0741741005d378798a7e84603eb684ea36ef0a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:145"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:116"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:117"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:119"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:120"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:122"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:124"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:127"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:130"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "d670f8981fb2d52576dd866f76a4a607c2f793c89030ed47a1db870fe54079e2",
          "withoutMetadata": "bb4827ac2c0e50025c87e2809d6025c9fd6920abc80c089b7738bebec792a30d",
          "linkedWithoutMetadata": "bb4827ac2c0e50025c87e2809d6025c9fd6920abc80c089b7738bebec792a30d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:136"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)7475_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:109"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:111"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:112"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:113"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:114"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:119"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:120"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:121"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)7475_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "e7874c2f7767daaf9950070e66361d68ebaa49f8d13ce637d2677ea3ad6d7004",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "41ad0f7fb1384629558c3fce552c946c84745a83f9be48a9c88aba10147df6e6",
          "withoutMetadata": "bb4827ac2c0e50025c87e2809d6025c9fd6920abc80c089b7738bebec792a30d",
          "linkedWithoutMetadata": "bb4827ac2c0e50025c87e2809d6025c9fd6920abc80c089b7738bebec792a30d"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:136"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:109"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:111"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:112"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:113"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:114"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:119"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:120"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:121"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "570eb480bf6c20b75b3e31e5d237974270428b49418c3044df9306f42a134bf1",
          "withoutMetadata": "8d477410ea416c290c302ae30df8352f2e1821563afabd099d4b173780ac88b1",
          "linkedWithoutMetadata": "8d477410ea416c290c302ae30df8352f2e1821563afabd099d4b173780ac88b1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:136"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:109"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:111"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:112"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:113"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:114"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:119"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:120"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:121"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "1a5f038ace5c6be8d6bf63d73736ff0a1ecad8a3d5995f934f1b50f9a70386ff",
          "withoutMetadata": "e081b8858aa16ef2673bd6448a0741741005d378798a7e84603eb684ea36ef0a",
          "linkedWithoutMetadata": "e081b8858aa16ef2673bd6448a0741741005d378798a7e84603eb684ea36ef0a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:145"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:116"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:117"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:119"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:120"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:122"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:124"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:127"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:130"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "494538193f75f6cecb778a75c5e1fb2eefe023441bcbfcfe565ecb6ae724c297",
          "withoutMetadata": "35fc2f64e93d6e54fa04e20891c09e3230cc97292d6e6cd67bb2b967227d7491",
          "linkedWithoutMetadata": "35fc2f64e93d6e54fa04e20891c09e3230cc97292d6e6cd67bb2b967227d7491"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:144"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:115"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:116"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:119"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:122"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:126"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "6c7285320ba05c5b8fdefbb060130902b4c773b2dd7e3f6bc88d6df704d34e46",
          "withoutMetadata": "4dd1c7456c02b14ad69fc8b0f0f3de8eda49ad20ae219c7ce2d22a1cb7f0e9dd",
          "linkedWithoutMetadata": "4dd1c7456c02b14ad69fc8b0f0f3de8eda49ad20ae219c7ce2d22a1cb7f0e9dd"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:122"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:96"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:98"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:105"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "e8c94dd698b8cae9a3fac51a7bf17c82e5aa61f9cd70895bb68b80698334acc6",
          "withoutMetadata": "e78aac89ce7910bd1b72aaedffcb9c017a1de206518dbd74df49168c458d6c52",
          "linkedWithoutMetadata": "e78aac89ce7910bd1b72aaedffcb9c017a1de206518dbd74df49168c458d6c52"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "endTournamentWithWinnerPayout(address,uint256,uint8)",
          "stopWinnerPayout()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:122"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:96"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:98"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:105"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "bdbe78b622531e82c532d5cf0f1de0dfa90555389e90eb303fcdcf0cf63ac56e",
          "withoutMetadata": "94ec4635a48be14cbf47ffdde3cd6bfe6e95210f9f40ec36142274495f68fc72",
          "linkedWithoutMetadata": "94ec4635a48be14cbf47ffdde3cd6bfe6e95210f9f40ec36142274495f68fc72"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament(uint256)",
          "endTournamentWithWinnerPayout(address,uint256,uint8)",
          "stopWinnerPayout()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:122"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:96"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:98"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:105"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "2af41549c75bbd2126a35257c9664d5a59c5e096c88dde1eaa78be1fb7d1af36",
          "withoutMetadata": "e8b0f18c9a084ee1e4cceb412cb1a62b98a302cbe727c4dfdbaf3ba7049333a4",
          "linkedWithoutMetadata": "e8b0f18c9a084ee1e4cceb412cb1a62b98a302cbe727c4dfdbaf3ba7049333a4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout(address)",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "6d2a202ccaf1e3f312efcbaf433a5e5a49b9f2f0a5aa3243ef60a1617caa99e0",
          "withoutMetadata": "544bb2e6bdb0ca141108b5822db59ec74bb1bddf4474d080c2cb5e42c4cd0f6f",
          "linkedWithoutMetadata": "544bb2e6bdb0ca141108b5822db59ec74bb1bddf4474d080c2cb5e42c4cd0f6f"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "489038cd6cb9872e854a9656905e2c3b484b32413aed429eea4f500e1c5b9a4e",
          "withoutMetadata": "95259f56cc21e5b8fedd22b8f9e7cba5a4263e961925239a1fa3c516607ccd14",
          "linkedWithoutMetadata": "95259f56cc21e5b8fedd22b8f9e7cba5a4263e961925239a1fa3c516607ccd14"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "4b7fdbd223b535819dbaf045b5ed7d606269508a3c6c4ecf46a541c3114ec379",
          "withoutMetadata": "0fef65a0e82a20b555265d58e0b9c19fbd2628ea09387f36c1015ceb9369a6f9",
          "linkedWithoutMetadata": "0fef65a0e82a20b555265d58e0b9c19fbd2628ea09387f36c1015ceb9369a6f9"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "0918f807db3ecc11dfac1edda5e06d4d1578c65b01182d78fabb766574fa7592",
          "withoutMetadata": "7f8efef9b3781fe19c73629252166ff3d9a8fc797f9d9be744c9ba616bf6aa81",
          "linkedWithoutMetadata": "7f8efef9b3781fe19c73629252166ff3d9a8fc797f9d9be744c9ba616bf6aa81"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "04505f464441822ad07028544708eefb76ae27490970a4391c82fcf90b89d854",
          "withoutMetadata": "550140cd1dff34efc331002f9398c81e5f9dded10e29b120b372b50c57bc33c8",
          "linkedWithoutMetadata": "550140cd1dff34efc331002f9398c81e5f9dded10e29b120b372b50c57bc33c8"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:144"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:115"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:116"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:119"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:122"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:126"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "f00c6b4f4976de6d0b1cd0f296223728e6e27ae02097be5a00f322fb3dbf1377",
          "withoutMetadata": "d0f3db736b1e6b8a6a31557fbeaa9e95f088d12640b91d1f23339bdf012076ca",
          "linkedWithoutMetadata": "d0f3db736b1e6b8a6a31557fbeaa9e95f088d12640b91d1f23339bdf012076ca"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)1810_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)1810_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "ccecc24e2357388181325bd9f845b807a2e74b25eea47792bf497bee076aff5a",
          "withoutMetadata": "954a1a86d69a9e8fffce4c3dcf2a2e084288e34f48f31672ea01965d565095d0",
          "linkedWithoutMetadata": "954a1a86d69a9e8fffce4c3dcf2a2e084288e34f48f31672ea01965d565095d0"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVotes(address,uint256,uint8,uint256)",
          "sellVotes(address,uint256,uint8,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:145"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:115"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:116"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:119"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:122"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:126"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "9eb97d655c50a585d4bf991a201e3ae3d9e19ce96027514a7024d566a531946f",
          "withoutMetadata": "6b35eb6cd9ca8c913b5bb4667e75b184592841b4ff034c4052c5a459bf3cd48e",
          "linkedWithoutMetadata": "6b35eb6cd9ca8c913b5bb4667e75b184592841b4ff034c4052c5a459bf3cd48e"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "generateKey(address,uint256)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256)",
          "claimTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint256)",
          "getSellPrice(address,uint256,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint256)",
          "getSellPriceAfterFee(address,uint256,uint256)",
          "buyVIPBadge(address,uint256,uint256)",
          "sellVIPBadge(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:109"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)1876_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:91"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:95"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:96"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)1876_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "9aee44a5a49f92f453622140eb19b5b2ba0987cf8a0c388946f48fa056ff7611",
          "withoutMetadata": "7b67482b690184dbdb8dcd4f783639dc6c113f774759330ffe719c383a35ead3",
          "linkedWithoutMetadata": "7b67482b690184dbdb8dcd4f783639dc6c113f774759330ffe719c383a35ead3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "addVerifier(address)",
          "removeVerifier(address)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "endTournament(bytes32)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVotes(address,uint256,uint8,uint256)",
          "sellVotes(address,uint256,uint8,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:169"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)203_storage",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:103"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:105"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:106"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:107"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:108"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:128"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:131"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:132"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:135"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:136"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:138"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:139"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:140"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:143"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:146"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)203_storage": {
              "label": "struct UnlonelySharesV2.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "05c105f8d3e59b6b6ec9efd6a6015db3569a38bec88fa722f490cd8625dc3136",
          "withoutMetadata": "d20552c15105398128567ce300c745a1764efc5f700e3a439dbc2342322a6840",
          "linkedWithoutMetadata": "d20552c15105398128567ce300c745a1764efc5f700e3a439dbc2342322a6840"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "addVerifier(address)",
          "removeVerifier(address)",
          "generateKey(address,uint256,uint8)",
          "createTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "endTournament(bytes32)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVotes(address,uint256,uint8,uint256)",
          "sellVotes(address,uint256,uint8,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:166"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)201_storage",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:102"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:104"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:105"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:106"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:107"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:126"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:127"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:130"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:133"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:134"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:136"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:137"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:140"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:143"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:144"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)201_storage": {
              "label": "struct UnlonelySharesV2.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "3946af1160045709496def65de8026e7b8f410e678cfe4fef7f8a8ff89acf33f",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "f08966fed95fb9d3015ae305bb5df7bab60b686e3a26011fcd8239213cc2bece",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "bf51ccc2f3cad3d841481b9f0cf39f28e6739b54ed13872bc48cebbb1957fbfc",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1ec92c92590820ad202eee3ea068133ff5575df59f8418627d3a081207f3e341",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "066ddf034e2f67877ec67e6e3101d840fecfe597909d6fb0aa49807437ca7e50",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "05ea5943f9471cff1d7ead80379fa842d6a5781f42ed46be39c343215a663157",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "46296e0d868e05997345c05f9f1e6549149bfb189bfae7b70033c19b1ad86c4d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts\\BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "2d6d3df55bca38f11901fc16c33fd99f4fb5d4faa788597b2719b7b650d57223",
          "withoutMetadata": "a7a5712b26577065835950b3d42187ed84c8cbb9244f251f38ac49404474cb57",
          "linkedWithoutMetadata": "a7a5712b26577065835950b3d42187ed84c8cbb9244f251f38ac49404474cb57"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts\\BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "12c4f14377bee53959545b660896032645bae20b85eb8bab03e4740eb216bfe9",
          "withoutMetadata": "908f850e8ae90b549caf9075a2cf5be35d7615ec81379bb43ca16dc0cc69266a",
          "linkedWithoutMetadata": "908f850e8ae90b549caf9075a2cf5be35d7615ec81379bb43ca16dc0cc69266a"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)831)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)831)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "7dc671a4b07e3f549dc3b9ba2d2ce691f829b64d979e03fc3f01a6b3943bae20",
          "withoutMetadata": "a79f7aa53d69777e281af8fc29cfc70e3a207f1d95e0f1b8fd3c6b623851ead6",
          "linkedWithoutMetadata": "a79f7aa53d69777e281af8fc29cfc70e3a207f1d95e0f1b8fd3c6b623851ead6"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2762_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2762_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "fdb9cb011ce50717a4c23b55f5f61db82c040ff68e633eda21d6249509f78cd1",
          "withoutMetadata": "68053e223a5daeb0185701b4d68239ea8cc9f0016b5428eba7a2762a274e5b36",
          "linkedWithoutMetadata": "68053e223a5daeb0185701b4d68239ea8cc9f0016b5428eba7a2762a274e5b36"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:82",
        "version": {
          "withMetadata": "6a1449d0130cb4a27f94af024074e55934915d0a9b84734b0c49b1f48b611998",
          "withoutMetadata": "d20552c15105398128567ce300c745a1764efc5f700e3a439dbc2342322a6840",
          "linkedWithoutMetadata": "d20552c15105398128567ce300c745a1764efc5f700e3a439dbc2342322a6840"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "addVerifier(address)",
          "removeVerifier(address)",
          "generateKey(address,uint256,uint8)",
          "createTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "endTournament(bytes32)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVotes(address,uint256,uint8,uint256)",
          "sellVotes(address,uint256,uint8,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:167"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)5856_storage",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:103"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:105"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:106"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:107"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:108"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:127"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:128"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:130"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:131"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:134"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:135"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:137"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:138"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:141"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:144"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:145"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)5856_storage": {
              "label": "struct UnlonelySharesV2.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "8f5557ade4ca365f9d14b497ff06aa53d50371c8845668b26ef05b16156c673d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "9a5730956c4cb8012de86e3a8b744d0083b716b2576ada862f5b28c07ff56089",
          "withoutMetadata": "8b971cea53bb1a022be0c11c534ce8641e88a2d2ca72fccb94848187adf1232a",
          "linkedWithoutMetadata": "8b971cea53bb1a022be0c11c534ce8641e88a2d2ca72fccb94848187adf1232a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "969690c84c8d998152c4224dc882735ce11d26fcf48822dbacc67a235947c490",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:8",
        "version": {
          "withMetadata": "9e57d1979688e1eabbdffccb93b061763ed3f4bd8d95b028992843fc5e453a11",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:11"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:15"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "f21ffd8fa584040a7dae3962eb4097f5a699661ba9a42eeda573b553da34ca92",
          "withoutMetadata": "0231f45c879c7387812d082f7859fc7f5071d7f873fb5b8d9038f792f37e7080",
          "linkedWithoutMetadata": "0231f45c879c7387812d082f7859fc7f5071d7f873fb5b8d9038f792f37e7080"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelySharesV1.sol:8",
        "version": {
          "withMetadata": "fb4643c444f2ecc1968814e89cd7ad29b770eb79dc9e2bbdeeaedcc500e6558d",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelySharesV1.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:11"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:12"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:13"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:15"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:7",
        "version": {
          "withMetadata": "897a80adae63b6a4470e871df168aae0733aaf981644ccb1a78e8cec4db6389f",
          "withoutMetadata": "ef505d50dce3d0f4864cedc78f1d19cecec79eb1ce7f0b4ef1dde76e642e5780",
          "linkedWithoutMetadata": "ef505d50dce3d0f4864cedc78f1d19cecec79eb1ce7f0b4ef1dde76e642e5780"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:10"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:11"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "f21ffd8fa584040a7dae3962eb4097f5a699661ba9a42eeda573b553da34ca92",
          "withoutMetadata": "0231f45c879c7387812d082f7859fc7f5071d7f873fb5b8d9038f792f37e7080",
          "linkedWithoutMetadata": "0231f45c879c7387812d082f7859fc7f5071d7f873fb5b8d9038f792f37e7080"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "c411b3b1bb06b4bf39586833837dd0af210186c6e35ec23f1fbf3237456fa7ff",
          "withoutMetadata": "5c7ad2bfc5aaeb6901b87d109b8d567141ab97b8729cb7b9d1bfede24aafc98a",
          "linkedWithoutMetadata": "5c7ad2bfc5aaeb6901b87d109b8d567141ab97b8729cb7b9d1bfede24aafc98a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "926103b373e49cb7d58daee04198a1290317466ecc383771e44393c68784f413",
          "withoutMetadata": "a37a77a69afd6cc0fbeb0f72f5dc2ea99135b0e3b445f771e5a8acb7e189e4cd",
          "linkedWithoutMetadata": "a37a77a69afd6cc0fbeb0f72f5dc2ea99135b0e3b445f771e5a8acb7e189e4cd"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEvent(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:113"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "yayShareHolders",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "nayShareHolders",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:102"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "ababe0eecb48affefeea31d82a876dc93a9727500d8f037bbfa73264f0cdbf41",
          "withoutMetadata": "20a535057bb00462ddc3d8e4ac38bd032eb1624410a190384e403f45cb25d3e1",
          "linkedWithoutMetadata": "20a535057bb00462ddc3d8e4ac38bd032eb1624410a190384e403f45cb25d3e1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closePoolIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "01dd463f13c5d2e4d8ada040e54d975cb04b25743bbb09341e1dfcc3858175c4",
          "withoutMetadata": "7d860fd046144bd585588fdd12ad3ac5a8a2565a8e0be976bd9378834e5d5b7a",
          "linkedWithoutMetadata": "7d860fd046144bd585588fdd12ad3ac5a8a2565a8e0be976bd9378834e5d5b7a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeVerifiedPool(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "036efd44fe678fc07de746f4375075abb8020e3e4e3cd39769c2f4c3573592cb",
          "withoutMetadata": "f6c0036656b95a539f5b4894a3e5b273d14d69e09d0242f9a87769c94764421a",
          "linkedWithoutMetadata": "f6c0036656b95a539f5b4894a3e5b273d14d69e09d0242f9a87769c94764421a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeVerifiedPool(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "2d7ca1bf28e7805a2040ef23f8489bb4423e66e825b15cd582a7091444393e58",
          "withoutMetadata": "8691be82451421ced9dd222265423db9f2be91986ba57cfb1ae1089084ab814d",
          "linkedWithoutMetadata": "8691be82451421ced9dd222265423db9f2be91986ba57cfb1ae1089084ab814d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "87bc786c190aa44beae64516d04c388070610bdf71557fc3e7276b7c8c5c6b77",
          "withoutMetadata": "8b975ea504f5a5c4f86b22bbfef514c667dda4a32bd3447d39bb17bd15aabb5d",
          "linkedWithoutMetadata": "8b975ea504f5a5c4f86b22bbfef514c667dda4a32bd3447d39bb17bd15aabb5d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "c7bd6a8d459d017182e4fdc156185401a799cc0b5fdef6a117c1161af1e77e69",
          "withoutMetadata": "22b17f2add1773f2c975f6a9539cc43b7aebc105e50822ffb5f6b901f615082f",
          "linkedWithoutMetadata": "22b17f2add1773f2c975f6a9539cc43b7aebc105e50822ffb5f6b901f615082f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "3f4ac78fc1d653407c781db067cddee8e5e7086f638dc99afd722f9d7c839d45",
          "withoutMetadata": "955d9abdfb291942a1042aa8ec653bccf369d3556b6d6f3de36216065599b90d",
          "linkedWithoutMetadata": "955d9abdfb291942a1042aa8ec653bccf369d3556b6d6f3de36216065599b90d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "c1e7441ec076ee59333e99e6bbd0515fb18db52acef9ba6bc9bd28b823328f7e",
          "withoutMetadata": "b14837ffc13215f4cf15ad2602d81bf8a120a2e99f714c97f867c546fee6ee7d",
          "linkedWithoutMetadata": "b14837ffc13215f4cf15ad2602d81bf8a120a2e99f714c97f867c546fee6ee7d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "5e26986bb87e4a807d2b2088017a3b1cff59f42db56e5d5c2b442dabd070c431",
          "withoutMetadata": "62c1a1953b796292a79e9e950a4998c2fc8dbec398ee719254812428c423d1fb",
          "linkedWithoutMetadata": "62c1a1953b796292a79e9e950a4998c2fc8dbec398ee719254812428c423d1fb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "500960f6b1795382ab8eaf67cb7249552e1d7ebe2269239ccd1e6da9189b7762",
          "withoutMetadata": "82ae02f3804d3006dd83d16d0f95cf923e5b9ea30998dfda6fc97816f85f8143",
          "linkedWithoutMetadata": "82ae02f3804d3006dd83d16d0f95cf923e5b9ea30998dfda6fc97816f85f8143"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "d39fef0b5e0985f48cd68ff69341bb48dfdee88f03ec461d1e659a2e0482417f",
          "withoutMetadata": "d91c0a7adf82af0abe0a0c731f3bdbc9a2397dacf32b8e88afffe7bbfd39b979",
          "linkedWithoutMetadata": "d91c0a7adf82af0abe0a0c731f3bdbc9a2397dacf32b8e88afffe7bbfd39b979"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "c4391ee6e7b89fef2055445930662691298a032063432b32dd545d42ef77e96c",
          "withoutMetadata": "16badd7054f220e3ed1d6b76f2f0c3d30f439136695ad912d831f2d2853f399c",
          "linkedWithoutMetadata": "16badd7054f220e3ed1d6b76f2f0c3d30f439136695ad912d831f2d2853f399c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "efd4a4f2204e4e082394ed7093fa4445783fa22a77a5e35f10b78c86ceefdf64",
          "withoutMetadata": "b1199aef42d2763f69ca1377fd42ef04678c347a29b14b3b6bcdb6e8dc832f58",
          "linkedWithoutMetadata": "b1199aef42d2763f69ca1377fd42ef04678c347a29b14b3b6bcdb6e8dc832f58"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "d466230d33cb5c2d520a5d0ac5c58e4aee7610d0fa49118fa6a9bca2ad2121a8",
          "withoutMetadata": "d10622a630eb9c8190166b5375f8634956f78c741981437c00cff25d34217637",
          "linkedWithoutMetadata": "d10622a630eb9c8190166b5375f8634956f78c741981437c00cff25d34217637"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "3b44e12da0da082b6838cfdbb3341c92b4f52442e4efe4a3986efb5d4096f4ed",
          "withoutMetadata": "57ac4d3bb32a14cb16d1d8689f36b4b79c3e81436cddfb659d2b93b48faabbe8",
          "linkedWithoutMetadata": "57ac4d3bb32a14cb16d1d8689f36b4b79c3e81436cddfb659d2b93b48faabbe8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "e8d47aae7db78221dc47e78ba269ff1eb95a648125f58227cf2b632c881a50f8",
          "withoutMetadata": "5e5e7fd1ac3e2de7b227c8050ebd556382a3f6b84fa2a55bc246a8da19305adf",
          "linkedWithoutMetadata": "5e5e7fd1ac3e2de7b227c8050ebd556382a3f6b84fa2a55bc246a8da19305adf"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:45",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:116",
        "version": {
          "withMetadata": "dc39a651e943e6396b753162658bc91b4b13fe47fcd20ac745ee28581a946deb",
          "withoutMetadata": "57c3427fe8735bf31eb5086fca8b5d0b618b8508570de8bfec0238236416e766",
          "linkedWithoutMetadata": "57c3427fe8735bf31eb5086fca8b5d0b618b8508570de8bfec0238236416e766"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(address,uint256,bool,bool)",
          "getHolderSharesBalance(address,address,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:146"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:46"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:117"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:118"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:119"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:127"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:128"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:131"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:132"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:134"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:135"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:136"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:139"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:47",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "b252818a1fc5adf256b24e0945d5efac8bc9502573857d134848dde3feea3e91",
          "withoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc",
          "linkedWithoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "67faaf5c5e9ea273d54d23c38ba720edf103d73bda6fc0bae7971cb6e4a600c0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "53fbe396a5d2f5ebbee487918a8437f8a90561167f888f3f2e2f20e9022ff5d9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "c37d1538cbe4754fff0d598564c477cb41dff94a11a24e851931e93fa77bde97",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts\\BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "02f135a42bffff18b1f5243144b94436d935993f7de6da35e838cd37a1340da1",
          "withoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428",
          "linkedWithoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts\\BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "969690c84c8d998152c4224dc882735ce11d26fcf48822dbacc67a235947c490",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)777)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)777)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "029b9fd4a2674ebff314080ebd298080273a6f5398703579706fa775f3dce0f2",
          "withoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d",
          "linkedWithoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2708_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:118",
        "version": {
          "withMetadata": "60573078c0f9dea1c814391b261bf4abd49e86a448942984360eef91ec962102",
          "withoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1",
          "linkedWithoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(uint256,uint256)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:150"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:48"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:121"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:122"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:123"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:131"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:132"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:135"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:136"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:138"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:139"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:140"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/UnlonelySharesV1.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/UnlonelySharesV1.sol:47",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/UnlonelySharesV1.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelySharesV1.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts/UnlonelySharesV1.sol:118",
        "version": {
          "withMetadata": "087299c9a8b475c492061850a9366aa6cde6935d0ce6eff32ebecc6934d7fc7f",
          "withoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1",
          "linkedWithoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(uint256,uint256)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts/UnlonelySharesV1.sol:150"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelySharesV1.sol:48"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:121"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:122"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:123"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:131"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:132"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:135"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:136"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:138"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:139"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:140"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/UnlonelyShareContract.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/UnlonelyShareContract.sol:47",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/UnlonelyShareContract.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelyShareContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts/UnlonelyShareContract.sol:118",
        "version": {
          "withMetadata": "528c7516846f9d99b2fc4593705aa9b327e5f4ec75d027816806d5a36d1f849a",
          "withoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1",
          "linkedWithoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(uint256,uint256)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts/UnlonelyShareContract.sol:150"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelyShareContract.sol:48"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:121"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:122"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:123"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:131"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:132"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:135"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:136"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:138"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:139"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:140"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "contracts/UnlonelyShareContract.sol:48",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/UnlonelyShareContract.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelyShareContract.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b252818a1fc5adf256b24e0945d5efac8bc9502573857d134848dde3feea3e91",
          "withoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc",
          "linkedWithoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/UnlonelyShareContract.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "67faaf5c5e9ea273d54d23c38ba720edf103d73bda6fc0bae7971cb6e4a600c0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "53fbe396a5d2f5ebbee487918a8437f8a90561167f888f3f2e2f20e9022ff5d9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "c37d1538cbe4754fff0d598564c477cb41dff94a11a24e851931e93fa77bde97",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts/BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "b9ba89be3c6db3d8caf62fa586633d8364475061de8846a42018288561fb5688",
          "withoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428",
          "linkedWithoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts/BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts/UnlonelyShareContract.sol:122",
        "version": {
          "withMetadata": "db07a8f39c0457e6e14a848fac8e9da4f1b3ae34403199ff96efd8d580716acf",
          "withoutMetadata": "9736a43e16f77f9f775b4ed58a412e18217f8c6b670771a1a5fbf124b0c84569",
          "linkedWithoutMetadata": "9736a43e16f77f9f775b4ed58a412e18217f8c6b670771a1a5fbf124b0c84569"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelyShareContract.sol:49"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:123"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:124"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:125"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:131"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:132"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:136"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:137"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts/UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "f3a1ac3396131fe20e6d7a04e302023782844ab4e4a43d8db035211cbc77cc85",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts/UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)777)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)777)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts/UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "a93f8b7233b7032ba126e286964bb28ee6ded2b6dbd9d370bdb864c2c27016e8",
          "withoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d",
          "linkedWithoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts/UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2708_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts/UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "b252818a1fc5adf256b24e0945d5efac8bc9502573857d134848dde3feea3e91",
          "withoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc",
          "linkedWithoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "67faaf5c5e9ea273d54d23c38ba720edf103d73bda6fc0bae7971cb6e4a600c0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "53fbe396a5d2f5ebbee487918a8437f8a90561167f888f3f2e2f20e9022ff5d9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "c37d1538cbe4754fff0d598564c477cb41dff94a11a24e851931e93fa77bde97",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "969690c84c8d998152c4224dc882735ce11d26fcf48822dbacc67a235947c490",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "029b9fd4a2674ebff314080ebd298080273a6f5398703579706fa775f3dce0f2",
          "withoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d",
          "linkedWithoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2595_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2595_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "969690c84c8d998152c4224dc882735ce11d26fcf48822dbacc67a235947c490",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "b252818a1fc5adf256b24e0945d5efac8bc9502573857d134848dde3feea3e91",
          "withoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc",
          "linkedWithoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)777)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "67faaf5c5e9ea273d54d23c38ba720edf103d73bda6fc0bae7971cb6e4a600c0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "53fbe396a5d2f5ebbee487918a8437f8a90561167f888f3f2e2f20e9022ff5d9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "c37d1538cbe4754fff0d598564c477cb41dff94a11a24e851931e93fa77bde97",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts\\BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "02f135a42bffff18b1f5243144b94436d935993f7de6da35e838cd37a1340da1",
          "withoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428",
          "linkedWithoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts\\BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContract": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "99adebb7a0375dc43730f264761bf8a9756326c87bf0fda631edba72583a5dc9",
          "withoutMetadata": "dc375b509709f0a73f735c123e1a06fa7a3f7bfd12f171a1a70ae4f1bafb716f",
          "linkedWithoutMetadata": "dc375b509709f0a73f735c123e1a06fa7a3f7bfd12f171a1a70ae4f1bafb716f"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrice(address,uint256)",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContract",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)777)",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)777)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "029b9fd4a2674ebff314080ebd298080273a6f5398703579706fa775f3dce0f2",
          "withoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d",
          "linkedWithoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2708_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}