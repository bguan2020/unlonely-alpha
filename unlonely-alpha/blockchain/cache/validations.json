{
  "version": "3.2",
  "log": [
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "570eb480bf6c20b75b3e31e5d237974270428b49418c3044df9306f42a134bf1",
          "withoutMetadata": "8d477410ea416c290c302ae30df8352f2e1821563afabd099d4b173780ac88b1",
          "linkedWithoutMetadata": "8d477410ea416c290c302ae30df8352f2e1821563afabd099d4b173780ac88b1"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:136"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:109"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:111"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:112"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:113"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:114"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:119"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:120"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:121"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "1a5f038ace5c6be8d6bf63d73736ff0a1ecad8a3d5995f934f1b50f9a70386ff",
          "withoutMetadata": "e081b8858aa16ef2673bd6448a0741741005d378798a7e84603eb684ea36ef0a",
          "linkedWithoutMetadata": "e081b8858aa16ef2673bd6448a0741741005d378798a7e84603eb684ea36ef0a"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:145"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:116"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:117"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:119"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:120"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:122"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:124"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:127"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:130"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "494538193f75f6cecb778a75c5e1fb2eefe023441bcbfcfe565ecb6ae724c297",
          "withoutMetadata": "35fc2f64e93d6e54fa04e20891c09e3230cc97292d6e6cd67bb2b967227d7491",
          "linkedWithoutMetadata": "35fc2f64e93d6e54fa04e20891c09e3230cc97292d6e6cd67bb2b967227d7491"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:144"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:115"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:116"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:119"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:122"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:126"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "6c7285320ba05c5b8fdefbb060130902b4c773b2dd7e3f6bc88d6df704d34e46",
          "withoutMetadata": "4dd1c7456c02b14ad69fc8b0f0f3de8eda49ad20ae219c7ce2d22a1cb7f0e9dd",
          "linkedWithoutMetadata": "4dd1c7456c02b14ad69fc8b0f0f3de8eda49ad20ae219c7ce2d22a1cb7f0e9dd"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "endTournament()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:122"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:96"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:98"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:105"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "e8c94dd698b8cae9a3fac51a7bf17c82e5aa61f9cd70895bb68b80698334acc6",
          "withoutMetadata": "e78aac89ce7910bd1b72aaedffcb9c017a1de206518dbd74df49168c458d6c52",
          "linkedWithoutMetadata": "e78aac89ce7910bd1b72aaedffcb9c017a1de206518dbd74df49168c458d6c52"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament()",
          "endTournamentWithWinnerPayout(address,uint256,uint8)",
          "stopWinnerPayout()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:122"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:96"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:98"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:105"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "bdbe78b622531e82c532d5cf0f1de0dfa90555389e90eb303fcdcf0cf63ac56e",
          "withoutMetadata": "94ec4635a48be14cbf47ffdde3cd6bfe6e95210f9f40ec36142274495f68fc72",
          "linkedWithoutMetadata": "94ec4635a48be14cbf47ffdde3cd6bfe6e95210f9f40ec36142274495f68fc72"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "getTournamentPayout(address)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "startTournament(uint256)",
          "endTournamentWithWinnerPayout(address,uint256,uint8)",
          "stopWinnerPayout()",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "claimTournamentPayout()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:122"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "tournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)200_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:96"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:98"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:105"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)200_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isPayoutClaimable",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "2af41549c75bbd2126a35257c9664d5a59c5e096c88dde1eaa78be1fb7d1af36",
          "withoutMetadata": "e8b0f18c9a084ee1e4cceb412cb1a62b98a302cbe727c4dfdbaf3ba7049333a4",
          "linkedWithoutMetadata": "e8b0f18c9a084ee1e4cceb412cb1a62b98a302cbe727c4dfdbaf3ba7049333a4"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout(address)",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "6d2a202ccaf1e3f312efcbaf433a5e5a49b9f2f0a5aa3243ef60a1617caa99e0",
          "withoutMetadata": "544bb2e6bdb0ca141108b5822db59ec74bb1bddf4474d080c2cb5e42c4cd0f6f",
          "linkedWithoutMetadata": "544bb2e6bdb0ca141108b5822db59ec74bb1bddf4474d080c2cb5e42c4cd0f6f"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "489038cd6cb9872e854a9656905e2c3b484b32413aed429eea4f500e1c5b9a4e",
          "withoutMetadata": "95259f56cc21e5b8fedd22b8f9e7cba5a4263e961925239a1fa3c516607ccd14",
          "linkedWithoutMetadata": "95259f56cc21e5b8fedd22b8f9e7cba5a4263e961925239a1fa3c516607ccd14"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "4b7fdbd223b535819dbaf045b5ed7d606269508a3c6c4ecf46a541c3114ec379",
          "withoutMetadata": "0fef65a0e82a20b555265d58e0b9c19fbd2628ea09387f36c1015ceb9369a6f9",
          "linkedWithoutMetadata": "0fef65a0e82a20b555265d58e0b9c19fbd2628ea09387f36c1015ceb9369a6f9"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "setTournamentCreator(address,bool)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "0918f807db3ecc11dfac1edda5e06d4d1578c65b01182d78fabb766574fa7592",
          "withoutMetadata": "7f8efef9b3781fe19c73629252166ff3d9a8fc797f9d9be744c9ba616bf6aa81",
          "linkedWithoutMetadata": "7f8efef9b3781fe19c73629252166ff3d9a8fc797f9d9be744c9ba616bf6aa81"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "getTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)202_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)202_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "04505f464441822ad07028544708eefb76ae27490970a4391c82fcf90b89d854",
          "withoutMetadata": "550140cd1dff34efc331002f9398c81e5f9dded10e29b120b372b50c57bc33c8",
          "linkedWithoutMetadata": "550140cd1dff34efc331002f9398c81e5f9dded10e29b120b372b50c57bc33c8"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,bool,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,bool,uint256)",
          "getSellPrice(address,uint256,uint8,bool,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,bool,uint256)",
          "buyVotes(address,uint256,uint8,bool,uint256)",
          "sellVotes(address,uint256,uint8,bool,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:144"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:115"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:116"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:119"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:122"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:126"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "f00c6b4f4976de6d0b1cd0f296223728e6e27ae02097be5a00f322fb3dbf1377",
          "withoutMetadata": "d0f3db736b1e6b8a6a31557fbeaa9e95f088d12640b91d1f23339bdf012076ca",
          "linkedWithoutMetadata": "d0f3db736b1e6b8a6a31557fbeaa9e95f088d12640b91d1f23339bdf012076ca"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:123"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)1810_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:97"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:99"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:106"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:107"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)1810_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelyTournament.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelyTournament.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelyTournament.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "ccecc24e2357388181325bd9f845b807a2e74b25eea47792bf497bee076aff5a",
          "withoutMetadata": "954a1a86d69a9e8fffce4c3dcf2a2e084288e34f48f31672ea01965d565095d0",
          "linkedWithoutMetadata": "954a1a86d69a9e8fffce4c3dcf2a2e084288e34f48f31672ea01965d565095d0"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setVerifier(address,bool)",
          "generateKey(address,uint256,uint8)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVotes(address,uint256,uint8,uint256)",
          "sellVotes(address,uint256,uint8,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:145"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:95"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:115"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:116"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:118"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:119"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:121"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:122"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:123"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:126"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyTournament": {
        "src": "contracts\\UnlonelyTournament.sol:81",
        "version": {
          "withMetadata": "9eb97d655c50a585d4bf991a201e3ae3d9e19ce96027514a7024d566a531946f",
          "withoutMetadata": "6b35eb6cd9ca8c913b5bb4667e75b184592841b4ff034c4052c5a459bf3cd48e",
          "linkedWithoutMetadata": "6b35eb6cd9ca8c913b5bb4667e75b184592841b4ff034c4052c5a459bf3cd48e"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "generateKey(address,uint256)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256)",
          "claimTournamentPayout()",
          "endTournament()",
          "getHolderBalance(address,uint256,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint256)",
          "getSellPrice(address,uint256,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint256)",
          "getSellPriceAfterFee(address,uint256,uint256)",
          "buyVIPBadge(address,uint256,uint256)",
          "sellVIPBadge(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyTournament",
            "src": "contracts\\UnlonelyTournament.sol:109"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelyTournament.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)1876_storage",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:91"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:93"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:94"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:95"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:96"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:100"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:101"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelyTournament",
              "src": "contracts\\UnlonelyTournament.sol:102"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)1876_storage": {
              "label": "struct UnlonelyTournament.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "9aee44a5a49f92f453622140eb19b5b2ba0987cf8a0c388946f48fa056ff7611",
          "withoutMetadata": "7b67482b690184dbdb8dcd4f783639dc6c113f774759330ffe719c383a35ead3",
          "linkedWithoutMetadata": "7b67482b690184dbdb8dcd4f783639dc6c113f774759330ffe719c383a35ead3"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "addVerifier(address)",
          "removeVerifier(address)",
          "generateKey(address,uint256,uint8)",
          "createTournament(uint256)",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "endTournament(bytes32)",
          "openEvent(address,uint256,uint8,uint256)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVotes(address,uint256,uint8,uint256)",
          "sellVotes(address,uint256,uint8,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:169"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)203_storage",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:103"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:105"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:106"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:107"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:108"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:128"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:131"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:132"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:135"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:136"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:138"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:139"
            },
            {
              "label": "eventEndTimestamp",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:140"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:143"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:146"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:147"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)203_storage": {
              "label": "struct UnlonelySharesV2.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                },
                {
                  "label": "endTimestamp",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:81",
        "version": {
          "withMetadata": "05c105f8d3e59b6b6ec9efd6a6015db3569a38bec88fa722f490cd8625dc3136",
          "withoutMetadata": "d20552c15105398128567ce300c745a1764efc5f700e3a439dbc2342322a6840",
          "linkedWithoutMetadata": "d20552c15105398128567ce300c745a1764efc5f700e3a439dbc2342322a6840"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "addVerifier(address)",
          "removeVerifier(address)",
          "generateKey(address,uint256,uint8)",
          "createTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "endTournament(bytes32)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVotes(address,uint256,uint8,uint256)",
          "sellVotes(address,uint256,uint8,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:166"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)201_storage",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:102"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:104"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:105"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:106"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:107"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:126"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:127"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:129"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:130"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:133"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:134"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:136"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:137"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:140"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:143"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:144"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)201_storage": {
              "label": "struct UnlonelySharesV2.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "contracts\\UnlonelySharesV2.sol:16",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV2.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "3946af1160045709496def65de8026e7b8f410e678cfe4fef7f8a8ff89acf33f",
          "withoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400",
          "linkedWithoutMetadata": "7a4b8526f9f3098ae88cbb0401a58cc50d73e8a24aa61e1e06d1cc8c626e7400"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "f08966fed95fb9d3015ae305bb5df7bab60b686e3a26011fcd8239213cc2bece",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "bf51ccc2f3cad3d841481b9f0cf39f28e6739b54ed13872bc48cebbb1957fbfc",
          "withoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6",
          "linkedWithoutMetadata": "712c5de2453d9a059577308fbee96d4e3fccbf7e1161bec8a8f3bc841b99ecb6"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1ec92c92590820ad202eee3ea068133ff5575df59f8418627d3a081207f3e341",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV2.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "066ddf034e2f67877ec67e6e3101d840fecfe597909d6fb0aa49807437ca7e50",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "05ea5943f9471cff1d7ead80379fa842d6a5781f42ed46be39c343215a663157",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "46296e0d868e05997345c05f9f1e6549149bfb189bfae7b70033c19b1ad86c4d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts\\BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "2d6d3df55bca38f11901fc16c33fd99f4fb5d4faa788597b2719b7b650d57223",
          "withoutMetadata": "a7a5712b26577065835950b3d42187ed84c8cbb9244f251f38ac49404474cb57",
          "linkedWithoutMetadata": "a7a5712b26577065835950b3d42187ed84c8cbb9244f251f38ac49404474cb57"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts\\BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "12c4f14377bee53959545b660896032645bae20b85eb8bab03e4740eb216bfe9",
          "withoutMetadata": "908f850e8ae90b549caf9075a2cf5be35d7615ec81379bb43ca16dc0cc69266a",
          "linkedWithoutMetadata": "908f850e8ae90b549caf9075a2cf5be35d7615ec81379bb43ca16dc0cc69266a"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)831)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)831": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)831)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "7dc671a4b07e3f549dc3b9ba2d2ce691f829b64d979e03fc3f01a6b3943bae20",
          "withoutMetadata": "a79f7aa53d69777e281af8fc29cfc70e3a207f1d95e0f1b8fd3c6b623851ead6",
          "linkedWithoutMetadata": "a79f7aa53d69777e281af8fc29cfc70e3a207f1d95e0f1b8fd3c6b623851ead6"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2762_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2762_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "fdb9cb011ce50717a4c23b55f5f61db82c040ff68e633eda21d6249509f78cd1",
          "withoutMetadata": "68053e223a5daeb0185701b4d68239ea8cc9f0016b5428eba7a2762a274e5b36",
          "linkedWithoutMetadata": "68053e223a5daeb0185701b4d68239ea8cc9f0016b5428eba7a2762a274e5b36"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV2": {
        "src": "contracts\\UnlonelySharesV2.sol:82",
        "version": {
          "withMetadata": "6a1449d0130cb4a27f94af024074e55934915d0a9b84734b0c49b1f48b611998",
          "withoutMetadata": "d20552c15105398128567ce300c745a1764efc5f700e3a439dbc2342322a6840",
          "linkedWithoutMetadata": "d20552c15105398128567ce300c745a1764efc5f700e3a439dbc2342322a6840"
        },
        "inherit": [
          "ReentrancyGuard",
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setTournamentFeePercent(uint256)",
          "addVerifier(address)",
          "removeVerifier(address)",
          "generateKey(address,uint256,uint8)",
          "createTournament()",
          "selectTournamentWinner(address,uint256,uint8)",
          "claimTournamentPayout()",
          "endTournament(bytes32)",
          "verifyEvent(address,uint256,uint8,bool)",
          "getHolderBalance(address,uint256,uint8,address)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,uint8,uint256)",
          "getSellPrice(address,uint256,uint8,uint256)",
          "getBuyPriceAfterFee(address,uint256,uint8,uint256)",
          "getSellPriceAfterFee(address,uint256,uint8,uint256)",
          "buyVotes(address,uint256,uint8,uint256)",
          "sellVotes(address,uint256,uint8,uint256)",
          "claimVotePayout(address,uint256,uint8)",
          "buyVIPBadge(address,uint256,uint8,uint256)",
          "sellVIPBadge(address,uint256,uint8,uint256)",
          "getVotePayout(address,uint256,uint8,address)",
          "closeEventIfNoWinners(address,uint256,uint8)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV2",
            "src": "contracts\\UnlonelySharesV2.sol:167"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV2.sol:17"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "activeTournament",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Tournament)5856_storage",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:103"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:105"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:106"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:107"
            },
            {
              "label": "tournamentFeePercent",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:108"
            },
            {
              "label": "yayVotesBalance",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:127"
            },
            {
              "label": "nayVotesBalance",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:128"
            },
            {
              "label": "yayVotesSupply",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:130"
            },
            {
              "label": "nayVotesSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:131"
            },
            {
              "label": "vipBadgeSupply",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:134"
            },
            {
              "label": "vipBadgeBalance",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:135"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:137"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:138"
            },
            {
              "label": "votingPooledEth",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:141"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:144"
            },
            {
              "label": "isTournamentCreator",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV2",
              "src": "contracts\\UnlonelySharesV2.sol:145"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_bytes32": {
              "label": "bytes32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)"
            },
            "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
              "label": "mapping(bytes32 => mapping(address => uint256))"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)"
            },
            "t_struct(Tournament)5856_storage": {
              "label": "struct UnlonelySharesV2.Tournament",
              "members": [
                {
                  "label": "isActive",
                  "type": "t_bool"
                },
                {
                  "label": "isWinnerSelected",
                  "type": "t_bool"
                },
                {
                  "label": "winningBadge",
                  "type": "t_bytes32"
                },
                {
                  "label": "vipPooledEth",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "8f5557ade4ca365f9d14b497ff06aa53d50371c8845668b26ef05b16156c673d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "9a5730956c4cb8012de86e3a8b744d0083b716b2576ada862f5b28c07ff56089",
          "withoutMetadata": "8b971cea53bb1a022be0c11c534ce8641e88a2d2ca72fccb94848187adf1232a",
          "linkedWithoutMetadata": "8b971cea53bb1a022be0c11c534ce8641e88a2d2ca72fccb94848187adf1232a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "969690c84c8d998152c4224dc882735ce11d26fcf48822dbacc67a235947c490",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:8",
        "version": {
          "withMetadata": "9e57d1979688e1eabbdffccb93b061763ed3f4bd8d95b028992843fc5e453a11",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:11"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:15"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "f21ffd8fa584040a7dae3962eb4097f5a699661ba9a42eeda573b553da34ca92",
          "withoutMetadata": "0231f45c879c7387812d082f7859fc7f5071d7f873fb5b8d9038f792f37e7080",
          "linkedWithoutMetadata": "0231f45c879c7387812d082f7859fc7f5071d7f873fb5b8d9038f792f37e7080"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelySharesV1.sol:8",
        "version": {
          "withMetadata": "fb4643c444f2ecc1968814e89cd7ad29b770eb79dc9e2bbdeeaedcc500e6558d",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelySharesV1.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:11"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:12"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:13"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:15"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelySharesV1.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:7",
        "version": {
          "withMetadata": "897a80adae63b6a4470e871df168aae0733aaf981644ccb1a78e8cec4db6389f",
          "withoutMetadata": "ef505d50dce3d0f4864cedc78f1d19cecec79eb1ce7f0b4ef1dde76e642e5780",
          "linkedWithoutMetadata": "ef505d50dce3d0f4864cedc78f1d19cecec79eb1ce7f0b4ef1dde76e642e5780"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:10"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:11"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "f21ffd8fa584040a7dae3962eb4097f5a699661ba9a42eeda573b553da34ca92",
          "withoutMetadata": "0231f45c879c7387812d082f7859fc7f5071d7f873fb5b8d9038f792f37e7080",
          "linkedWithoutMetadata": "0231f45c879c7387812d082f7859fc7f5071d7f873fb5b8d9038f792f37e7080"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "c411b3b1bb06b4bf39586833837dd0af210186c6e35ec23f1fbf3237456fa7ff",
          "withoutMetadata": "5c7ad2bfc5aaeb6901b87d109b8d567141ab97b8729cb7b9d1bfede24aafc98a",
          "linkedWithoutMetadata": "5c7ad2bfc5aaeb6901b87d109b8d567141ab97b8729cb7b9d1bfede24aafc98a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEventIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "926103b373e49cb7d58daee04198a1290317466ecc383771e44393c68784f413",
          "withoutMetadata": "a37a77a69afd6cc0fbeb0f72f5dc2ea99135b0e3b445f771e5a8acb7e189e4cd",
          "linkedWithoutMetadata": "a37a77a69afd6cc0fbeb0f72f5dc2ea99135b0e3b445f771e5a8acb7e189e4cd"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeEvent(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:113"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "yayShareHolders",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "nayShareHolders",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:102"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "ababe0eecb48affefeea31d82a876dc93a9727500d8f037bbfa73264f0cdbf41",
          "withoutMetadata": "20a535057bb00462ddc3d8e4ac38bd032eb1624410a190384e403f45cb25d3e1",
          "linkedWithoutMetadata": "20a535057bb00462ddc3d8e4ac38bd032eb1624410a190384e403f45cb25d3e1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closePoolIfNoWinners(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:110"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:91"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:95"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:98"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "01dd463f13c5d2e4d8ada040e54d975cb04b25743bbb09341e1dfcc3858175c4",
          "withoutMetadata": "7d860fd046144bd585588fdd12ad3ac5a8a2565a8e0be976bd9378834e5d5b7a",
          "linkedWithoutMetadata": "7d860fd046144bd585588fdd12ad3ac5a8a2565a8e0be976bd9378834e5d5b7a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeVerifiedPool(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "036efd44fe678fc07de746f4375075abb8020e3e4e3cd39769c2f4c3573592cb",
          "withoutMetadata": "f6c0036656b95a539f5b4894a3e5b273d14d69e09d0242f9a87769c94764421a",
          "linkedWithoutMetadata": "f6c0036656b95a539f5b4894a3e5b273d14d69e09d0242f9a87769c94764421a"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "closeVerifiedPool(address)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "2d7ca1bf28e7805a2040ef23f8489bb4423e66e825b15cd582a7091444393e58",
          "withoutMetadata": "8691be82451421ced9dd222265423db9f2be91986ba57cfb1ae1089084ab814d",
          "linkedWithoutMetadata": "8691be82451421ced9dd222265423db9f2be91986ba57cfb1ae1089084ab814d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "87bc786c190aa44beae64516d04c388070610bdf71557fc3e7276b7c8c5c6b77",
          "withoutMetadata": "8b975ea504f5a5c4f86b22bbfef514c667dda4a32bd3447d39bb17bd15aabb5d",
          "linkedWithoutMetadata": "8b975ea504f5a5c4f86b22bbfef514c667dda4a32bd3447d39bb17bd15aabb5d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "c7bd6a8d459d017182e4fdc156185401a799cc0b5fdef6a117c1161af1e77e69",
          "withoutMetadata": "22b17f2add1773f2c975f6a9539cc43b7aebc105e50822ffb5f6b901f615082f",
          "linkedWithoutMetadata": "22b17f2add1773f2c975f6a9539cc43b7aebc105e50822ffb5f6b901f615082f"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "3f4ac78fc1d653407c781db067cddee8e5e7086f638dc99afd722f9d7c839d45",
          "withoutMetadata": "955d9abdfb291942a1042aa8ec653bccf369d3556b6d6f3de36216065599b90d",
          "linkedWithoutMetadata": "955d9abdfb291942a1042aa8ec653bccf369d3556b6d6f3de36216065599b90d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address,address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "c1e7441ec076ee59333e99e6bbd0515fb18db52acef9ba6bc9bd28b823328f7e",
          "withoutMetadata": "b14837ffc13215f4cf15ad2602d81bf8a120a2e99f714c97f867c546fee6ee7d",
          "linkedWithoutMetadata": "b14837ffc13215f4cf15ad2602d81bf8a120a2e99f714c97f867c546fee6ee7d"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "setIsPaused(bool)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:85"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "5e26986bb87e4a807d2b2088017a3b1cff59f42db56e5d5c2b442dabd070c431",
          "withoutMetadata": "62c1a1953b796292a79e9e950a4998c2fc8dbec398ee719254812428c423d1fb",
          "linkedWithoutMetadata": "62c1a1953b796292a79e9e950a4998c2fc8dbec398ee719254812428c423d1fb"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "getPayout(address)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "500960f6b1795382ab8eaf67cb7249552e1d7ebe2269239ccd1e6da9189b7762",
          "withoutMetadata": "82ae02f3804d3006dd83d16d0f95cf923e5b9ea30998dfda6fc97816f85f8143",
          "linkedWithoutMetadata": "82ae02f3804d3006dd83d16d0f95cf923e5b9ea30998dfda6fc97816f85f8143"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "d39fef0b5e0985f48cd68ff69341bb48dfdee88f03ec461d1e659a2e0482417f",
          "withoutMetadata": "d91c0a7adf82af0abe0a0c731f3bdbc9a2397dacf32b8e88afffe7bbfd39b979",
          "linkedWithoutMetadata": "d91c0a7adf82af0abe0a0c731f3bdbc9a2397dacf32b8e88afffe7bbfd39b979"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "c4391ee6e7b89fef2055445930662691298a032063432b32dd545d42ef77e96c",
          "withoutMetadata": "16badd7054f220e3ed1d6b76f2f0c3d30f439136695ad912d831f2d2853f399c",
          "linkedWithoutMetadata": "16badd7054f220e3ed1d6b76f2f0c3d30f439136695ad912d831f2d2853f399c"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "efd4a4f2204e4e082394ed7093fa4445783fa22a77a5e35f10b78c86ceefdf64",
          "withoutMetadata": "b1199aef42d2763f69ca1377fd42ef04678c347a29b14b3b6bcdb6e8dc832f58",
          "linkedWithoutMetadata": "b1199aef42d2763f69ca1377fd42ef04678c347a29b14b3b6bcdb6e8dc832f58"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "d466230d33cb5c2d520a5d0ac5c58e4aee7610d0fa49118fa6a9bca2ad2121a8",
          "withoutMetadata": "d10622a630eb9c8190166b5375f8634956f78c741981437c00cff25d34217637",
          "linkedWithoutMetadata": "d10622a630eb9c8190166b5375f8634956f78c741981437c00cff25d34217637"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "3b44e12da0da082b6838cfdbb3341c92b4f52442e4efe4a3986efb5d4096f4ed",
          "withoutMetadata": "57ac4d3bb32a14cb16d1d8689f36b4b79c3e81436cddfb659d2b93b48faabbe8",
          "linkedWithoutMetadata": "57ac4d3bb32a14cb16d1d8689f36b4b79c3e81436cddfb659d2b93b48faabbe8"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:81",
        "version": {
          "withMetadata": "e8d47aae7db78221dc47e78ba269ff1eb95a648125f58227cf2b632c881a50f8",
          "withoutMetadata": "5e5e7fd1ac3e2de7b227c8050ebd556382a3f6b84fa2a55bc246a8da19305adf",
          "linkedWithoutMetadata": "5e5e7fd1ac3e2de7b227c8050ebd556382a3f6b84fa2a55bc246a8da19305adf"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getHolderSharesBalance(address,address,bool)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:111"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:16"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:82"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:83"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:84"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:92"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:93"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:96"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:97"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:99"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:100"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:101"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:104"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:45",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:116",
        "version": {
          "withMetadata": "dc39a651e943e6396b753162658bc91b4b13fe47fcd20ac745ee28581a946deb",
          "withoutMetadata": "57c3427fe8735bf31eb5086fca8b5d0b618b8508570de8bfec0238236416e766",
          "linkedWithoutMetadata": "57c3427fe8735bf31eb5086fca8b5d0b618b8508570de8bfec0238236416e766"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(address,uint256,bool,bool)",
          "getHolderSharesBalance(address,address,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:146"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:46"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:117"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:118"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:119"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:127"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:128"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:131"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:132"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:134"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:135"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:136"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:139"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "contracts\\UnlonelySharesV1.sol:47",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts\\UnlonelySharesV1.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "b252818a1fc5adf256b24e0945d5efac8bc9502573857d134848dde3feea3e91",
          "withoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc",
          "linkedWithoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts\\UnlonelySharesV1.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "67faaf5c5e9ea273d54d23c38ba720edf103d73bda6fc0bae7971cb6e4a600c0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "53fbe396a5d2f5ebbee487918a8437f8a90561167f888f3f2e2f20e9022ff5d9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "c37d1538cbe4754fff0d598564c477cb41dff94a11a24e851931e93fa77bde97",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin\\contracts\\utils\\math\\SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts\\BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "02f135a42bffff18b1f5243144b94436d935993f7de6da35e838cd37a1340da1",
          "withoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428",
          "linkedWithoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts\\BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "969690c84c8d998152c4224dc882735ce11d26fcf48822dbacc67a235947c490",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)777)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)777)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "029b9fd4a2674ebff314080ebd298080273a6f5398703579706fa775f3dce0f2",
          "withoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d",
          "linkedWithoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2708_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts\\UnlonelySharesV1.sol:118",
        "version": {
          "withMetadata": "60573078c0f9dea1c814391b261bf4abd49e86a448942984360eef91ec962102",
          "withoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1",
          "linkedWithoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(uint256,uint256)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts\\UnlonelySharesV1.sol:150"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts\\UnlonelySharesV1.sol:48"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:121"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:122"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:123"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:131"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:132"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:135"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:136"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:138"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:139"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:140"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts\\UnlonelySharesV1.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/UnlonelySharesV1.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/UnlonelySharesV1.sol:47",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/UnlonelySharesV1.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelySharesV1.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts/UnlonelySharesV1.sol:118",
        "version": {
          "withMetadata": "087299c9a8b475c492061850a9366aa6cde6935d0ce6eff32ebecc6934d7fc7f",
          "withoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1",
          "linkedWithoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(uint256,uint256)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts/UnlonelySharesV1.sol:150"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelySharesV1.sol:48"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:121"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:122"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:123"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:131"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:132"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:135"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:136"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:138"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:139"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:140"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelySharesV1.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "b1419d93740f6c540daf5e501ac513fad6cf793e3d3c6f14a2a66f8359d85a7b",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/UnlonelyShareContract.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/UnlonelyShareContract.sol:47",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/UnlonelyShareContract.sol:55"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelyShareContract.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts/UnlonelyShareContract.sol:118",
        "version": {
          "withMetadata": "528c7516846f9d99b2fc4593705aa9b327e5f4ec75d027816806d5a36d1f849a",
          "withoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1",
          "linkedWithoutMetadata": "57425c668c6896c0f93acc4636d52b25a13d17f6de51c7ef32908e8a3b5b34b1"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "()",
          "addVerifier(address)",
          "removeVerifier(address)",
          "verifyEvent(address,bool)",
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(uint256,uint256)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)",
          "claimPayout(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelySharesV1",
            "src": "contracts/UnlonelyShareContract.sol:150"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelyShareContract.sol:48"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:121"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:122"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:123"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:131"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:132"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:135"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:136"
            },
            {
              "label": "eventVerified",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:138"
            },
            {
              "label": "eventResult",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:139"
            },
            {
              "label": "isVerifier",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:140"
            },
            {
              "label": "pooledEth",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:143"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "contracts/UnlonelyShareContract.sol:48",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/UnlonelyShareContract.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelyShareContract.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b252818a1fc5adf256b24e0945d5efac8bc9502573857d134848dde3feea3e91",
          "withoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc",
          "linkedWithoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/UnlonelyShareContract.sol:18",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "67faaf5c5e9ea273d54d23c38ba720edf103d73bda6fc0bae7971cb6e4a600c0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "53fbe396a5d2f5ebbee487918a8437f8a90561167f888f3f2e2f20e9022ff5d9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "c37d1538cbe4754fff0d598564c477cb41dff94a11a24e851931e93fa77bde97",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts/BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "b9ba89be3c6db3d8caf62fa586633d8364475061de8846a42018288561fb5688",
          "withoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428",
          "linkedWithoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts/BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelySharesV1": {
        "src": "contracts/UnlonelyShareContract.sol:122",
        "version": {
          "withMetadata": "db07a8f39c0457e6e14a848fac8e9da4f1b3ae34403199ff96efd8d580716acf",
          "withoutMetadata": "9736a43e16f77f9f775b4ed58a412e18217f8c6b670771a1a5fbf124b0c84569",
          "linkedWithoutMetadata": "9736a43e16f77f9f775b4ed58a412e18217f8c6b670771a1a5fbf124b0c84569"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "setFeeDestination(address)",
          "setProtocolFeePercent(uint256)",
          "setSubjectFeePercent(uint256)",
          "getPrice(uint256,uint256)",
          "getBuyPrice(address,uint256,bool)",
          "getSellPrice(address,uint256,bool)",
          "getBuyPriceAfterFee(address,uint256,bool)",
          "getSellPriceAfterFee(address,uint256,bool)",
          "buyShares(address,uint256,bool)",
          "sellShares(address,uint256,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/UnlonelyShareContract.sol:49"
            },
            {
              "label": "protocolFeeDestination",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:123"
            },
            {
              "label": "protocolFeePercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:124"
            },
            {
              "label": "subjectFeePercent",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:125"
            },
            {
              "label": "yaySharesBalance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:131"
            },
            {
              "label": "naySharesBalance",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:132"
            },
            {
              "label": "yaySharesSupply",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:136"
            },
            {
              "label": "naySharesSupply",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelySharesV1",
              "src": "contracts/UnlonelyShareContract.sol:137"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts/UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "f3a1ac3396131fe20e6d7a04e302023782844ab4e4a43d8db035211cbc77cc85",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts/UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)777)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts/UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)777)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts/UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "a93f8b7233b7032ba126e286964bb28ee6ded2b6dbd9d370bdb864c2c27016e8",
          "withoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d",
          "linkedWithoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts/UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2708_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts/UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "b252818a1fc5adf256b24e0945d5efac8bc9502573857d134848dde3feea3e91",
          "withoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc",
          "linkedWithoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "67faaf5c5e9ea273d54d23c38ba720edf103d73bda6fc0bae7971cb6e4a600c0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "53fbe396a5d2f5ebbee487918a8437f8a90561167f888f3f2e2f20e9022ff5d9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "c37d1538cbe4754fff0d598564c477cb41dff94a11a24e851931e93fa77bde97",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "969690c84c8d998152c4224dc882735ce11d26fcf48822dbacc67a235947c490",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "029b9fd4a2674ebff314080ebd298080273a6f5398703579706fa775f3dce0f2",
          "withoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d",
          "linkedWithoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2595_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2595_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UnlonelyArcadeContractV1": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "969690c84c8d998152c4224dc882735ce11d26fcf48822dbacc67a235947c490",
          "withoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1",
          "linkedWithoutMetadata": "3d309bf2436bdaf54405036bd29bb0b4f48d5f896e283a8283677ec6f89959b1"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrices(address[],uint256[])",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContractV1",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)664)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContractV1",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)664": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)664)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "8651b46f93d6505d41caa3111f744196af461d9ab192ea1f0ae3106f94664ede",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\draft-IERC20Permit.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "d407aac5fb66a4ac8fdc73f49e693159bb94741901cabe3f5ff80ae46f9e1f38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:19",
        "version": {
          "withMetadata": "b252818a1fc5adf256b24e0945d5efac8bc9502573857d134848dde3feea3e91",
          "withoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc",
          "linkedWithoutMetadata": "7ef46cabfa4ac54a080f1973198a70d83a95c77d82fc28f8af3a02b59f6184bc"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)777)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "17b8071c46bcaae5fed6ad29e29bb906fa15ef1b5088f877bb7ac6ccecafd630",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin\\contracts\\utils\\Counters.sol:14",
        "version": {
          "withMetadata": "67faaf5c5e9ea273d54d23c38ba720edf103d73bda6fc0bae7971cb6e4a600c0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin\\contracts\\utils\\Strings.sol:11",
        "version": {
          "withMetadata": "53fbe396a5d2f5ebbee487918a8437f8a90561167f888f3f2e2f20e9022ff5d9",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "c37d1538cbe4754fff0d598564c477cb41dff94a11a24e851931e93fa77bde97",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BrianToken": {
        "src": "contracts\\BrianTokenContract.sol:9",
        "version": {
          "withMetadata": "02f135a42bffff18b1f5243144b94436d935993f7de6da35e838cd37a1340da1",
          "withoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428",
          "linkedWithoutMetadata": "5e729b575999299d2d435308a49de42c068b0d21557a777642968afd3ea85428"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BrianToken",
            "src": "contracts\\BrianTokenContract.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyArcadeContract": {
        "src": "contracts\\UnlonelyArcadeContractV2.sol:9",
        "version": {
          "withMetadata": "99adebb7a0375dc43730f264761bf8a9756326c87bf0fda631edba72583a5dc9",
          "withoutMetadata": "dc375b509709f0a73f735c123e1a06fa7a3f7bfd12f171a1a70ae4f1bafb716f",
          "linkedWithoutMetadata": "dc375b509709f0a73f735c123e1a06fa7a3f7bfd12f171a1a70ae4f1bafb716f"
        },
        "inherit": [],
        "libraries": [
          "SafeERC20"
        ],
        "methods": [
          "()",
          "calculateEthAmount(address,uint256)",
          "addCreatorToken(address,uint256,address)",
          "setTokenPrice(address,uint256)",
          "buyCreatorToken(address,uint256)",
          "useFeature(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyArcadeContract",
            "src": "contracts\\UnlonelyArcadeContractV2.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "brian",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:12"
            },
            {
              "label": "danny",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:13"
            },
            {
              "label": "grace",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:14"
            },
            {
              "label": "creatorTokens",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(IERC20)777)",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:16"
            },
            {
              "label": "tokenPrices",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:17"
            },
            {
              "label": "tokenOwners",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_address)",
              "contract": "UnlonelyArcadeContract",
              "src": "contracts\\UnlonelyArcadeContractV2.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_contract(IERC20)777": {
              "label": "contract IERC20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)"
            },
            "t_mapping(t_address,t_contract(IERC20)777)": {
              "label": "mapping(address => contract IERC20)"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UnlonelyNFCsV2": {
        "src": "contracts\\UnlonelyNFCsV2.sol:8",
        "version": {
          "withMetadata": "029b9fd4a2674ebff314080ebd298080273a6f5398703579706fa775f3dce0f2",
          "withoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d",
          "linkedWithoutMetadata": "0aed45fc6af2bb7d14a7aca89c10955bf68753725d125fd5dded064d726a281d"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "(string,string)",
          "mint(address,string)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnlonelyNFCsV2",
            "src": "contracts\\UnlonelyNFCsV2.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin\\contracts\\token\\ERC721\\extensions\\ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenIds",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)2708_storage",
              "contract": "UnlonelyNFCsV2",
              "src": "contracts\\UnlonelyNFCsV2.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Counter)2708_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}